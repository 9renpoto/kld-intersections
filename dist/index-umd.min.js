!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).KldIntersections={})}(this,function(t){"use strict";function e(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function i(t,e,i){return e&&n(t.prototype,e),i&&n(t,i),t}function r(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=[],i=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(i=(s=o.next()).done)&&(n.push(s.value),!e||n.length!==e);i=!0);}catch(t){r=!0,a=t}finally{try{i||null==o.return||o.return()}finally{if(r)throw a}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function a(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var s=function(){function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;e(this,t),this.x=n,this.y=i}return i(t,[{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"add",value:function(t){return new this.constructor(this.x+t.x,this.y+t.y)}},{key:"subtract",value:function(t){return new this.constructor(this.x-t.x,this.y-t.y)}},{key:"multiply",value:function(t){return new this.constructor(this.x*t,this.y*t)}},{key:"divide",value:function(t){return new this.constructor(this.x/t,this.y/t)}},{key:"equals",value:function(t){return this.x===t.x&&this.y===t.y}},{key:"precisionEquals",value:function(t,e){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}},{key:"lerp",value:function(t,e){var n=1-e;return new this.constructor(this.x*n+t.x*e,this.y*n+t.y*e)}},{key:"distanceFrom",value:function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)}},{key:"min",value:function(t){return new this.constructor(Math.min(this.x,t.x),Math.min(this.y,t.y))}},{key:"max",value:function(t){return new this.constructor(Math.max(this.x,t.x),Math.max(this.y,t.y))}},{key:"transform",value:function(t){return new this.constructor(t.a*this.x+t.c*this.y+t.e,t.b*this.x+t.d*this.y+t.f)}},{key:"toString",value:function(){return"point(".concat(this.x,",").concat(this.y,")")}}]),t}(),o=function(){function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;e(this,t),this.x=n,this.y=i}return i(t,[{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"magnitude",value:function(){return this.x*this.x+this.y*this.y}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y}},{key:"cross",value:function(t){return this.x*t.y-this.y*t.x}},{key:"determinant",value:function(t){return this.x*t.y-this.y*t.x}},{key:"unit",value:function(){return this.divide(this.length())}},{key:"add",value:function(t){return new this.constructor(this.x+t.x,this.y+t.y)}},{key:"subtract",value:function(t){return new this.constructor(this.x-t.x,this.y-t.y)}},{key:"multiply",value:function(t){return new this.constructor(this.x*t,this.y*t)}},{key:"divide",value:function(t){return new this.constructor(this.x/t,this.y/t)}},{key:"angleBetween",value:function(t){var e=this.dot(t)/(this.length()*t.length());e=Math.max(-1,Math.min(e,1));var n=Math.acos(e);return this.cross(t)<0?-n:n}},{key:"perp",value:function(){return new this.constructor(-this.y,this.x)}},{key:"perpendicular",value:function(t){return this.subtract(this.project(t))}},{key:"project",value:function(t){var e=this.dot(t)/t.dot(t);return t.multiply(e)}},{key:"transform",value:function(t){return new this.constructor(t.a*this.x+t.c*this.y,t.b*this.x+t.d*this.y)}},{key:"equals",value:function(t){return this.x===t.x&&this.y===t.y}},{key:"precisionEquals",value:function(t,e){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}},{key:"toString",value:function(){return"vector(".concat(this.x,",").concat(this.y,")")}}],[{key:"fromPoints",value:function(e,n){return new t(n.x-e.x,n.y-e.y)}}]),t}(),u=function(){function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;e(this,t),this.a=n,this.b=i,this.c=r,this.d=a,this.e=s,this.f=o}return i(t,[{key:"multiply",value:function(t){return this.isIdentity()?t:t.isIdentity()?this:new this.constructor(this.a*t.a+this.c*t.b,this.b*t.a+this.d*t.b,this.a*t.c+this.c*t.d,this.b*t.c+this.d*t.d,this.a*t.e+this.c*t.f+this.e,this.b*t.e+this.d*t.f+this.f)}},{key:"inverse",value:function(){if(this.isIdentity())return this;var t=this.a*this.d-this.b*this.c;if(0===t)throw new Error("Matrix is not invertible");var e=1/t,n=this.f*this.c-this.e*this.d,i=this.e*this.b-this.f*this.a;return new this.constructor(this.d*e,-this.b*e,-this.c*e,this.a*e,n*e,i*e)}},{key:"translate",value:function(t,e){return new this.constructor(this.a,this.b,this.c,this.d,this.a*t+this.c*e+this.e,this.b*t+this.d*e+this.f)}},{key:"scale",value:function(t){return new this.constructor(this.a*t,this.b*t,this.c*t,this.d*t,this.e,this.f)}},{key:"scaleAt",value:function(t,e){var n=e.x-t*e.x,i=e.y-t*e.y;return new this.constructor(this.a*t,this.b*t,this.c*t,this.d*t,this.a*n+this.c*i+this.e,this.b*n+this.d*i+this.f)}},{key:"scaleNonUniform",value:function(t,e){return new this.constructor(this.a*t,this.b*t,this.c*e,this.d*e,this.e,this.f)}},{key:"scaleNonUniformAt",value:function(t,e,n){var i=n.x-t*n.x,r=n.y-e*n.y;return new this.constructor(this.a*t,this.b*t,this.c*e,this.d*e,this.a*i+this.c*r+this.e,this.b*i+this.d*r+this.f)}},{key:"rotate",value:function(t){var e=Math.cos(t),n=Math.sin(t);return new this.constructor(this.a*e+this.c*n,this.b*e+this.d*n,this.a*-n+this.c*e,this.b*-n+this.d*e,this.e,this.f)}},{key:"rotateAt",value:function(t,e){var n=Math.cos(t),i=Math.sin(t),r=e.x,a=e.y,s=this.a*n+this.c*i,o=this.b*n+this.d*i,u=this.c*n-this.a*i,l=this.d*n-this.b*i;return new this.constructor(s,o,u,l,(this.a-s)*r+(this.c-u)*a+this.e,(this.b-o)*r+(this.d-l)*a+this.f)}},{key:"rotateFromVector",value:function(t){var e=t.unit(),n=e.x,i=e.y;return new this.constructor(this.a*n+this.c*i,this.b*n+this.d*i,this.a*-i+this.c*n,this.b*-i+this.d*n,this.e,this.f)}},{key:"flipX",value:function(){return new this.constructor(-this.a,-this.b,this.c,this.d,this.e,this.f)}},{key:"flipY",value:function(){return new this.constructor(this.a,this.b,-this.c,-this.d,this.e,this.f)}},{key:"skewX",value:function(t){var e=Math.tan(t);return new this.constructor(this.a,this.b,this.c+this.a*e,this.d+this.b*e,this.e,this.f)}},{key:"skewY",value:function(t){var e=Math.tan(t);return new this.constructor(this.a+this.c*e,this.b+this.d*e,this.c,this.d,this.e,this.f)}},{key:"isIdentity",value:function(){return 1===this.a&&0===this.b&&0===this.c&&1===this.d&&0===this.e&&0===this.f}},{key:"isInvertible",value:function(){return this.a*this.d-this.b*this.c!=0}},{key:"getScale",value:function(){return{scaleX:Math.sqrt(this.a*this.a+this.c*this.c),scaleY:Math.sqrt(this.b*this.b+this.d*this.d)}}},{key:"getDecomposition",value:function(){var t=.5*(this.a+this.d),e=.5*(this.a-this.d),n=.5*(this.b+this.c),i=.5*(this.b-this.c),r=Math.sqrt(t*t+i*i),a=Math.sqrt(e*e+n*n),s=r+a,o=r-a,u=Math.atan2(n,e),l=Math.atan2(i,t),c=.5*(l-u),h=.5*(l+u);return{translation:this.constructor.translation(this.e,this.f),rotation:this.constructor.rotation(h),scale:this.constructor.nonUniformScaling(s,o),rotation0:this.constructor.rotation(c)}}},{key:"equals",value:function(t){return this.a===t.a&&this.b===t.b&&this.c===t.c&&this.d===t.d&&this.e===t.e&&this.f===t.f}},{key:"precisionEquals",value:function(t,e){return Math.abs(this.a-t.a)<e&&Math.abs(this.b-t.b)<e&&Math.abs(this.c-t.c)<e&&Math.abs(this.d-t.d)<e&&Math.abs(this.e-t.e)<e&&Math.abs(this.f-t.f)<e}},{key:"toString",value:function(){return"matrix(".concat(this.a,",").concat(this.b,",").concat(this.c,",").concat(this.d,",").concat(this.e,",").concat(this.f,")")}}],[{key:"translation",value:function(e,n){return new t(1,0,0,1,e,n)}},{key:"scaling",value:function(e){return new t(e,0,0,e,0,0)}},{key:"scalingAt",value:function(e,n){return new t(e,0,0,e,n.x-n.x*e,n.y-n.y*e)}},{key:"nonUniformScaling",value:function(e,n){return new t(e,0,0,n,0,0)}},{key:"nonUniformScalingAt",value:function(e,n,i){return new t(e,0,0,n,i.x-i.x*e,i.y-i.y*n)}},{key:"rotation",value:function(e){var n=Math.cos(e),i=Math.sin(e);return new t(n,i,-i,n,0,0)}},{key:"rotationAt",value:function(e,n){var i=Math.cos(e),r=Math.sin(e);return new t(i,r,-r,i,n.x-n.x*i+n.y*r,n.y-n.y*i-n.x*r)}},{key:"rotationFromVector",value:function(e){var n=e.unit(),i=n.x,r=n.y;return new t(i,r,-r,i,0,0)}},{key:"xFlip",value:function(){return new t(-1,0,0,1,0,0)}},{key:"yFlip",value:function(){return new t(1,0,0,-1,0,0)}},{key:"xSkew",value:function(e){return new t(1,0,Math.tan(e),1,0,0)}},{key:"ySkew",value:function(e){return new t(1,Math.tan(e),0,1,0,0)}}]),t}();function l(t){return"number"==typeof t?t?t<0?-1:1:t==t?t:NaN:NaN}u.IDENTITY=new u,u.IDENTITY.isIdentity=function(){return!0};var c=function(){function t(){e(this,t),this.coefs=[];for(var n=arguments.length-1;n>=0;n--)this.coefs.push(n<0||arguments.length<=n?void 0:arguments[n]);this._variable="t",this._s=0}return i(t,[{key:"clone",value:function(){var e=new t;return e.coefs=this.coefs.slice(),e}},{key:"eval",value:function(t){if(isNaN(t))throw new TypeError("Parameter must be a number. Found '".concat(t,"'"));for(var e=0,n=this.coefs.length-1;n>=0;n--)e=e*t+this.coefs[n];return e}},{key:"add",value:function(e){for(var n=new t,i=this.getDegree(),r=e.getDegree(),a=Math.max(i,r),s=0;s<=a;s++){var o=s<=i?this.coefs[s]:0,u=s<=r?e.coefs[s]:0;n.coefs[s]=o+u}return n}},{key:"multiply",value:function(e){for(var n=new t,i=0;i<=this.getDegree()+e.getDegree();i++)n.coefs.push(0);for(var r=0;r<=this.getDegree();r++)for(var a=0;a<=e.getDegree();a++)n.coefs[r+a]+=this.coefs[r]*e.coefs[a];return n}},{key:"divideEqualsScalar",value:function(t){for(var e=0;e<this.coefs.length;e++)this.coefs[e]/=t}},{key:"simplifyEquals",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e-12,e=this.getDegree();e>=0&&Math.abs(this.coefs[e])<=t;e--)this.coefs.pop()}},{key:"removeZerosEquals",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e-15,e=this.coefs,n=10*t*Math.abs(e.reduce(function(t,e){return Math.abs(e)>Math.abs(t)?e:t})),i=0;i<e.length-1;i++)Math.abs(e[i])<n&&(e[i]=0);return this}},{key:"monicEquals",value:function(){var t=this.coefs;return 1!==t[t.length-1]&&this.divideEqualsScalar(t[t.length-1]),this}},{key:"toString",value:function(){for(var t=[],e=[],n=this.coefs.length-1;n>=0;n--){var i=Math.round(1e3*this.coefs[n])/1e3;if(0!==i){var r=i<0?" - ":" + ";i=Math.abs(i),n>0&&(1===i?i=this._variable:i+=this._variable),n>1&&(i+="^"+n),e.push(r),t.push(i)}}e[0]=" + "===e[0]?"":"-";for(var a="",s=0;s<t.length;s++)a+=e[s]+t[s];return a}},{key:"bisection",value:function(t,e){var n,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e-6,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:15,a=this.eval(t),s=this.eval(e);if(Math.abs(a)<=i)n=t;else if(Math.abs(s)<=i)n=e;else if(a*s<=0)for(var o=Math.log(e-t),u=Math.LN10*r,l=Math.ceil((o+u)/Math.LN2),c=0;c<l;c++){n=.5*(t+e);var h=this.eval(n);if(Math.abs(h)<=i)break;h*a<0?(e=n,s=h):(t=n,a=h)}return n}},{key:"trapezoid",value:function(t,e,n){if(isNaN(t)||isNaN(e)||isNaN(n))throw new TypeError("Parameters must be numbers");var i=e-t;if(1===n){var r=this.eval(t),a=this.eval(e);this._s=.5*i*(r+a)}else{for(var s=1<<n-2,o=i/s,u=t+.5*o,l=0,c=0;c<s;c++)l+=this.eval(u),u+=o;this._s=.5*(this._s+i*l/s)}if(isNaN(this._s))throw new TypeError("this._s is NaN");return this._s}},{key:"simpson",value:function(t,e){if(isNaN(t)||isNaN(e))throw new TypeError("Parameters must be numbers");for(var n=e-t,i=.5*n*(this.eval(t)+this.eval(e)),r=i,a=4*i/3,s=a,o=i,u=1,l=2;l<=20;l++){for(var c=n/u,h=t+.5*c,y=0,f=1;f<=u;f++)y+=this.eval(h),h+=c;if(a=(4*(i=r=.5*(r+n*y/u))-o)/3,Math.abs(a-s)<1e-7*Math.abs(s))break;s=a,o=i,u<<=1}return a}},{key:"romberg",value:function(e,n){if(isNaN(e)||isNaN(n))throw new TypeError("Parameters must be numbers");var i=new Array(21),r=new Array(21),a={y:0,dy:0};r[0]=1;for(var s=1;s<=20&&(i[s-1]=this.trapezoid(e,n,s),!(s>=3&&(a=t.interpolate(r,i,3,s-3,0),Math.abs(a.dy)<=1e-6*a.y)));s++)i[s]=i[s-1],r[s]=.25*r[s-1];return a.y}},{key:"zeroErrorEstimate",value:function(t){if(void 0===t){var e=this.bounds();t=Math.max(Math.abs(e.minX),Math.abs(e.maxX))}if(t<.001)return 2*Math.abs(this.eval(1e-15));var n=this.coefs.length-1,i=this.coefs[n];return 10*1e-15*this.coefs.reduce(function(e,n,r){var a=n/i*Math.pow(t,r);return a>e?a:e},0)}},{key:"boundsUpperRealFujiwara",value:function(){var t=this.coefs,e=t.length-1,n=t[e];1!==n&&(t=this.coefs.map(function(t){return t/n}));var i,r=t.map(function(t,n){return n<e?Math.pow(Math.abs(0===n?t/2:t),1/(e-n)):t}),a=function(t,e,n){return i(n)&&(t.max<e?(t.nearmax=t.max,t.max=e):t.nearmax<e&&(t.nearmax=e)),t};i=function(n){return n<e&&t[n]<0};var s=r.reduce(a,{max:0,nearmax:0});return i=function(n){return n<e&&(e%2==n%2?t[n]<0:t[n]>0)},{negX:-2*r.reduce(a,{max:0,nearmax:0}).max,posX:2*s.max}}},{key:"boundsLowerRealFujiwara",value:function(){var e=new t;e.coefs=this.coefs.slice().reverse();var n=e.boundsUpperRealFujiwara();return n.negX=1/n.negX,n.posX=1/n.posX,n}},{key:"bounds",value:function(){var t=this.boundsUpperRealFujiwara(),e={minX:t.negX,maxX:t.posX};return 0===t.negX&&0===t.posX?e:(0===t.negX?e.minX=this.boundsLowerRealFujiwara().posX:0===t.posX&&(e.maxX=this.boundsLowerRealFujiwara().negX),e.minX>e.maxX&&(e.minX=e.maxX=0),e)}},{key:"boundUpperAbsRouche",value:function(){var t=this.coefs,e=t.length-1;return 1+t.reduce(function(t,n,i){return i!==e&&t<(n=Math.abs(n))?n:t},0)/Math.abs(t[e])}},{key:"boundLowerAbsRouche",value:function(){var t=this.coefs,e=t.reduce(function(t,e,n){return 0!==n&&t<(e=Math.abs(e))?e:t},0);return Math.abs(t[0])/(Math.abs(t[0])+e)}},{key:"boundsRealLaguerre",value:function(){var t=this.coefs,e=t.length-1,n=-t[e-1]/(e*t[e]),i=t[e-1]*t[e-1]-2*e/(e-1)*t[e]*t[e-2],r=(e-1)/(e*t[e])*Math.sqrt(i);return r<0&&(r=-r),{minX:n-r,maxX:n+r}}},{key:"countRootsDescartes",value:function(){var t=this.coefs,e=t.length-1,n=t.reduce(function(t,e,n){return 0!==t.prev_a&&0!==e&&(t.prev_a<0==e>0&&t.pos++,n%2==0!=t.prev_a<0==(n%2==1!=e>0)&&t.neg++),t.prev_a=e,t},{pos:0,neg:0,prev_a:0});return{maxRealPos:n.pos,maxRealNeg:n.neg,minComplex:e-(n.pos+n.neg)}}},{key:"getDegree",value:function(){return this.coefs.length-1}},{key:"getDerivative",value:function(){for(var e=new t,n=1;n<this.coefs.length;n++)e.coefs.push(n*this.coefs[n]);return e}},{key:"getRoots",value:function(){var t;switch(this.simplifyEquals(),this.getDegree()){case 0:t=[];break;case 1:t=this.getLinearRoot();break;case 2:t=this.getQuadraticRoots();break;case 3:t=this.getCubicRoots();break;case 4:t=this.getQuarticRoots();break;default:t=[]}return t}},{key:"getRootsInInterval",value:function(t,e){var n=[];function i(t){"number"==typeof t&&n.push(t)}if(0===this.getDegree())throw new RangeError("Unexpected empty polynomial");if(1===this.getDegree())i(this.bisection(t,e));else{var r=this.getDerivative().getRootsInInterval(t,e);if(r.length>0){i(this.bisection(t,r[0]));for(var a=0;a<=r.length-2;a++)i(this.bisection(r[a],r[a+1]));i(this.bisection(r[r.length-1],e))}else i(this.bisection(t,e))}return n}},{key:"getLinearRoot",value:function(){var t=[],e=this.coefs[1];return 0!==e&&t.push(-this.coefs[0]/e),t}},{key:"getQuadraticRoots",value:function(){var t=[];if(2===this.getDegree()){var e=this.coefs[2],n=this.coefs[1]/e,i=n*n-4*(this.coefs[0]/e);if(i>0){var r=Math.sqrt(i);t.push(.5*(-n+r)),t.push(.5*(-n-r))}else 0===i&&t.push(.5*-n)}return t}},{key:"getCubicRoots",value:function(){var t=[];if(3===this.getDegree()){var e=this.coefs[3],n=this.coefs[2]/e,i=this.coefs[1]/e,r=(3*i-n*n)/3,a=(2*n*n*n-9*i*n+27*(this.coefs[0]/e))/27,s=n/3,o=a*a/4+r*r*r/27,u=a/2,l=this.zeroErrorEstimate();if(Math.abs(o)<=l&&(o=0),o>0){var c,h=Math.sqrt(o),y=-u+h;c=y>=0?Math.pow(y,1/3):-Math.pow(-y,1/3),(y=-u-h)>=0?c+=Math.pow(y,1/3):c-=Math.pow(-y,1/3),t.push(c-s)}else if(o<0){var f=Math.sqrt(-r/3),p=Math.atan2(Math.sqrt(-o),-u)/3,x=Math.cos(p),d=Math.sin(p),v=Math.sqrt(3);t.push(2*f*x-s),t.push(-f*(x+v*d)-s),t.push(-f*(x-v*d)-s)}else{var b;b=u>=0?-Math.pow(u,1/3):Math.pow(-u,1/3),t.push(2*b-s),t.push(-b-s)}}return t}},{key:"getQuarticRoots",value:function(){var e=[],n=this.getDegree();if(4===n){var i=new t;i.coefs=this.coefs.slice(),i.divideEqualsScalar(i.coefs[n]);Math.abs(i.coefs[0])<10*1e-15*Math.abs(i.coefs[3])&&(i.coefs[0]=0);for(var r=i.getDerivative(),a=r.getRoots().sort(function(t,e){return t-e}),s=[],o=a.length-1,u=this.bounds(),c=Math.max(Math.abs(u.minX),Math.abs(u.maxX)),h=this.zeroErrorEstimate(c),y=0;y<=o;y++)s.push(i.eval(a[y]));for(var f=0;f<=o;f++)Math.abs(s[f])<h&&(s[f]=0);var p=0,x=Math.max(.1*(u.maxX-u.minX)/n,1e-15),d=[],v=[];if(o>-1){for(0!==s[0]?l(s[0])!==l(i.eval(a[0]-x)-s[0])&&(d.push(a[0]-x),v.push([u.minX,a[0]])):(e.push(a[0],a[0]),p++);p<o;p++)0===s[p+1]?(e.push(a[p+1],a[p+1]),p++):l(s[p])!==l(s[p+1])&&(d.push((a[p]+a[p+1])/2),v.push([a[p],a[p+1]]));0!==s[o]&&l(s[o])!==l(i.eval(a[o]+x)-s[o])&&(d.push(a[o]+x),v.push([a[o],u.maxX]))}var b=function(t){return i.eval(t)},w=function(t){return r.eval(t)};if(d.length>0)for(p=0;p<d.length;p++)d[p]=t.newtonSecantBisection(d[p],b,w,32,v[p][0],v[p][1]);e=e.concat(d)}return e}}],[{key:"interpolate",value:function(t,e,n,i,r){if(t.constructor!==Array||e.constructor!==Array)throw new TypeError("xs and ys must be arrays");if(isNaN(n)||isNaN(i)||isNaN(r))throw new TypeError("n, offset, and x must be numbers");var a,s,o=0,u=new Array(n),l=new Array(n),c=0,h=Math.abs(r-t[i]);for(a=0;a<n;a++){var y=Math.abs(r-t[i+a]);y<h&&(c=a,h=y),u[a]=l[a]=e[i+a]}s=e[i+c],c--;for(var f=1;f<n;f++){for(a=0;a<n-f;a++){var p=t[i+a]-r,x=t[i+a+f]-r,d=u[a+1]-l[a],v=p-x;if(0===v)throw new RangeError("Unable to interpolate polynomial. Two numbers in n were identical (to within roundoff)");v=d/v,l[a]=x*v,u[a]=p*v}s+=o=2*(c+1)<n-f?u[c+1]:l[c--]}return{y:s,dy:o}}},{key:"newtonSecantBisection",value:function(t,e,n,i,r,a){var s,o,u,c,h,y,f,p=0,x=0;s=t;var d=Math.pow(10,-14),v="number"==typeof r&&"number"==typeof a;if(v){if(r>a)throw new RangeError("Min must be greater than max");if(y=e(r),f=e(a),l(y)===l(f))throw new RangeError("Y values of bounds must be of opposite sign")}for(var b=function(){return Math.abs(u)<=d*Math.abs(s)||x===s-u-s},w=0;w<i;w++){if(0===(o=n(s))){if(0===p)throw new RangeError("df(x) is zero");o=p}if(p=o,h=e(s),c=s-(u=h/o),b())break;if(v){if(l(h)===l(f))a=s,f=h;else{if(l(h)!==l(y)){s=c;break}r=s,y=h}if(c<r||c>a){if(l(y)===l(f))break;var m=f-y,g=a-r;if(u=0===m?s-(r+.5*g):Math.abs(m/Math.min(y,f))>50?s-(r+g*(.5+(Math.abs(y)<Math.abs(f)?-.25:.25))):s-(r-y/m*g),c=s-u,b())break}}x=s-c,s=c}return s}}]),t}(),h=function(){function t(n,i){e(this,t),this.init(n,i)}return i(t,[{key:"init",value:function(t,e){this.name=t,this.args=e}}]),t}(),y=2*Math.PI,f=new o(1,0);function p(t){return null==t}function x(t){var e=t%y;return e<0?e+y:e}function d(t,e,n,i,r,a){if(0===t.points.length)return t;var s=new b("No Intersection"),u=x(r),l=x(a);l<u&&(l+=y),console.log("[startRadians = ".concat(r," endRadians = ").concat(a,"]")),console.log("[startNormal = ".concat(u," endRadians = ").concat(l,"]"));var c=!0,h=!1,p=void 0;try{for(var d,v=t.points[Symbol.iterator]();!(c=(d=v.next()).done);c=!0){var w=d.value,m=x(f.angleBetween(o.fromPoints(e,w)));u<=m&&m<=l&&s.appendPoint(w)}}catch(t){h=!0,p=t}finally{try{c||null==v.return||v.return()}finally{if(h)throw p}}return s.points.length>0&&(s.status="Intersection"),s}function v(t){var e=t.slice();return e.push(t[0]),e}var b=function(){function t(n){e(this,t),this.init(n)}return i(t,[{key:"init",value:function(t){this.status=t,this.points=[]}},{key:"appendPoint",value:function(t){this.points.push(t)}},{key:"appendPoints",value:function(t){this.points=this.points.concat(t)}}],[{key:"intersect",value:function(e,n){var i;if(p(e)||p(n))i=new t("No Intersection");else if("Path"===e.name)i=t.intersectPathShape(e,n);else if("Path"===n.name)i=t.intersectPathShape(n,e);else if("Arc"===e.name)i=t.intersectArcShape(e,n);else if("Arc"===n.name)i=t.intersectArcShape(n,e);else{var r,a;if(e.name<n.name?(r="intersect"+e.name+n.name,a=e.args.concat(n.args)):(r="intersect"+n.name+e.name,a=n.args.concat(e.args)),!(r in t))throw new Error("Intersection not available: "+r);i=t[r].apply(null,a)}return i}},{key:"intersectPathShape",value:function(e,n){var i=new t("No Intersection"),r=!0,a=!1,s=void 0;try{for(var o,u=e.args[Symbol.iterator]();!(r=(o=u.next()).done);r=!0){var l=o.value,c=t.intersect(l,n);i.appendPoints(c.points)}}catch(t){a=!0,s=t}finally{try{r||null==u.return||u.return()}finally{if(a)throw s}}return i.points.length>0&&(i.status="Intersection"),i}},{key:"intersectArcShape",value:function(e,n){var i=r(e.args,5),a=i[0],s=i[1],o=i[2],u=i[3],l=i[4],c=new h("Ellipse",[a,s,o]);return d(t.intersect(c,n),a,0,0,u,l)}},{key:"intersectBezier2Bezier2",value:function(e,n,i,r,a,o){var u,l,h=new t("No Intersection");u=n.multiply(-2);var y=e.add(u.add(i));u=e.multiply(-2),l=n.multiply(2);var f=u.add(l),p=new s(e.x,e.y);u=a.multiply(-2);var x=r.add(u.add(o));u=r.multiply(-2),l=a.multiply(2);var d=u.add(l),v=new s(r.x,r.y);u=y.x*f.y-f.x*y.y,l=x.x*f.y-f.x*x.y;var b=d.x*f.y-f.x*d.y,w=f.x*(p.y-v.y)+f.y*(-p.x+v.x),m=x.x*y.y-y.x*x.y,g=d.x*y.y-y.x*d.y,E=y.x*(p.y-v.y)+y.y*(-p.x+v.x),k=new c(-m*m,-2*m*g,u*l-g*g-2*m*E,u*b-2*g*E,u*w-E*E).getRoots(),N=!0,P=!1,M=void 0;try{for(var T,X=k[Symbol.iterator]();!(N=(T=X.next()).done);N=!0){var I=T.value;if(0<=I&&I<=1){var R=new c(y.x,f.x,p.x-v.x-I*d.x-I*I*x.x);R.simplifyEquals();var S=R.getRoots(),Y=new c(y.y,f.y,p.y-v.y-I*d.y-I*I*x.y);Y.simplifyEquals();var A=Y.getRoots();if(S.length>0&&A.length>0){var C=!0,L=!1,z=void 0;try{t:for(var D,B=S[Symbol.iterator]();!(C=(D=B.next()).done);C=!0){var q=D.value;if(0<=q&&q<=1)for(var V=0;V<A.length;V++)if(Math.abs(q-A[V])<1e-4){h.points.push(x.multiply(I*I).add(d.multiply(I).add(v)));break t}}}catch(t){L=!0,z=t}finally{try{C||null==B.return||B.return()}finally{if(L)throw z}}}}}}catch(t){P=!0,M=t}finally{try{N||null==X.return||X.return()}finally{if(P)throw M}}return h.points.length>0&&(h.status="Intersection"),h}},{key:"intersectBezier2Bezier3",value:function(e,n,i,r,a,o,u){var l,h,y,f,p=new t("No Intersection");l=n.multiply(-2);var x=e.add(l.add(i));l=e.multiply(-2),h=n.multiply(2);var d=l.add(h),v=new s(e.x,e.y);l=r.multiply(-1),h=a.multiply(3),y=o.multiply(-3),f=l.add(h.add(y.add(u)));var b=new s(f.x,f.y);l=r.multiply(3),h=a.multiply(-6),y=o.multiply(3),f=l.add(h.add(y));var w=new s(f.x,f.y);l=r.multiply(-3),h=a.multiply(3),y=l.add(h);var m=new s(y.x,y.y),g=new s(r.x,r.y),E=v.x*v.x,k=v.y*v.y,N=d.x*d.x,P=d.y*d.y,M=x.x*x.x,T=x.y*x.y,X=g.x*g.x,I=g.y*g.y,R=m.x*m.x,S=m.y*m.y,Y=w.x*w.x,A=w.y*w.y,C=b.x*b.x,L=b.y*b.y,z=new c(-2*x.x*x.y*b.x*b.y+M*L+T*C,-2*x.x*x.y*w.x*b.y-2*x.x*x.y*w.y*b.x+2*T*w.x*b.x+2*M*w.y*b.y,-2*x.x*m.x*x.y*b.y-2*x.x*x.y*m.y*b.x-2*x.x*x.y*w.x*w.y+2*m.x*T*b.x+T*Y+M*(2*m.y*b.y+A),2*v.x*x.x*x.y*b.y+2*v.y*x.x*x.y*b.x+d.x*d.y*x.x*b.y+d.x*d.y*x.y*b.x-2*g.x*x.x*x.y*b.y-2*x.x*g.y*x.y*b.x-2*x.x*m.x*x.y*w.y-2*x.x*x.y*m.y*w.x-2*v.x*T*b.x-2*v.y*M*b.y+2*g.x*T*b.x+2*m.x*T*w.x-P*x.x*b.x-N*x.y*b.y+M*(2*g.y*b.y+2*m.y*w.y),2*v.x*x.x*x.y*w.y+2*v.y*x.x*x.y*w.x+d.x*d.y*x.x*w.y+d.x*d.y*x.y*w.x-2*g.x*x.x*x.y*w.y-2*x.x*g.y*x.y*w.x-2*x.x*m.x*x.y*m.y-2*v.x*T*w.x-2*v.y*M*w.y+2*g.x*T*w.x-P*x.x*w.x-N*x.y*w.y+R*T+M*(2*g.y*w.y+S),2*v.x*x.x*x.y*m.y+2*v.y*x.x*m.x*x.y+d.x*d.y*x.x*m.y+d.x*d.y*m.x*x.y-2*g.x*x.x*x.y*m.y-2*x.x*g.y*m.x*x.y-2*v.x*m.x*T-2*v.y*M*m.y+2*g.x*m.x*T-P*x.x*m.x-N*x.y*m.y+2*M*g.y*m.y,-2*v.x*v.y*x.x*x.y-v.x*d.x*d.y*x.y-v.y*d.x*d.y*x.x+2*v.x*x.x*g.y*x.y+2*v.y*g.x*x.x*x.y+d.x*g.x*d.y*x.y+d.x*d.y*x.x*g.y-2*g.x*x.x*g.y*x.y-2*v.x*g.x*T+v.x*P*x.x+v.y*N*x.y-2*v.y*M*g.y-g.x*P*x.x-N*g.y*x.y+E*T+k*M+X*T+M*I).getRootsInInterval(0,1),D=!0,B=!1,q=void 0;try{for(var V,_=z[Symbol.iterator]();!(D=(V=_.next()).done);D=!0){var O=V.value,U=new c(x.x,d.x,v.x-g.x-O*m.x-O*O*w.x-O*O*O*b.x).getRoots(),F=new c(x.y,d.y,v.y-g.y-O*m.y-O*O*w.y-O*O*O*b.y).getRoots();if(U.length>0&&F.length>0){var Q=!0,G=!1,j=void 0;try{t:for(var H,$=U[Symbol.iterator]();!(Q=(H=$.next()).done);Q=!0){var Z=H.value;if(0<=Z&&Z<=1)for(var K=0;K<F.length;K++)if(Math.abs(Z-F[K])<1e-4){p.points.push(b.multiply(O*O*O).add(w.multiply(O*O).add(m.multiply(O).add(g))));break t}}}catch(t){G=!0,j=t}finally{try{Q||null==$.return||$.return()}finally{if(G)throw j}}}}}catch(t){B=!0,q=t}finally{try{D||null==_.return||_.return()}finally{if(B)throw q}}return p.points.length>0&&(p.status="Intersection"),p}},{key:"intersectBezier2Circle",value:function(e,n,i,r,a){return t.intersectBezier2Ellipse(e,n,i,r,a,a)}},{key:"intersectBezier2Ellipse",value:function(e,n,i,r,a,o){var u,l=new t("No Intersection");u=n.multiply(-2);var h=e.add(u.add(i));u=e.multiply(-2);var y=n.multiply(2),f=u.add(y),p=new s(e.x,e.y),x=a*a,d=o*o,v=new c(d*h.x*h.x+x*h.y*h.y,2*(d*h.x*f.x+x*h.y*f.y),d*(2*h.x*p.x+f.x*f.x)+x*(2*h.y*p.y+f.y*f.y)-2*(d*r.x*h.x+x*r.y*h.y),2*(d*f.x*(p.x-r.x)+x*f.y*(p.y-r.y)),d*(p.x*p.x+r.x*r.x)+x*(p.y*p.y+r.y*r.y)-2*(d*r.x*p.x+x*r.y*p.y)-x*d).getRoots(),b=!0,w=!1,m=void 0;try{for(var g,E=v[Symbol.iterator]();!(b=(g=E.next()).done);b=!0){var k=g.value;0<=k&&k<=1&&l.points.push(h.multiply(k*k).add(f.multiply(k).add(p)))}}catch(t){w=!0,m=t}finally{try{b||null==E.return||E.return()}finally{if(w)throw m}}return l.points.length>0&&(l.status="Intersection"),l}},{key:"intersectBezier2Line",value:function(e,n,i,r,a){var u,l=r.min(a),h=r.max(a),y=new t("No Intersection");u=n.multiply(-2);var f=e.add(u.add(i));u=e.multiply(-2);var p=n.multiply(2),x=u.add(p),d=new s(e.x,e.y),v=new o(r.y-a.y,a.x-r.x),b=r.x*a.y-a.x*r.y,w=new c(v.dot(f),v.dot(x),v.dot(d)+b).getRoots(),m=!0,g=!1,E=void 0;try{for(var k,N=w[Symbol.iterator]();!(m=(k=N.next()).done);m=!0){var P=k.value;if(0<=P&&P<=1){var M=e.lerp(n,P),T=n.lerp(i,P),X=M.lerp(T,P);r.x===a.x?l.y<=X.y&&X.y<=h.y&&(y.status="Intersection",y.appendPoint(X)):r.y===a.y?l.x<=X.x&&X.x<=h.x&&(y.status="Intersection",y.appendPoint(X)):l.x<=X.x&&X.x<=h.x&&l.y<=X.y&&X.y<=h.y&&(y.status="Intersection",y.appendPoint(X))}}}catch(t){g=!0,E=t}finally{try{m||null==N.return||N.return()}finally{if(g)throw E}}return y}},{key:"intersectBezier2Polygon",value:function(e,n,i,r){return t.intersectBezier2Polyline(e,n,i,v(r))}},{key:"intersectBezier2Polyline",value:function(e,n,i,r){for(var a=new t("No Intersection"),s=r.length,o=0;o<s-1;o++){var u=r[o],l=r[o+1],c=t.intersectBezier2Line(e,n,i,u,l);a.appendPoints(c.points)}return a.points.length>0&&(a.status="Intersection"),a}},{key:"intersectBezier2Rectangle",value:function(e,n,i,r,a){var o=r.min(a),u=r.max(a),l=new s(u.x,o.y),c=new s(o.x,u.y),h=t.intersectBezier2Line(e,n,i,o,l),y=t.intersectBezier2Line(e,n,i,l,u),f=t.intersectBezier2Line(e,n,i,u,c),p=t.intersectBezier2Line(e,n,i,c,o),x=new t("No Intersection");return x.appendPoints(h.points),x.appendPoints(y.points),x.appendPoints(f.points),x.appendPoints(p.points),x.points.length>0&&(x.status="Intersection"),x}},{key:"intersectBezier3Bezier3",value:function(e,n,i,r,a,o,u,l){var h,y,f,p,x=new t("No Intersection");h=e.multiply(-1),y=n.multiply(3),f=i.multiply(-3),p=h.add(y.add(f.add(r)));var d=new s(p.x,p.y);h=e.multiply(3),y=n.multiply(-6),f=i.multiply(3),p=h.add(y.add(f));var v=new s(p.x,p.y);h=e.multiply(-3),y=n.multiply(3),f=h.add(y);var b=new s(f.x,f.y),w=new s(e.x,e.y);h=a.multiply(-1),y=o.multiply(3),f=u.multiply(-3),p=h.add(y.add(f.add(l)));var m=new s(p.x,p.y);h=a.multiply(3),y=o.multiply(-6),f=u.multiply(3),p=h.add(y.add(f));var g=new s(p.x,p.y);h=a.multiply(-3),y=o.multiply(3),f=h.add(y);var E=new s(f.x,f.y),k=new s(a.x,a.y);h=d.x*v.y-v.x*d.y,y=d.x*b.y-b.x*d.y;var N=d.x*w.y-w.x*d.y+k.x*d.y-d.x*k.y,P=E.x*d.y-d.x*E.y,M=g.x*d.y-d.x*g.y,T=m.x*d.y-d.x*m.y;p=d.x*b.y-b.x*d.y;var X=d.x*w.y+v.x*b.y-b.x*v.y-w.x*d.y+k.x*d.y-d.x*k.y,I=E.x*d.y-d.x*E.y,R=g.x*d.y-d.x*g.y,S=m.x*d.y-d.x*m.y,Y=v.x*w.y-w.x*v.y+k.x*v.y-v.x*k.y,A=E.x*v.y-v.x*E.y,C=g.x*v.y-v.x*g.y,L=m.x*v.y-v.x*m.y,z=d.x*w.y-w.x*d.y+k.x*d.y-d.x*k.y,D=E.x*d.y-d.x*E.y,B=g.x*d.y-d.x*g.y,q=m.x*d.y-d.x*m.y,V=v.x*w.y-w.x*v.y+k.x*v.y-v.x*k.y,_=E.x*v.y-v.x*E.y,O=g.x*v.y-v.x*g.y,U=m.x*v.y-v.x*m.y,F=b.x*w.y-w.x*b.y+k.x*b.y-b.x*k.y,Q=E.x*b.y-b.x*E.y,G=g.x*b.y-b.x*g.y,j=m.x*b.y-b.x*m.y,H=new c(-T*S*q,-T*S*B-T*R*q-M*S*q,-T*S*D-T*R*B-M*S*B-T*I*q-M*R*q-P*S*q,-T*S*z-T*R*D-M*S*D-T*I*B-M*R*B-P*S*B-T*X*q-M*I*q-P*R*q-N*S*q+y*L*q+T*p*U-h*L*U+h*S*j,-T*R*z-M*S*z-T*I*D-M*R*D-P*S*D-T*X*B-M*I*B-P*R*B-N*S*B+y*L*B-M*X*q-P*I*q-N*R*q+y*C*q+T*p*O-h*L*O+M*p*U-h*C*U+h*S*G+h*R*j,-T*I*z-M*R*z-P*S*z-T*X*D-M*I*D-P*R*D-N*S*D+y*L*D-M*X*B-P*I*B-N*R*B+y*C*B-P*X*q-N*I*q+y*A*q+T*p*_-h*L*_+M*p*O-h*C*O+P*p*U-h*A*U+h*S*Q+h*R*G+h*I*j,-T*X*z-M*I*z-P*R*z-N*S*z+y*L*z-M*X*D-P*I*D-N*R*D+y*C*D-P*X*B-N*I*B+y*A*B-N*X*q+y*Y*q+T*p*V-h*L*V+M*p*_-h*C*_+P*p*O-h*A*O+N*p*U-h*Y*U+h*S*F+h*R*Q+h*I*G-y*p*j+h*X*j,-M*X*z-P*I*z-N*R*z+y*C*z-P*X*D-N*I*D+y*A*D-N*X*B+y*Y*B+M*p*V-h*C*V+P*p*_-h*A*_+N*p*O-h*Y*O+h*R*F+h*I*Q-y*p*G+h*X*G,-P*X*z-N*I*z+y*A*z-N*X*D+y*Y*D+P*p*V-h*A*V+N*p*_-h*Y*_+h*I*F-y*p*Q+h*X*Q,-N*X*z+y*Y*z+N*p*V-h*Y*V-y*p*F+h*X*F);H.simplifyEquals();var $=H.getRootsInInterval(0,1),Z=!0,K=!1,J=void 0;try{for(var W,tt=$[Symbol.iterator]();!(Z=(W=tt.next()).done);Z=!0){var et=W.value,nt=new c(d.x,v.x,b.x,w.x-k.x-et*E.x-et*et*g.x-et*et*et*m.x);nt.simplifyEquals();var it=nt.getRoots(),rt=new c(d.y,v.y,b.y,w.y-k.y-et*E.y-et*et*g.y-et*et*et*m.y);rt.simplifyEquals();var at=rt.getRoots();if(it.length>0&&at.length>0){var st=!0,ot=!1,ut=void 0;try{t:for(var lt,ct=it[Symbol.iterator]();!(st=(lt=ct.next()).done);st=!0){var ht=lt.value;if(0<=ht&&ht<=1)for(var yt=0;yt<at.length;yt++)if(Math.abs(ht-at[yt])<1e-4){x.points.push(m.multiply(et*et*et).add(g.multiply(et*et).add(E.multiply(et).add(k))));break t}}}catch(t){ot=!0,ut=t}finally{try{st||null==ct.return||ct.return()}finally{if(ot)throw ut}}}}}catch(t){K=!0,J=t}finally{try{Z||null==tt.return||tt.return()}finally{if(K)throw J}}return x.points.length>0&&(x.status="Intersection"),x}},{key:"intersectBezier3Circle",value:function(e,n,i,r,a,s){return t.intersectBezier3Ellipse(e,n,i,r,a,s,s)}},{key:"intersectBezier3Ellipse",value:function(e,n,i,r,a,o,u){var l,h,y,f,p=new t("No Intersection");l=e.multiply(-1),h=n.multiply(3),y=i.multiply(-3),f=l.add(h.add(y.add(r)));var x=new s(f.x,f.y);l=e.multiply(3),h=n.multiply(-6),y=i.multiply(3),f=l.add(h.add(y));var d=new s(f.x,f.y);l=e.multiply(-3),h=n.multiply(3),y=l.add(h);var v=new s(y.x,y.y),b=new s(e.x,e.y),w=o*o,m=u*u,g=new c(x.x*x.x*m+x.y*x.y*w,2*(x.x*d.x*m+x.y*d.y*w),2*(x.x*v.x*m+x.y*v.y*w)+d.x*d.x*m+d.y*d.y*w,2*x.x*m*(b.x-a.x)+2*x.y*w*(b.y-a.y)+2*(d.x*v.x*m+d.y*v.y*w),2*d.x*m*(b.x-a.x)+2*d.y*w*(b.y-a.y)+v.x*v.x*m+v.y*v.y*w,2*v.x*m*(b.x-a.x)+2*v.y*w*(b.y-a.y),b.x*b.x*m-2*b.y*a.y*w-2*b.x*a.x*m+b.y*b.y*w+a.x*a.x*m+a.y*a.y*w-w*m).getRootsInInterval(0,1),E=!0,k=!1,N=void 0;try{for(var P,M=g[Symbol.iterator]();!(E=(P=M.next()).done);E=!0){var T=P.value;p.points.push(x.multiply(T*T*T).add(d.multiply(T*T).add(v.multiply(T).add(b))))}}catch(t){k=!0,N=t}finally{try{E||null==M.return||M.return()}finally{if(k)throw N}}return p.points.length>0&&(p.status="Intersection"),p}},{key:"intersectBezier3Line",value:function(e,n,i,r,a,s){var u,l,h,y,f=a.min(s),p=a.max(s),x=new t("No Intersection");u=e.multiply(-1),l=n.multiply(3),h=i.multiply(-3),y=u.add(l.add(h.add(r)));var d=new o(y.x,y.y);u=e.multiply(3),l=n.multiply(-6),h=i.multiply(3),y=u.add(l.add(h));var v=new o(y.x,y.y);u=e.multiply(-3),l=n.multiply(3),h=u.add(l);var b=new o(h.x,h.y),w=new o(e.x,e.y),m=new o(a.y-s.y,s.x-a.x),g=a.x*s.y-s.x*a.y,E=new c(m.dot(d),m.dot(v),m.dot(b),m.dot(w)+g).getRoots(),k=!0,N=!1,P=void 0;try{for(var M,T=E[Symbol.iterator]();!(k=(M=T.next()).done);k=!0){var X=M.value;if(0<=X&&X<=1){var I=e.lerp(n,X),R=n.lerp(i,X),S=i.lerp(r,X),Y=I.lerp(R,X),A=R.lerp(S,X),C=Y.lerp(A,X);a.x===s.x?f.y<=C.y&&C.y<=p.y&&(x.status="Intersection",x.appendPoint(C)):a.y===s.y?f.x<=C.x&&C.x<=p.x&&(x.status="Intersection",x.appendPoint(C)):f.x<=C.x&&C.x<=p.x&&f.y<=C.y&&C.y<=p.y&&(x.status="Intersection",x.appendPoint(C))}}}catch(t){N=!0,P=t}finally{try{k||null==T.return||T.return()}finally{if(N)throw P}}return x}},{key:"intersectBezier3Polygon",value:function(e,n,i,r,a){return t.intersectBezier3Polyline(e,n,i,r,v(a))}},{key:"intersectBezier3Polyline",value:function(e,n,i,r,a){for(var s=new t("No Intersection"),o=a.length,u=0;u<o-1;u++){var l=a[u],c=a[u+1],h=t.intersectBezier3Line(e,n,i,r,l,c);s.appendPoints(h.points)}return s.points.length>0&&(s.status="Intersection"),s}},{key:"intersectBezier3Rectangle",value:function(e,n,i,r,a,o){var u=a.min(o),l=a.max(o),c=new s(l.x,u.y),h=new s(u.x,l.y),y=t.intersectBezier3Line(e,n,i,r,u,c),f=t.intersectBezier3Line(e,n,i,r,c,l),p=t.intersectBezier3Line(e,n,i,r,l,h),x=t.intersectBezier3Line(e,n,i,r,h,u),d=new t("No Intersection");return d.appendPoints(y.points),d.appendPoints(f.points),d.appendPoints(p.points),d.appendPoints(x.points),d.points.length>0&&(d.status="Intersection"),d}},{key:"intersectCircleCircle",value:function(e,n,i,r){var a,o=n+r,u=Math.abs(n-r),l=e.distanceFrom(i);if(l>o)a=new t("Outside");else if(l<u)a=new t("Inside");else{a=new t("Intersection");var c=(n*n-r*r+l*l)/(2*l),h=Math.sqrt(n*n-c*c),y=e.lerp(i,c/l),f=h/l;a.points.push(new s(y.x-f*(i.y-e.y),y.y+f*(i.x-e.x))),a.points.push(new s(y.x+f*(i.y-e.y),y.y-f*(i.x-e.x)))}return a}},{key:"intersectCircleEllipse",value:function(e,n,i,r,a){return t.intersectEllipseEllipse(e,n,n,i,r,a)}},{key:"intersectCircleLine",value:function(e,n,i,r){var a,s=(r.x-i.x)*(r.x-i.x)+(r.y-i.y)*(r.y-i.y),o=2*((r.x-i.x)*(i.x-e.x)+(r.y-i.y)*(i.y-e.y)),u=o*o-4*s*(e.x*e.x+e.y*e.y+i.x*i.x+i.y*i.y-2*(e.x*i.x+e.y*i.y)-n*n);if(u<0)a=new t("Outside");else if(0===u)a=new t("Tangent");else{var l=Math.sqrt(u),c=(-o+l)/(2*s),h=(-o-l)/(2*s);(c<0||c>1)&&(h<0||h>1)?a=new t(c<0&&h<0||c>1&&h>1?"Outside":"Inside"):(a=new t("Intersection"),0<=c&&c<=1&&a.points.push(i.lerp(r,c)),0<=h&&h<=1&&a.points.push(i.lerp(r,h)))}return a}},{key:"intersectCirclePolygon",value:function(e,n,i){return t.intersectCirclePolyline(e,n,v(i))}},{key:"intersectCirclePolyline",value:function(e,n,i){for(var r,a=new t("No Intersection"),s=i.length,o=0;o<s-1;o++){var u=i[o],l=i[o+1];r=t.intersectCircleLine(e,n,u,l),a.appendPoints(r.points)}return a.points.length>0?a.status="Intersection":a.status=r.status,a}},{key:"intersectCircleRectangle",value:function(e,n,i,r){var a=i.min(r),o=i.max(r),u=new s(o.x,a.y),l=new s(a.x,o.y),c=t.intersectCircleLine(e,n,a,u),h=t.intersectCircleLine(e,n,u,o),y=t.intersectCircleLine(e,n,o,l),f=t.intersectCircleLine(e,n,l,a),p=new t("No Intersection");return p.appendPoints(c.points),p.appendPoints(h.points),p.appendPoints(y.points),p.appendPoints(f.points),p.points.length>0?p.status="Intersection":p.status=c.status,p}},{key:"intersectEllipseEllipse",value:function(e,n,i,r,a,o){for(var u,l,h,y,f,p,x,d,v,b,w,m,g,E,k,N=[i*i,0,n*n,-2*i*i*e.x,-2*n*n*e.y,i*i*e.x*e.x+n*n*e.y*e.y-n*n*i*i],P=[o*o,0,a*a,-2*o*o*r.x,-2*a*a*r.y,o*o*r.x*r.x+a*a*r.y*r.y-a*a*o*o],M=(l=P,h=(u=N)[0]*l[1]-l[0]*u[1],y=u[0]*l[2]-l[0]*u[2],f=u[0]*l[3]-l[0]*u[3],p=u[0]*l[4]-l[0]*u[4],x=u[0]*l[5]-l[0]*u[5],d=u[1]*l[2]-l[1]*u[2],v=u[1]*l[4]-l[1]*u[4],b=u[1]*l[5]-l[1]*u[5],w=u[2]*l[3]-l[2]*u[3],m=u[3]*l[4]-l[3]*u[4],g=u[3]*l[5]-l[3]*u[5],new c(h*d-y*y,h*(k=v-w)+f*d-2*y*p,h*(E=b+m)+f*k-p*p-2*y*x,h*g+f*E-2*p*x,f*g-x*x)).getRoots(),T=.001*(N[0]*N[0]+2*N[1]*N[1]+N[2]*N[2]),X=.001*(P[0]*P[0]+2*P[1]*P[1]+P[2]*P[2]),I=new t("No Intersection"),R=0;R<M.length;R++)for(var S=new c(N[0],N[3]+M[R]*N[1],N[5]+M[R]*(N[4]+M[R]*N[2])).getRoots(),Y=0;Y<S.length;Y++){var A=(N[0]*S[Y]+N[1]*M[R]+N[3])*S[Y]+(N[2]*M[R]+N[4])*M[R]+N[5];Math.abs(A)<T&&(A=(P[0]*S[Y]+P[1]*M[R]+P[3])*S[Y]+(P[2]*M[R]+P[4])*M[R]+P[5],Math.abs(A)<X&&I.appendPoint(new s(S[Y],M[R])))}return I.points.length>0&&(I.status="Intersection"),I}},{key:"intersectEllipseLine",value:function(e,n,i,r,a){var s,u=new o(r.x,r.y),l=o.fromPoints(r,a),c=new o(e.x,e.y),h=u.subtract(c),y=new o(l.x/(n*n),l.y/(i*i)),f=new o(h.x/(n*n),h.y/(i*i)),p=l.dot(y),x=l.dot(f),d=x*x-p*(e=h.dot(f)-1);if(d<0)s=new t("Outside");else if(d>0){var v=Math.sqrt(d),b=(-x-v)/p,w=(-x+v)/p;(b<0||1<b)&&(w<0||1<w)?s=new t(b<0&&w<0||b>1&&w>1?"Outside":"Inside"):(s=new t("Intersection"),0<=b&&b<=1&&s.appendPoint(r.lerp(a,b)),0<=w&&w<=1&&s.appendPoint(r.lerp(a,w)))}else{var m=-x/p;0<=m&&m<=1?(s=new t("Intersection")).appendPoint(r.lerp(a,m)):s=new t("Outside")}return s}},{key:"intersectEllipsePolygon",value:function(e,n,i,r){return t.intersectEllipsePolyline(e,n,i,v(r))}},{key:"intersectEllipsePolyline",value:function(e,n,i,r){for(var a=new t("No Intersection"),s=r.length,o=0;o<s-1;o++){var u=r[o],l=r[o+1],c=t.intersectEllipseLine(e,n,i,u,l);a.appendPoints(c.points)}return a.points.length>0&&(a.status="Intersection"),a}},{key:"intersectEllipseRectangle",value:function(e,n,i,r,a){var o=r.min(a),u=r.max(a),l=new s(u.x,o.y),c=new s(o.x,u.y),h=t.intersectEllipseLine(e,n,i,o,l),y=t.intersectEllipseLine(e,n,i,l,u),f=t.intersectEllipseLine(e,n,i,u,c),p=t.intersectEllipseLine(e,n,i,c,o),x=new t("No Intersection");return x.appendPoints(h.points),x.appendPoints(y.points),x.appendPoints(f.points),x.appendPoints(p.points),x.points.length>0&&(x.status="Intersection"),x}},{key:"intersectLineLine",value:function(e,n,i,r){var a,o=(r.x-i.x)*(e.y-i.y)-(r.y-i.y)*(e.x-i.x),u=(n.x-e.x)*(e.y-i.y)-(n.y-e.y)*(e.x-i.x),l=(r.y-i.y)*(n.x-e.x)-(r.x-i.x)*(n.y-e.y);if(0!==l){var c=o/l,h=u/l;0<=c&&c<=1&&0<=h&&h<=1?(a=new t("Intersection")).points.push(new s(e.x+c*(n.x-e.x),e.y+c*(n.y-e.y))):a=new t("No Intersection")}else a=new t(0===o||0===u?"Coincident":"Parallel");return a}},{key:"intersectLinePolygon",value:function(e,n,i){return t.intersectLinePolyline(e,n,v(i))}},{key:"intersectLinePolyline",value:function(e,n,i){for(var r=new t("No Intersection"),a=i.length,s=0;s<a-1;s++){var o=i[s],u=i[s+1],l=t.intersectLineLine(e,n,o,u);r.appendPoints(l.points)}return r.points.length>0&&(r.status="Intersection"),r}},{key:"intersectLineRectangle",value:function(e,n,i,r){var a=i.min(r),o=i.max(r),u=new s(o.x,a.y),l=new s(a.x,o.y),c=t.intersectLineLine(a,u,e,n),h=t.intersectLineLine(u,o,e,n),y=t.intersectLineLine(o,l,e,n),f=t.intersectLineLine(l,a,e,n),p=new t("No Intersection");return p.appendPoints(c.points),p.appendPoints(h.points),p.appendPoints(y.points),p.appendPoints(f.points),p.points.length>0&&(p.status="Intersection"),p}},{key:"intersectPolygonPolygon",value:function(e,n){return t.intersectPolylinePolyline(v(e),v(n))}},{key:"intersectPolygonPolyline",value:function(e,n){return t.intersectPolylinePolyline(v(e),n)}},{key:"intersectPolygonRectangle",value:function(e,n,i){return t.intersectPolylineRectangle(v(e),n,i)}},{key:"intersectPolylinePolyline",value:function(e,n){for(var i=new t("No Intersection"),r=e.length,a=0;a<r-1;a++){var s=e[a],o=e[a+1],u=t.intersectLinePolyline(s,o,n);i.appendPoints(u.points)}return i.points.length>0&&(i.status="Intersection"),i}},{key:"intersectPolylineRectangle",value:function(e,n,i){var r=n.min(i),a=n.max(i),o=new s(a.x,r.y),u=new s(r.x,a.y),l=t.intersectLinePolyline(r,o,e),c=t.intersectLinePolyline(o,a,e),h=t.intersectLinePolyline(a,u,e),y=t.intersectLinePolyline(u,r,e),f=new t("No Intersection");return f.appendPoints(l.points),f.appendPoints(c.points),f.appendPoints(h.points),f.appendPoints(y.points),f.points.length>0&&(f.status="Intersection"),f}},{key:"intersectRectangleRectangle",value:function(e,n,i,r){var a=e.min(n),o=e.max(n),u=new s(o.x,a.y),l=new s(a.x,o.y),c=t.intersectLineRectangle(a,u,i,r),h=t.intersectLineRectangle(u,o,i,r),y=t.intersectLineRectangle(o,l,i,r),f=t.intersectLineRectangle(l,a,i,r),p=new t("No Intersection");return p.appendPoints(c.points),p.appendPoints(h.points),p.appendPoints(y.points),p.appendPoints(f.points),p.points.length>0&&(p.status="Intersection"),p}},{key:"intersectRayRay",value:function(e,n,i,r){var a,o=(r.x-i.x)*(e.y-i.y)-(r.y-i.y)*(e.x-i.x),u=(n.x-e.x)*(e.y-i.y)-(n.y-e.y)*(e.x-i.x),l=(r.y-i.y)*(n.x-e.x)-(r.x-i.x)*(n.y-e.y);if(0!==l){var c=o/l;(a=new t("Intersection")).points.push(new s(e.x+c*(n.x-e.x),e.y+c*(n.y-e.y)))}else a=new t(0===o||0===u?"Coincident":"Parallel");return a}}]),t}(),w=function(){function t(n,i){e(this,t),this.type=n,this.text=i}return i(t,[{key:"typeis",value:function(t){return this.type===t}}]),t}();w.UNDEFINED=0,w.COMMAND=1,w.NUMBER=2,w.EOD=3;var m=function(){function t(n){e(this,t),null==n&&(n=""),this.setPathData(n)}return i(t,[{key:"setPathData",value:function(t){if("string"!=typeof t)throw new TypeError("The first parameter must be a string");this._pathData=t}},{key:"getNextToken",value:function(){for(var t=null,e=this._pathData;null===t;)if(null===e||""===e)t=new w(w.EOD,"");else if(e.match(/^([ \t\r\n,]+)/))e=e.substr(RegExp.$1.length);else if(e.match(/^([AaCcHhLlMmQqSsTtVvZz])/))t=new w(w.COMMAND,RegExp.$1),e=e.substr(RegExp.$1.length);else{if(!e.match(/^(([-+]?\d+(\.\d*)?|[-+]?\.\d+)([eE][-+]?\d+)?)/))throw new SyntaxError("Unrecognized path data: ".concat(e));t=new w(w.NUMBER,RegExp.$1),e=e.substr(RegExp.$1.length)}return this._pathData=e,t}}]),t}(),g=function(){function t(){e(this,t),this._lexer=new m,this._handler=null}return i(t,[{key:"parseData",value:function(e){if("string"!=typeof e)throw new TypeError("The first parameter must be a string: ".concat(e));null!==this._handler&&"function"==typeof this._handler.beginParse&&this._handler.beginParse();var n=this._lexer;n.setPathData(e);for(var i="BOP",r=null,a=n.getNextToken();!1===a.typeis(w.EOD);){var s=void 0,o=[];switch(a.type){case w.COMMAND:if("BOP"===i&&"M"!==a.text&&"m"!==a.text)throw new SyntaxError("New paths must begin with a moveto command. Found '".concat(a.text,"'"));i=a.text,s=t.PARAMCOUNT[a.text.toUpperCase()],a=n.getNextToken();break;case w.NUMBER:if("BOP"===i)throw new SyntaxError("New paths must begin with a moveto command. Found '".concat(a.text,"'"));s=t.PARAMCOUNT[i.toUpperCase()];break;default:throw new SyntaxError("Unrecognized command type: ".concat(a.type))}for(var u=0;u<s;u++){switch(a.type){case w.COMMAND:throw new SyntaxError("Parameter must be a number. Found '".concat(a.text,"'"));case w.NUMBER:o[u]=parseFloat(a.text);break;case w.EOD:throw new SyntaxError("Unexpected end of string");default:throw new SyntaxError("Unrecognized parameter type. Found type '".concat(a.type,"'"))}a=n.getNextToken()}if(null!==this._handler){var l=this._handler,c=t.METHODNAME[i];"a"!==i&&"A"!==i||(o[3]=0!==o[3],o[4]=0!==o[4]),null!==l&&"function"==typeof l[c]&&l[c].apply(l,o)}switch(i){case"M":i="L";break;case"m":i="l";break;case"Z":case"z":i="BOP"}if(a===r)throw new SyntaxError("Parser stalled on '".concat(a.text,"'"));r=a}null!==this._handler&&"function"==typeof this._handler.endParse&&this._handler.endParse()}},{key:"setHandler",value:function(t){this._handler=t}}]),t}();g.PARAMCOUNT={A:7,C:6,H:1,L:2,M:2,Q:4,S:4,T:2,V:1,Z:0},g.METHODNAME={A:"arcAbs",a:"arcRel",C:"curvetoCubicAbs",c:"curvetoCubicRel",H:"linetoHorizontalAbs",h:"linetoHorizontalRel",L:"linetoAbs",l:"linetoRel",M:"movetoAbs",m:"movetoRel",Q:"curvetoQuadraticAbs",q:"curvetoQuadraticRel",S:"curvetoCubicSmoothAbs",s:"curvetoCubicSmoothRel",T:"curvetoQuadraticSmoothAbs",t:"curvetoQuadraticSmoothRel",V:"linetoVerticalAbs",v:"linetoVerticalRel",Z:"closePath",z:"closePath"};var E=2*Math.PI;function k(t,e,n,i,r,a,s){r=r*Math.PI/180;var u=Math.cos(r),l=Math.sin(r),c=t.subtract(e).multiply(.5),h=c.x*u+c.y*l,y=c.x*-l+c.y*u,f=h*h,p=y*y,x=f/((n=Math.abs(n))*n)+p/((i=Math.abs(i))*i);if(x>1){var d=Math.sqrt(x);n*=d,i*=d}var v=n*n,b=i*i,w=v*p,m=b*f,g=(v*b-w-m)/(w+m);Math.abs(g)<1e-6&&(g=0);var k=Math.sqrt(g);a===s&&(k=-k);var N,P,M=t.add(e).multiply(.5),T=k*n*y/i,X=k*-i*h/n,I=(h-T)/n,R=(h+T)/n,S=(y-X)/i,Y=(y+X)/i,A=new o(1,0).angleBetween(new o(I,S)),C=(N=new o(I,S).angleBetween(new o(-R,-Y)),(P=N%E)<0?P+E:P);return!1===s&&(C-=E),[T*u-X*l+M.x,T*l+X*u+M.y,n,i,A,A+C]}var N=function(){function t(){e(this,t),this.shapes=[],this.firstX=null,this.firstY=null,this.lastX=null,this.lastY=null,this.lastCommand=null}return i(t,[{key:"beginParse",value:function(){this.shapes=[],this.firstX=null,this.firstY=null,this.lastX=null,this.lastY=null,this.lastCommand=null}},{key:"addShape",value:function(t){this.shapes.push(t)}},{key:"arcAbs",value:function(t,e,n,i,r,o,u){if(0===t||0===e)this.addShape(P.line(this.lastX,this.lastY,o,u));else{var l=k(new s(this.lastX,this.lastY),new s(o,u),t,e,n,i,r);this.addShape(P.arc.apply(P,a(l)))}this.lastCommand="A",this.lastX=o,this.lastY=u}},{key:"arcRel",value:function(t,e,n,i,r,o,u){if(0===t||0===e)this.addShape(P.line(this.lastX,this.lastY,this.lastX+o,this.lastY+u));else{var l=k(new s(this.lastX,this.lastY),new s(this.lastX+o,this.lastY+u),t,e,n,i,r);this.addShape(P.arc.apply(P,a(l)))}this.lastCommand="a",this.lastX+=o,this.lastY+=u}},{key:"curvetoCubicAbs",value:function(t,e,n,i,r,a){this.addShape(P.cubicBezier(this.lastX,this.lastY,t,e,n,i,r,a)),this.lastX=r,this.lastY=a,this.lastCommand="C"}},{key:"curvetoCubicRel",value:function(t,e,n,i,r,a){this.addShape(P.cubicBezier(this.lastX,this.lastY,this.lastX+t,this.lastY+e,this.lastX+n,this.lastY+i,this.lastX+r,this.lastY+a)),this.lastX+=r,this.lastY+=a,this.lastCommand="c"}},{key:"linetoHorizontalAbs",value:function(t){this.addShape(P.line(this.lastX,this.lastY,t,this.lastY)),this.lastX=t,this.lastCommand="H"}},{key:"linetoHorizontalRel",value:function(t){this.addShape(P.line(this.lastX,this.lastY,this.lastX+t,this.lastY)),this.lastX+=t,this.lastCommand="h"}},{key:"linetoAbs",value:function(t,e){this.addShape(P.line(this.lastX,this.lastY,t,e)),this.lastX=t,this.lastY=e,this.lastCommand="L"}},{key:"linetoRel",value:function(t,e){this.addShape(P.line(this.lastX,this.lastY,this.lastX+t,this.lastY+e)),this.lastX+=t,this.lastY+=e,this.lastCommand="l"}},{key:"movetoAbs",value:function(t,e){this.firstX=t,this.firstY=e,this.lastX=t,this.lastY=e,this.lastCommand="M"}},{key:"movetoRel",value:function(t,e){this.firstX+=t,this.firstY+=e,this.lastX+=t,this.lastY+=e,this.lastCommand="m"}},{key:"curvetoQuadraticAbs",value:function(t,e,n,i){this.addShape(P.quadraticBezier(this.lastX,this.lastY,t,e,n,i)),this.lastX=n,this.lastY=i,this.lastCommand="Q"}},{key:"curvetoQuadraticRel",value:function(t,e,n,i){this.addShape(P.quadraticBezier(this.lastX,this.lastY,this.lastX+t,this.lastY+e,this.lastX+n,this.lastY+i)),this.lastX+=n,this.lastY+=i,this.lastCommand="q"}},{key:"curvetoCubicSmoothAbs",value:function(t,e,n,i){var r,a;if(this.lastCommand.match(/^[SsCc]$/)){var s=this.shapes[this.shapes.length-1].args[2];r=2*this.lastX-s.x,a=2*this.lastY-s.y}else r=this.lastX,a=this.lastY;this.addShape(P.cubicBezier(this.lastX,this.lastY,r,a,t,e,n,i)),this.lastX=n,this.lastY=i,this.lastCommand="S"}},{key:"curvetoCubicSmoothRel",value:function(t,e,n,i){var r,a;if(this.lastCommand.match(/^[SsCc]$/)){var s=this.shapes[this.shapes.length-1].args[2];r=2*this.lastX-s.x,a=2*this.lastY-s.y}else r=this.lastX,a=this.lastY;this.addShape(P.cubicBezier(this.lastX,this.lastY,r,a,this.lastX+t,this.lastY+e,this.lastX+n,this.lastY+i)),this.lastX+=n,this.lastY+=i,this.lastCommand="s"}},{key:"curvetoQuadraticSmoothAbs",value:function(t,e){var n,i;if(this.lastCommand.match(/^[QqTt]$/)){var r=this.shapes[this.shapes.length-1].args[1];n=2*this.lastX-r.x,i=2*this.lastY-r.y}else n=this.lastX,i=this.lastY;this.addShape(P.quadraticBezier(this.lastX,this.lastY,n,i,t,e)),this.lastX=t,this.lastY=e,this.lastCommand="T"}},{key:"curvetoQuadraticSmoothRel",value:function(t,e){var n,i;if(this.lastCommand.match(/^[QqTt]$/)){var r=this.shapes[this.shapes.length-1].args[1];n=2*this.lastX-r.x,i=2*this.lastY-r.y}else n=this.lastX,i=this.lastY;this.addShape(P.quadraticBezier(this.lastX,this.lastY,n,i,this.lastX+t,this.lastY+e)),this.lastX+=t,this.lastY+=e,this.lastCommand="t"}},{key:"linetoVerticalAbs",value:function(t){this.addShape(P.line(this.lastX,this.lastY,this.lastX,t)),this.lastY=t,this.lastCommand="V"}},{key:"linetoVerticalRel",value:function(t){this.addShape(P.line(this.lastX,this.lastY,this.lastX,this.lastY+t)),this.lastY+=t,this.lastCommand="v"}},{key:"closePath",value:function(){this.addShape(P.line(this.lastX,this.lastY,this.firstX,this.firstY)),this.lastX=this.firstX,this.lastY=this.firstY,this.lastCommand="z"}}]),t}(),P=function(){function t(){e(this,t)}return i(t,null,[{key:"quadraticBezier",value:function(t,e,n,i,r,a){if(isNaN(t))throw TypeError("Expected p1x to be a number, but found ".concat(t));if(isNaN(e))throw TypeError("Expected p1y to be a number, but found ".concat(e));if(isNaN(n))throw TypeError("Expected p2x to be a number, but found ".concat(n));if(isNaN(i))throw TypeError("Expected p2y to be a number, but found ".concat(i));if(isNaN(r))throw TypeError("Expected p3x to be a number, but found ".concat(r));if(isNaN(a))throw TypeError("Expected p3y to be a number, but found ".concat(a));return new h("Bezier2",[new s(t,e),new s(n,i),new s(r,a)])}},{key:"cubicBezier",value:function(t,e,n,i,r,a,o,u){if(isNaN(t))throw TypeError("Expected p1x to be a number, but found ".concat(t));if(isNaN(e))throw TypeError("Expected p1y to be a number, but found ".concat(e));if(isNaN(n))throw TypeError("Expected p2x to be a number, but found ".concat(n));if(isNaN(i))throw TypeError("Expected p2y to be a number, but found ".concat(i));if(isNaN(r))throw TypeError("Expected p3x to be a number, but found ".concat(r));if(isNaN(a))throw TypeError("Expected p3y to be a number, but found ".concat(a));if(isNaN(o))throw TypeError("Expected p4x to be a number, but found ".concat(o));if(isNaN(u))throw TypeError("Expected p4y to be a number, but found ".concat(u));return new h("Bezier3",[new s(t,e),new s(n,i),new s(r,a),new s(o,u)])}},{key:"circle",value:function(t,e,n){if(isNaN(t))throw TypeError("Expected centerX to be a number, but found ".concat(t));if(isNaN(e))throw TypeError("Expected centerY to be a number, but found ".concat(e));if(isNaN(n))throw TypeError("Expected radius to be a number, but found ".concat(n));return new h("Circle",[new s(t,e),n])}},{key:"ellipse",value:function(t,e,n,i){if(isNaN(t))throw TypeError("Expected centerX to be a number, but found ".concat(t));if(isNaN(e))throw TypeError("Expected centerY to be a number, but found ".concat(e));if(isNaN(n))throw TypeError("Expected radiusX to be a number, but found ".concat(n));if(isNaN(i))throw TypeError("Expected radiusY to be a number, but found ".concat(i));return new h("Ellipse",[new s(t,e),n,i])}},{key:"arc",value:function(t,e,n,i,r,a){if(isNaN(t))throw TypeError("Expected centerX to be a number, but found ".concat(t));if(isNaN(e))throw TypeError("Expected centerY to be a number, but found ".concat(e));if(isNaN(n))throw TypeError("Expected radiusX to be a number, but found ".concat(n));if(isNaN(i))throw TypeError("Expected radiusY to be a number, but found ".concat(i));if(isNaN(r))throw TypeError("Expected startRadians to be a number, but found ".concat(r));if(isNaN(a))throw TypeError("Expected endRadians to be a number, but found ".concat(a));return new h("Arc",[new s(t,e),n,i,r,a])}},{key:"line",value:function(t,e,n,i){if(isNaN(t))throw TypeError("Expected p1x to be a number, but found ".concat(t));if(isNaN(e))throw TypeError("Expected p1y to be a number, but found ".concat(e));if(isNaN(n))throw TypeError("Expected p2x to be a number, but found ".concat(n));if(isNaN(i))throw TypeError("Expected p2y to be a number, but found ".concat(i));return new h("Line",[new s(t,e),new s(n,i)])}},{key:"path",value:function(t){return new h("Path",t)}},{key:"pathData",value:function(e){if("string"!=typeof e)throw TypeError("Expected pathData to be a string, but found ".concat(e));var n=new g,i=new N;return n.setHandler(i),n.parseData(e),t.path(i.shapes)}},{key:"polygon",value:function(t){if(!1===Array.isArray(t))throw TypeError("Expected points to be an Array, but found ".concat(t));if(t.some(function(t){return isNaN(t)}))throw TypeError("Expected all members of coords to be numbers");for(var e=[],n=0;n<t.length;n+=2)e.push(new s(t[n],t[n+1]));return new h("Polygon",[e])}},{key:"polyline",value:function(t){if(!1===Array.isArray(t))throw TypeError("Expected points to be an Array, but found ".concat(t));if(t.some(function(t){return isNaN(t)}))throw TypeError("Expected all members of coords to be numbers");for(var e=[],n=0;n<t.length;n+=2)e.push(new s(t[n],t[n+1]));return new h("Polyline",[e])}},{key:"rectangle",value:function(e,n,i,r){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;if(isNaN(e))throw TypeError("Expected x to be a number, but found ".concat(e));if(isNaN(n))throw TypeError("Expected y to be a number, but found ".concat(n));if(isNaN(i))throw TypeError("Expected width to be a number, but found ".concat(i));if(isNaN(r))throw TypeError("Expected height to be a number, but found ".concat(r));if(isNaN(a))throw TypeError("Expected rx to be a number, but found ".concat(a));if(isNaN(o))throw TypeError("Expected ry to be a number, but found ".concat(o));if(0===a&&0===o)return new h("Rectangle",[new s(e,n),new s(e+i,n+r)]);0===a&&(a=o),0===o&&(o=a),a>.5*i&&(a=.5*i),o>.5*r&&(o=.5*r);var u=e,l=n,c=e+a,y=n+o,f=e+i-a,p=n+r-o,x=e+i,d=n+r,v=.5*Math.PI,b=[];return b.push(t.arc(c,y,a,o,2*v,3*v)),b.push(t.line(c,l,f,l)),b.push(t.arc(f,y,a,o,3*v,4*v)),b.push(t.line(x,y,x,p)),b.push(t.arc(f,p,a,o,0,v)),b.push(t.line(f,d,c,d)),b.push(t.arc(c,p,a,o,v,2*v)),b.push(t.line(u,p,u,y)),t.path(b)}}]),t}(),M=function(){function t(){e(this,t)}return i(t,null,[{key:"quadraticBezier",value:function(t,e,n){if(t instanceof s==!1)throw TypeError("Expected p1 to be a Point2D, but found ".concat(t));if(e instanceof s==!1)throw TypeError("Expected p2 to be a Point2D, but found ".concat(e));if(n instanceof s==!1)throw TypeError("Expected p3 to be a Point2D, but found ".concat(n));return new h("Bezier2",[t,e,n])}},{key:"cubicBezier",value:function(t,e,n,i){if(t instanceof s==!1)throw TypeError("Expected p1 to be a Point2D, but found ".concat(t));if(e instanceof s==!1)throw TypeError("Expected p2 to be a Point2D, but found ".concat(e));if(n instanceof s==!1)throw TypeError("Expected p3 to be a Point2D, but found ".concat(n));if(i instanceof s==!1)throw TypeError("Expected p4 to be a Point2D, but found ".concat(i));return new h("Bezier3",[t,e,n,i])}},{key:"circle",value:function(t,e){if(t instanceof s==!1)throw TypeError("Expected center to be a Point2D, but found ".concat(t));if(isNaN(e))throw TypeError("Expected radius to be a number, but found ".concat(e));return new h("Circle",[t,e])}},{key:"ellipse",value:function(t,e,n){if(t instanceof s==!1)throw TypeError("Expected center to be a Point2D, but found ".concat(t));if(isNaN(e))throw TypeError("Expected radiusX to be a number, but found ".concat(e));if(isNaN(n))throw TypeError("Expected radiusY to be a number, but found ".concat(n));return new h("Ellipse",[t,e,n])}},{key:"arc",value:function(t,e,n,i,r){if(t instanceof s==!1)throw TypeError("Expected center to be a Point2D, but found ".concat(t));if(isNaN(e))throw TypeError("Expected radiusX to be a number, but found ".concat(e));if(isNaN(n))throw TypeError("Expected radiusY to be a number, but found ".concat(n));if(isNaN(i))throw TypeError("Expected startRadians to be a number, but found ".concat(i));if(isNaN(r))throw TypeError("Expected endRadians to be a number, but found ".concat(r));return new h("Arc",[t,e,n,i,r])}},{key:"line",value:function(t,e){if(t instanceof s==!1)throw TypeError("Expected p1 to be a Point2D, but found ".concat(t));if(e instanceof s==!1)throw TypeError("Expected p2 to be a Point2D, but found ".concat(e));return new h("Line",[t,e])}},{key:"path",value:function(t){return new h("Path",t)}},{key:"pathData",value:function(t){return P.pathData(t)}},{key:"polygon",value:function(t){if(!1===Array.isArray(t))throw TypeError("Expected points to be an Array, but found ".concat(t));if(t.some(function(t){return t instanceof s==!1}))throw TypeError("Expected all members of points to be Point2Ds");return new h("Polygon",[t])}},{key:"polyline",value:function(t){if(t.some(function(t){return t instanceof s==!1}))throw TypeError("Expected all members of points to be Point2Ds");return new h("Polyline",[t])}},{key:"rectangle",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(t instanceof s==!1)throw TypeError("Expected topLeft to be a Point2D, but found ".concat(t));if(e instanceof o==!1)throw TypeError("Expected size to be a Vector2D, but found ".concat(e));if(isNaN(n))throw TypeError("Expected rx to be a number, but found ".concat(n));if(isNaN(i))throw TypeError("Expected ry to be a number, but found ".concat(i));return P.rectangle(t.x,t.y,e.x,e.y,n,i)}}]),t}(),T=function(){function t(){e(this,t)}return i(t,null,[{key:"circle",value:function(t){if(t instanceof SVGCircleElement==!1)throw new TypeError("Expected SVGCircleElement, but found ".concat(t));var e=new s(t.cx.baseVal.value,t.cy.baseVal.value),n=t.r.baseVal.value;return new h("Circle",[e,n])}},{key:"ellipse",value:function(t){if(t instanceof SVGEllipseElement==!1)throw new TypeError("Expected SVGEllipseElement, but found ".concat(t));var e=new s(t.cx.baseVal.value,t.cy.baseVal.value),n=t.rx.baseVal.value,i=t.ry.baseVal.value;return new h("Ellipse",[e,n,i])}},{key:"line",value:function(t){if(t instanceof SVGLineElement==!1)throw new TypeError("Expected SVGLineElement, but found ".concat(t));var e=new s(t.x1.baseVal.value,t.y1.baseVal.value),n=new s(t.x2.baseVal.value,t.y2.baseVal.value);return new h("Line",[e,n])}},{key:"path",value:function(t){if(t instanceof SVGPathElement==!1)throw new TypeError("Expected SVGPathElement, but found ".concat(t));var e=t.getAttributeNS(null,"d");return P.pathData(e)}},{key:"polygon",value:function(t){if(t instanceof SVGPolygonElement==!1)throw new TypeError("Expected SVGPolygonElement, but found ".concat(t));for(var e=[],n=0;n<t.points.numberOfItems;n++){var i=t.points.getItem(n);e.push(new s(i.x,i.y))}return new h("Polygon",[e])}},{key:"polyline",value:function(t){if(t instanceof SVGPolylineElement==!1)throw new TypeError("Expected SVGPolylineElement, but found ".concat(t));for(var e=[],n=0;n<t.points.numberOfItems;n++){var i=t.points.getItem(n);e.push(new s(i.x,i.y))}return new h("Polygon",[e])}},{key:"rect",value:function(t){if(t instanceof SVGRectElement==!1)throw new TypeError("Expected SVGRectElement, but found ".concat(t));return P.rectangle(t.x.baseVal.value,t.y.baseVal.value,t.width.baseVal.value,t.height.baseVal.value,t.rx.baseVal.value,t.ry.baseVal.value)}},{key:"element",value:function(e){if(e instanceof SVGElement==!1)throw new TypeError("Expected SVGElement, but found ".concat(e));var n=e.tagName;switch(n){case"circle":return t.circle(e);case"ellipse":return t.ellipse(e);case"line":return t.line(e);case"path":return t.path(e);case"polygon":return t.polygon(e);case"polyline":return t.polyline(e);case"rect":return t.rect(e);default:throw new TypeError("Unrecognized element type: '".concat(n,"'"))}}}]),t}(),X={pointInCircle:function(t,e,n){return o.fromPoints(e,t).length()<=n},pointInEllipse:function(t,e,n,i){var r=t.subtract(e);return r.x*r.x/(n*n)+r.y*r.y/(i*i)<=1},pointInPolyline:function(t,e){for(var n,i=e.length,r=0,a=e[0],s=1;s<=i;s++){var o=e[s%i],u=Math.min(a.y,o.y),l=Math.max(a.y,o.y),c=Math.max(a.x,o.x);a.y!==o.y&&u<t.y&&t.y<=l&&t.x<=c&&(n=(t.y-a.y)*(o.x-a.x)/(o.y-a.y)+a.x,(a.x===o.x||t.x<=n)&&r++),a=o}return r%2==1}};X.pointInPolygon=X.pointInPolyline,X.pointInRectangle=function(t,e,n){return e.x<=t.x&&t.x<n.x&&e.y<=t.y&&t.y<n.y},t.AffineShapes=M,t.Intersection=b,t.IntersectionArgs=h,t.IntersectionQuery=X,t.Matrix2D=u,t.Point2D=s,t.Shapes=P,t.SvgShapes=T,t.Vector2D=o,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=index-umd.min.js.map
