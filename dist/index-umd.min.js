!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).KldIntersections={})}(this,function(t){"use strict";function e(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function i(t,e,i){return e&&n(t.prototype,e),i&&n(t,i),t}var r=function(){function t(n,i){e(this,t),this.x=void 0!==n?n:0,this.y=void 0!==i?i:0}return i(t,[{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"add",value:function(t){return new this.constructor(this.x+t.x,this.y+t.y)}},{key:"subtract",value:function(t){return new this.constructor(this.x-t.x,this.y-t.y)}},{key:"multiply",value:function(t){return new this.constructor(this.x*t,this.y*t)}},{key:"divide",value:function(t){return new this.constructor(this.x/t,this.y/t)}},{key:"equals",value:function(t){return this.x===t.x&&this.y===t.y}},{key:"precisionEquals",value:function(t,e){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}},{key:"lerp",value:function(t,e){var n=1-e;return new this.constructor(this.x*n+t.x*e,this.y*n+t.y*e)}},{key:"distanceFrom",value:function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)}},{key:"min",value:function(t){return new this.constructor(Math.min(this.x,t.x),Math.min(this.y,t.y))}},{key:"max",value:function(t){return new this.constructor(Math.max(this.x,t.x),Math.max(this.y,t.y))}},{key:"transform",value:function(t){return new this.constructor(t.a*this.x+t.c*this.y+t.e,t.b*this.x+t.d*this.y+t.f)}},{key:"toString",value:function(){return"point("+this.x+","+this.y+")"}}]),t}(),s=function(){function t(n,i){e(this,t),this.x=void 0!==n?n:0,this.y=void 0!==i?i:0}return i(t,[{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"magnitude",value:function(){return this.x*this.x+this.y*this.y}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y}},{key:"cross",value:function(t){return this.x*t.y-this.y*t.x}},{key:"determinant",value:function(t){return this.x*t.y-this.y*t.x}},{key:"unit",value:function(){return this.divide(this.length())}},{key:"add",value:function(t){return new this.constructor(this.x+t.x,this.y+t.y)}},{key:"subtract",value:function(t){return new this.constructor(this.x-t.x,this.y-t.y)}},{key:"multiply",value:function(t){return new this.constructor(this.x*t,this.y*t)}},{key:"divide",value:function(t){return new this.constructor(this.x/t,this.y/t)}},{key:"angleBetween",value:function(t){var e=this.dot(t)/(this.length()*t.length());e=Math.max(-1,Math.min(e,1));var n=Math.acos(e);return this.cross(t)<0?-n:n}},{key:"perp",value:function(){return new this.constructor(-this.y,this.x)}},{key:"perpendicular",value:function(t){return this.subtract(this.project(t))}},{key:"project",value:function(t){var e=this.dot(t)/t.dot(t);return t.multiply(e)}},{key:"transform",value:function(t){return new this.constructor(t.a*this.x+t.c*this.y,t.b*this.x+t.d*this.y)}},{key:"equals",value:function(t){return this.x===t.x&&this.y===t.y}},{key:"precisionEquals",value:function(t,e){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}},{key:"toString",value:function(){return"vector("+this.x+","+this.y+")"}}],[{key:"fromPoints",value:function(e,n){return new t(n.x-e.x,n.y-e.y)}}]),t}(),a=function(){function t(n,i,r,s,a,o){e(this,t),this.a=void 0!==n?n:1,this.b=void 0!==i?i:0,this.c=void 0!==r?r:0,this.d=void 0!==s?s:1,this.e=void 0!==a?a:0,this.f=void 0!==o?o:0}return i(t,[{key:"multiply",value:function(t){return this.isIdentity()?t:t.isIdentity()?this:new this.constructor(this.a*t.a+this.c*t.b,this.b*t.a+this.d*t.b,this.a*t.c+this.c*t.d,this.b*t.c+this.d*t.d,this.a*t.e+this.c*t.f+this.e,this.b*t.e+this.d*t.f+this.f)}},{key:"inverse",value:function(){if(this.isIdentity())return this;var t=this.a*this.d-this.b*this.c;if(0===t)throw new Error("Matrix is not invertible");var e=1/t,n=this.f*this.c-this.e*this.d,i=this.e*this.b-this.f*this.a;return new this.constructor(this.d*e,-this.b*e,-this.c*e,this.a*e,n*e,i*e)}},{key:"translate",value:function(t,e){return new this.constructor(this.a,this.b,this.c,this.d,this.a*t+this.c*e+this.e,this.b*t+this.d*e+this.f)}},{key:"scale",value:function(t){return new this.constructor(this.a*t,this.b*t,this.c*t,this.d*t,this.e,this.f)}},{key:"scaleAt",value:function(t,e){var n=e.x-t*e.x,i=e.y-t*e.y;return new this.constructor(this.a*t,this.b*t,this.c*t,this.d*t,this.a*n+this.c*i+this.e,this.b*n+this.d*i+this.f)}},{key:"scaleNonUniform",value:function(t,e){return new this.constructor(this.a*t,this.b*t,this.c*e,this.d*e,this.e,this.f)}},{key:"scaleNonUniformAt",value:function(t,e,n){var i=n.x-t*n.x,r=n.y-e*n.y;return new this.constructor(this.a*t,this.b*t,this.c*e,this.d*e,this.a*i+this.c*r+this.e,this.b*i+this.d*r+this.f)}},{key:"rotate",value:function(t){var e=Math.cos(t),n=Math.sin(t);return new this.constructor(this.a*e+this.c*n,this.b*e+this.d*n,this.a*-n+this.c*e,this.b*-n+this.d*e,this.e,this.f)}},{key:"rotateAt",value:function(t,e){var n=Math.cos(t),i=Math.sin(t),r=e.x,s=e.y,a=this.a*n+this.c*i,o=this.b*n+this.d*i,y=this.c*n-this.a*i,u=this.d*n-this.b*i;return new this.constructor(a,o,y,u,(this.a-a)*r+(this.c-y)*s+this.e,(this.b-o)*r+(this.d-u)*s+this.f)}},{key:"rotateFromVector",value:function(t){var e=t.unit(),n=e.x,i=e.y;return new this.constructor(this.a*n+this.c*i,this.b*n+this.d*i,this.a*-i+this.c*n,this.b*-i+this.d*n,this.e,this.f)}},{key:"flipX",value:function(){return new this.constructor(-this.a,-this.b,this.c,this.d,this.e,this.f)}},{key:"flipY",value:function(){return new this.constructor(this.a,this.b,-this.c,-this.d,this.e,this.f)}},{key:"skewX",value:function(t){var e=Math.tan(t);return new this.constructor(this.a,this.b,this.c+this.a*e,this.d+this.b*e,this.e,this.f)}},{key:"skewY",value:function(t){var e=Math.tan(t);return new this.constructor(this.a+this.c*e,this.b+this.d*e,this.c,this.d,this.e,this.f)}},{key:"isIdentity",value:function(){return 1===this.a&&0===this.b&&0===this.c&&1===this.d&&0===this.e&&0===this.f}},{key:"isInvertible",value:function(){return this.a*this.d-this.b*this.c!=0}},{key:"getScale",value:function(){return{scaleX:Math.sqrt(this.a*this.a+this.c*this.c),scaleY:Math.sqrt(this.b*this.b+this.d*this.d)}}},{key:"getDecomposition",value:function(){var t=.5*(this.a+this.d),e=.5*(this.a-this.d),n=.5*(this.b+this.c),i=.5*(this.b-this.c),r=Math.sqrt(t*t+i*i),s=Math.sqrt(e*e+n*n),a=r+s,o=r-s,y=Math.atan2(n,e),u=Math.atan2(i,t),l=.5*(u-y),c=.5*(u+y);return{translation:this.constructor.translation(this.e,this.f),rotation:this.constructor.rotation(c),scale:this.constructor.nonUniformScaling(a,o),rotation0:this.constructor.rotation(l)}}},{key:"equals",value:function(t){return this.a===t.a&&this.b===t.b&&this.c===t.c&&this.d===t.d&&this.e===t.e&&this.f===t.f}},{key:"precisionEquals",value:function(t,e){return Math.abs(this.a-t.a)<e&&Math.abs(this.b-t.b)<e&&Math.abs(this.c-t.c)<e&&Math.abs(this.d-t.d)<e&&Math.abs(this.e-t.e)<e&&Math.abs(this.f-t.f)<e}},{key:"toString",value:function(){return"matrix("+[this.a,this.b,this.c,this.d,this.e,this.f].join(",")+")"}}],[{key:"translation",value:function(e,n){return new t(1,0,0,1,e,n)}},{key:"scaling",value:function(e){return new t(e,0,0,e,0,0)}},{key:"scalingAt",value:function(e,n){return new t(e,0,0,e,n.x-n.x*e,n.y-n.y*e)}},{key:"nonUniformScaling",value:function(e,n){return new t(e,0,0,n,0,0)}},{key:"nonUniformScalingAt",value:function(e,n,i){return new t(e,0,0,n,i.x-i.x*e,i.y-i.y*n)}},{key:"rotation",value:function(e){var n=Math.cos(e),i=Math.sin(e);return new t(n,i,-i,n,0,0)}},{key:"rotationAt",value:function(e,n){var i=Math.cos(e),r=Math.sin(e);return new t(i,r,-r,i,n.x-n.x*i+n.y*r,n.y-n.y*i-n.x*r)}},{key:"rotationFromVector",value:function(e){var n=e.unit(),i=n.x,r=n.y;return new t(i,r,-r,i,0,0)}},{key:"xFlip",value:function(){return new t(-1,0,0,1,0,0)}},{key:"yFlip",value:function(){return new t(1,0,0,-1,0,0)}},{key:"xSkew",value:function(e){return new t(1,0,Math.tan(e),1,0,0)}},{key:"ySkew",value:function(e){return new t(1,Math.tan(e),0,1,0,0)}}]),t}();function o(t){return"number"==typeof t?t?t<0?-1:1:t==t?t:NaN:NaN}a.IDENTITY=new a,a.IDENTITY.isIdentity=function(){return!0};var y=function(){function t(){e(this,t),this.coefs=[];for(var n=arguments.length-1;n>=0;n--)this.coefs.push(n<0||arguments.length<=n?void 0:arguments[n]);this._variable="t",this._s=0}return i(t,[{key:"clone",value:function(){var e=new t;return e.coefs=this.coefs.slice(),e}},{key:"eval",value:function(t){if(isNaN(t))throw new Error("Polynomial.eval: parameter must be a number, got '".concat(t,"'"));for(var e=0,n=this.coefs.length-1;n>=0;n--)e=e*t+this.coefs[n];return e}},{key:"add",value:function(e){for(var n=new t,i=this.getDegree(),r=e.getDegree(),s=Math.max(i,r),a=0;a<=s;a++){var o=a<=i?this.coefs[a]:0,y=a<=r?e.coefs[a]:0;n.coefs[a]=o+y}return n}},{key:"multiply",value:function(e){for(var n=new t,i=0;i<=this.getDegree()+e.getDegree();i++)n.coefs.push(0);for(var r=0;r<=this.getDegree();r++)for(var s=0;s<=e.getDegree();s++)n.coefs[r+s]+=this.coefs[r]*e.coefs[s];return n}},{key:"divide_scalar",value:function(t){for(var e=0;e<this.coefs.length;e++)this.coefs[e]/=t}},{key:"simplify",value:function(t){void 0===t&&(t=1e-12);for(var e=this.getDegree();e>=0&&Math.abs(this.coefs[e])<=t;e--)this.coefs.pop()}},{key:"bisection",value:function(e,n){var i,r=this.eval(e),s=this.eval(n);if(Math.abs(r)<=t.TOLERANCE)i=e;else if(Math.abs(s)<=t.TOLERANCE)i=n;else if(r*s<=0)for(var a=Math.log(n-e),o=Math.LN10*t.ACCURACY,y=Math.ceil((a+o)/Math.LN2),u=0;u<y;u++){i=.5*(e+n);var l=this.eval(i);if(Math.abs(l)<=t.TOLERANCE)break;l*r<0?(n=i,s=l):(e=i,r=l)}return i}},{key:"toString",value:function(){for(var t=[],e=[],n=this.coefs.length-1;n>=0;n--){var i=Math.round(1e3*this.coefs[n])/1e3;if(0!==i){var r=i<0?" - ":" + ";i=Math.abs(i),n>0&&(1===i?i=this._variable:i+=this._variable),n>1&&(i+="^"+n),e.push(r),t.push(i)}}e[0]=" + "===e[0]?"":"-";for(var s="",a=0;a<t.length;a++)s+=e[a]+t[a];return s}},{key:"trapezoid",value:function(t,e,n){if(isNaN(t)||isNaN(e)||isNaN(n))throw new Error("Polynomial.trapezoid: parameters must be numbers");var i=e-t;if(1===n){var r=this.eval(t),s=this.eval(e);this._s=.5*i*(r+s)}else{for(var a=1<<n-2,o=i/a,y=t+.5*o,u=0,l=0;l<a;l++)u+=this.eval(y),y+=o;this._s=.5*(this._s+i*u/a)}if(isNaN(this._s))throw new Error("Polynomial.trapezoid: this._s is NaN");return this._s}},{key:"simpson",value:function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Polynomial.simpson: parameters must be numbers");for(var n=e-t,i=.5*n*(this.eval(t)+this.eval(e)),r=i,s=4*i/3,a=s,o=i,y=1,u=2;u<=20;u++){for(var l=n/y,c=t+.5*l,h=0,x=1;x<=y;x++)h+=this.eval(c),c+=l;if(s=(4*(i=r=.5*(r+n*h/y))-o)/3,Math.abs(s-a)<1e-7*Math.abs(a))break;a=s,o=i,y<<=1}return s}},{key:"romberg",value:function(e,n){if(isNaN(e)||isNaN(n))throw new Error("Polynomial.romberg: parameters must be numbers");var i=new Array(21),r=new Array(21),s={y:0,dy:0};r[0]=1;for(var a=1;a<=20&&(i[a-1]=this.trapezoid(e,n,a),!(a>=3&&(s=t.interpolate(r,i,3,a-3,0),Math.abs(s.dy)<=1e-6*s.y)));a++)i[a]=i[a-1],r[a]=.25*r[a-1];return s.y}},{key:"getDegree",value:function(){return this.coefs.length-1}},{key:"getDerivative",value:function(){for(var e=new t,n=1;n<this.coefs.length;n++)e.coefs.push(n*this.coefs[n]);return e}},{key:"getRoots",value:function(){var t;switch(this.simplify(),this.getDegree()){case 0:t=[];break;case 1:t=this.getLinearRoot();break;case 2:t=this.getQuadraticRoots();break;case 3:t=this.getCubicRoots();break;case 4:t=this.getQuarticRoots();break;default:t=[]}return t}},{key:"getRootsInInterval",value:function(t,e){var n=[];function i(t){"number"==typeof t&&n.push(t)}if(0===this.getDegree())throw new Error("Polynomial.getRootsInInterval: Unexpected empty polynomial");if(1===this.getDegree())i(this.bisection(t,e));else{var r=this.getDerivative().getRootsInInterval(t,e);if(r.length>0){i(this.bisection(t,r[0]));for(var s=0;s<=r.length-2;s++)i(this.bisection(r[s],r[s+1]));i(this.bisection(r[r.length-1],e))}else i(this.bisection(t,e))}return n}},{key:"getLinearRoot",value:function(){var t=[],e=this.coefs[1];return 0!==e&&t.push(-this.coefs[0]/e),t}},{key:"getQuadraticRoots",value:function(){var t=[];if(2===this.getDegree()){var e=this.coefs[2],n=this.coefs[1]/e,i=n*n-4*(this.coefs[0]/e);if(i>0){var r=Math.sqrt(i);t.push(.5*(-n+r)),t.push(.5*(-n-r))}else 0===i&&t.push(.5*-n)}return t}},{key:"getCubicRoots",value:function(){var t=[];if(3===this.getDegree()){var e=this.coefs[3],n=this.coefs[2]/e,i=this.coefs[1]/e,r=(3*i-n*n)/3,s=(2*n*n*n-9*i*n+27*(this.coefs[0]/e))/27,a=n/3,o=s*s/4+r*r*r/27,y=s/2,u=this.zeroErrorEstimate();if(Math.abs(o)<=u&&(o=0),o>0){var l,c=Math.sqrt(o),h=-y+c;l=h>=0?Math.pow(h,1/3):-Math.pow(-h,1/3),(h=-y-c)>=0?l+=Math.pow(h,1/3):l-=Math.pow(-h,1/3),t.push(l-a)}else if(o<0){var x=Math.sqrt(-r/3),f=Math.atan2(Math.sqrt(-o),-y)/3,p=Math.cos(f),v=Math.sin(f),d=Math.sqrt(3);t.push(2*x*p-a),t.push(-x*(p+d*v)-a),t.push(-x*(p-d*v)-a)}else{var w;w=y>=0?-Math.pow(y,1/3):Math.pow(-y,1/3),t.push(2*w-a),t.push(-w-a)}}return t}},{key:"getQuarticRoots",value:function(){var e=[],n=this.getDegree();if(4===n){var i=new t;i.coefs=this.coefs.slice(),i.divide_scalar(i.coefs[n]);Math.abs(i.coefs[0])<10*1e-15*Math.abs(i.coefs[3])&&(i.coefs[0]=0);for(var r=i.getDerivative(),s=r.getRoots().sort(function(t,e){return t-e}),a=[],y=s.length-1,u=this.bounds(),l=Math.max(Math.abs(u.minX),Math.abs(u.maxX)),c=this.zeroErrorEstimate(l),h=0;h<=y;h++)a.push(i.eval(s[h]));for(var x=0;x<=y;x++)Math.abs(a[x])<c&&(a[x]=0);var f=0,p=Math.max(.1*(u.maxX-u.minX)/n,1e-15),v=[],d=[];if(y>-1){for(0!==a[0]?o(a[0])!==o(i.eval(s[0]-p)-a[0])&&(v.push(s[0]-p),d.push([u.minX,s[0]])):(e.push(s[0],s[0]),f++);f<y;f++)0===a[f+1]?(e.push(s[f+1],s[f+1]),f++):o(a[f])!==o(a[f+1])&&(v.push((s[f]+s[f+1])/2),d.push([s[f],s[f+1]]));0!==a[y]&&o(a[y])!==o(i.eval(s[y]+p)-a[y])&&(v.push(s[y]+p),d.push([s[y],u.maxX]))}var w=function(t){return i.eval(t)},m=function(t){return r.eval(t)};if(v.length>0)for(f=0;f<v.length;f++)v[f]=t.newton_secant_bisection(v[f],w,m,32,d[f][0],d[f][1]);e=e.concat(v)}return e}},{key:"zeroErrorEstimate",value:function(t){if(void 0===t){var e=this.bounds();t=Math.max(Math.abs(e.minX),Math.abs(e.maxX))}if(t<.001)return 2*Math.abs(this.eval(1e-15));var n=this.coefs.length-1,i=this.coefs[n];return 10*1e-15*this.coefs.reduce(function(e,n,r){var s=n/i*Math.pow(t,r);return s>e?s:e},0)}},{key:"bounds_UpperReal_Fujiwara",value:function(){var t=this.coefs,e=t.length-1,n=t[e];1!==n&&(t=this.coefs.map(function(t){return t/n}));var i,r=t.map(function(t,n){return n<e?Math.pow(Math.abs(0===n?t/2:t),1/(e-n)):t}),s=function(t,e,n){return i(n)&&(t.max<e?(t.nearmax=t.max,t.max=e):t.nearmax<e&&(t.nearmax=e)),t};i=function(n){return n<e&&t[n]<0};var a=r.reduce(s,{max:0,nearmax:0});return i=function(n){return n<e&&(e%2==n%2?t[n]<0:t[n]>0)},{negX:-2*r.reduce(s,{max:0,nearmax:0}).max,posX:2*a.max}}},{key:"bounds_LowerReal_Fujiwara",value:function(){var e=new t;e.coefs=this.coefs.slice().reverse();var n=e.bounds_UpperReal_Fujiwara();return n.negX=1/n.negX,n.posX=1/n.posX,n}},{key:"bounds",value:function(){var t=this.bounds_UpperReal_Fujiwara(),e={minX:t.negX,maxX:t.posX};return 0===t.negX&&0===t.posX?e:(0===t.negX?e.minX=this.bounds_LowerReal_Fujiwara().posX:0===t.posX&&(e.maxX=this.bounds_LowerReal_Fujiwara().negX),e.minX>e.maxX&&(e.minX=e.maxX=0),e)}},{key:"modify_zeroSmallCoefs",value:function(){for(var t=this.coefs,e=10*1e-15*Math.abs(t.reduce(function(t,e){return Math.abs(e)>Math.abs(t)?e:t})),n=0;n<t.length-1;n++)Math.abs(t[n])<e&&(t[n]=0);return this}},{key:"modify_toMonic",value:function(){var t=this.coefs;return 1!==t[t.length-1]&&this.divide_scalar(t[t.length-1]),this}},{key:"bound_UpperAbs_Rouche",value:function(){var t=this.coefs,e=t.length-1;return 1+t.reduce(function(t,n,i){return i!==e&&t<(n=Math.abs(n))?n:t},0)/Math.abs(t[e])}},{key:"bound_LowerAbs_Rouche",value:function(){var t=this.coefs,e=t.reduce(function(t,e,n){return 0!==n&&t<(e=Math.abs(e))?e:t},0);return Math.abs(t[0])/(Math.abs(t[0])+e)}},{key:"bounds_Real_Laguerre",value:function(){var t=this.coefs,e=t.length-1,n=-t[e-1]/(e*t[e]),i=t[e-1]*t[e-1]-2*e/(e-1)*t[e]*t[e-2],r=(e-1)/(e*t[e])*Math.sqrt(i);return r<0&&(r=-r),{minX:n-r,maxX:n+r}}},{key:"countRoots_Descartes",value:function(){var t=this.coefs,e=t.length-1,n=t.reduce(function(t,e,n){return 0!==t.prev_a&&0!==e&&(t.prev_a<0==e>0&&t.pos++,n%2==0!=t.prev_a<0==(n%2==1!=e>0)&&t.neg++),t.prev_a=e,t},{pos:0,neg:0,prev_a:0});return{maxRealPos:n.pos,maxRealNeg:n.neg,minComplex:e-(n.pos+n.neg)}}}],[{key:"interpolate",value:function(t,e,n,i,r){if(t.constructor!==Array||e.constructor!==Array)throw new Error("Polynomial.interpolate: xs and ys must be arrays");if(isNaN(n)||isNaN(i)||isNaN(r))throw new Error("Polynomial.interpolate: n, offset, and x must be numbers");var s,a=0,o=0,y=new Array(n),u=new Array(n),l=0,c=Math.abs(r-t[i]);for(s=0;s<n;s++){var h=Math.abs(r-t[i+s]);h<c&&(l=s,c=h),y[s]=u[s]=e[i+s]}a=e[i+l],l--;for(var x=1;x<n;x++){for(s=0;s<n-x;s++){var f=t[i+s]-r,p=t[i+s+x]-r,v=y[s+1]-u[s],d=f-p;if(0===d)throw new Error("Unable to interpolate polynomial. Two numbers in n were identical (to within roundoff)");d=v/d,u[s]=p*d,y[s]=f*d}a+=o=2*(l+1)<n-x?y[l+1]:u[l--]}return{y:a,dy:o}}},{key:"newton_secant_bisection",value:function(t,e,n,i,r,s){var a,y,u,l,c,h,x,f=0,p=0;a=t;var v=Math.pow(10,-14),d="number"==typeof r&&"number"==typeof s;if(d){if(r>s)throw new Error("newton root finding: min must be greater than max");if(h=e(r),x=e(s),o(h)===o(x))throw new Error("newton root finding: y values of bounds must be of opposite sign")}for(var w=function(){return Math.abs(u)<=v*Math.abs(a)||p===a-u-a},m=0;m<i;m++){if(0===(y=n(a))){if(0===f)throw new Error("newton root finding: df(x) is zero");y=f}if(f=y,c=e(a),l=a-(u=c/y),w())break;if(d){if(o(c)===o(x))s=a,x=c;else{if(o(c)!==o(h)){a=l;break}r=a,h=c}if(l<r||l>s){if(o(h)===o(x))break;var g=x-h,b=s-r;if(u=0===g?a-(r+.5*b):Math.abs(g/Math.min(h,x))>50?a-(r+b*(.5+(Math.abs(h)<Math.abs(x)?-.25:.25))):a-(r-h/g*b),l=a-u,w())break}}p=a-l,a=l}return a}}]),t}();function u(t){return null==t}function l(t){var e=t.slice();return e.push(t[0]),e}y.TOLERANCE=1e-6,y.ACCURACY=15;var c=function(){function t(n){e(this,t),this.init(n)}return i(t,[{key:"init",value:function(t){this.status=t,this.points=[]}},{key:"appendPoint",value:function(t){this.points.push(t)}},{key:"appendPoints",value:function(t){this.points=this.points.concat(t)}}]),t}();c.intersect=function(t,e){var n;if(u(t)||u(e))n=new c("No Intersection");else if("Path"===t.name)n=c.intersectPathShape(t,e);else if("Path"===e.name)n=c.intersectPathShape(e,t);else{var i,r;if(t.name<e.name?(i="intersect"+t.name+e.name,r=t.args.concat(e.args)):(i="intersect"+e.name+t.name,r=e.args.concat(t.args)),!(i in c))throw new Error("Intersection not available: "+i);n=c[i].apply(null,r)}return n},c.intersectPathShape=function(t,e){var n=new c("No Intersection"),i=!0,r=!1,s=void 0;try{for(var a,o=t.args[Symbol.iterator]();!(i=(a=o.next()).done);i=!0){var y=a.value,u=c.intersect(y,e);n.appendPoints(u.points)}}catch(t){r=!0,s=t}finally{try{i||null==o.return||o.return()}finally{if(r)throw s}}return n.points.length>0&&(n.status="Intersection"),n},c.intersectBezier2Bezier2=function(t,e,n,i,s,a){var o,u,l=new c("No Intersection");o=e.multiply(-2);var h=t.add(o.add(n));o=t.multiply(-2),u=e.multiply(2);var x=o.add(u),f=new r(t.x,t.y);o=s.multiply(-2);var p=i.add(o.add(a));o=i.multiply(-2),u=s.multiply(2);var v=o.add(u),d=new r(i.x,i.y);o=h.x*x.y-x.x*h.y,u=p.x*x.y-x.x*p.y;var w=v.x*x.y-x.x*v.y,m=x.x*(f.y-d.y)+x.y*(-f.x+d.x),g=p.x*h.y-h.x*p.y,b=v.x*h.y-h.x*v.y,k=h.x*(f.y-d.y)+h.y*(-f.x+d.x),M=new y(-g*g,-2*g*b,o*u-b*b-2*g*k,o*w-2*b*k,o*m-k*k).getRoots(),P=!0,I=!1,N=void 0;try{for(var R,L=M[Symbol.iterator]();!(P=(R=L.next()).done);P=!0){var E=R.value;if(0<=E&&E<=1){var z=new y(h.x,x.x,f.x-d.x-E*v.x-E*E*p.x);z.simplify();var _=z.getRoots(),B=new y(h.y,x.y,f.y-d.y-E*v.y-E*E*p.y);B.simplify();var C=B.getRoots();if(_.length>0&&C.length>0){var X=!0,S=!1,A=void 0;try{t:for(var D,q=_[Symbol.iterator]();!(X=(D=q.next()).done);X=!0){var U=D.value;if(0<=U&&U<=1)for(var j=0;j<C.length;j++)if(Math.abs(U-C[j])<1e-4){l.points.push(p.multiply(E*E).add(v.multiply(E).add(d)));break t}}}catch(t){S=!0,A=t}finally{try{X||null==q.return||q.return()}finally{if(S)throw A}}}}}}catch(t){I=!0,N=t}finally{try{P||null==L.return||L.return()}finally{if(I)throw N}}return l.points.length>0&&(l.status="Intersection"),l},c.intersectBezier2Bezier3=function(t,e,n,i,a,o,u){var l,h,x,f,p=new c("No Intersection");l=e.multiply(-2);var v=t.add(l.add(n));l=t.multiply(-2),h=e.multiply(2);var d=l.add(h),w=new r(t.x,t.y);l=i.multiply(-1),h=a.multiply(3),x=o.multiply(-3),f=l.add(h.add(x.add(u)));var m=new s(f.x,f.y);l=i.multiply(3),h=a.multiply(-6),x=o.multiply(3),f=l.add(h.add(x));var g=new s(f.x,f.y);l=i.multiply(-3),h=a.multiply(3),x=l.add(h);var b=new s(x.x,x.y),k=new s(i.x,i.y),M=w.x*w.x,P=w.y*w.y,I=d.x*d.x,N=d.y*d.y,R=v.x*v.x,L=v.y*v.y,E=k.x*k.x,z=k.y*k.y,_=b.x*b.x,B=b.y*b.y,C=g.x*g.x,X=g.y*g.y,S=m.x*m.x,A=m.y*m.y,D=new y(-2*v.x*v.y*m.x*m.y+R*A+L*S,-2*v.x*v.y*g.x*m.y-2*v.x*v.y*g.y*m.x+2*L*g.x*m.x+2*R*g.y*m.y,-2*v.x*b.x*v.y*m.y-2*v.x*v.y*b.y*m.x-2*v.x*v.y*g.x*g.y+2*b.x*L*m.x+L*C+R*(2*b.y*m.y+X),2*w.x*v.x*v.y*m.y+2*w.y*v.x*v.y*m.x+d.x*d.y*v.x*m.y+d.x*d.y*v.y*m.x-2*k.x*v.x*v.y*m.y-2*v.x*k.y*v.y*m.x-2*v.x*b.x*v.y*g.y-2*v.x*v.y*b.y*g.x-2*w.x*L*m.x-2*w.y*R*m.y+2*k.x*L*m.x+2*b.x*L*g.x-N*v.x*m.x-I*v.y*m.y+R*(2*k.y*m.y+2*b.y*g.y),2*w.x*v.x*v.y*g.y+2*w.y*v.x*v.y*g.x+d.x*d.y*v.x*g.y+d.x*d.y*v.y*g.x-2*k.x*v.x*v.y*g.y-2*v.x*k.y*v.y*g.x-2*v.x*b.x*v.y*b.y-2*w.x*L*g.x-2*w.y*R*g.y+2*k.x*L*g.x-N*v.x*g.x-I*v.y*g.y+_*L+R*(2*k.y*g.y+B),2*w.x*v.x*v.y*b.y+2*w.y*v.x*b.x*v.y+d.x*d.y*v.x*b.y+d.x*d.y*b.x*v.y-2*k.x*v.x*v.y*b.y-2*v.x*k.y*b.x*v.y-2*w.x*b.x*L-2*w.y*R*b.y+2*k.x*b.x*L-N*v.x*b.x-I*v.y*b.y+2*R*k.y*b.y,-2*w.x*w.y*v.x*v.y-w.x*d.x*d.y*v.y-w.y*d.x*d.y*v.x+2*w.x*v.x*k.y*v.y+2*w.y*k.x*v.x*v.y+d.x*k.x*d.y*v.y+d.x*d.y*v.x*k.y-2*k.x*v.x*k.y*v.y-2*w.x*k.x*L+w.x*N*v.x+w.y*I*v.y-2*w.y*R*k.y-k.x*N*v.x-I*k.y*v.y+M*L+P*R+E*L+R*z).getRootsInInterval(0,1),q=!0,U=!1,j=void 0;try{for(var F,O=D[Symbol.iterator]();!(q=(F=O.next()).done);q=!0){var T=F.value,Y=new y(v.x,d.x,w.x-k.x-T*b.x-T*T*g.x-T*T*T*m.x).getRoots(),Q=new y(v.y,d.y,w.y-k.y-T*b.y-T*T*g.y-T*T*T*m.y).getRoots();if(Y.length>0&&Q.length>0){var V=!0,K=!1,G=void 0;try{t:for(var H,J=Y[Symbol.iterator]();!(V=(H=J.next()).done);V=!0){var W=H.value;if(0<=W&&W<=1)for(var Z=0;Z<Q.length;Z++)if(Math.abs(W-Q[Z])<1e-4){p.points.push(m.multiply(T*T*T).add(g.multiply(T*T).add(b.multiply(T).add(k))));break t}}}catch(t){K=!0,G=t}finally{try{V||null==J.return||J.return()}finally{if(K)throw G}}}}}catch(t){U=!0,j=t}finally{try{q||null==O.return||O.return()}finally{if(U)throw j}}return p.points.length>0&&(p.status="Intersection"),p},c.intersectBezier2Circle=function(t,e,n,i,r){return c.intersectBezier2Ellipse(t,e,n,i,r,r)},c.intersectBezier2Ellipse=function(t,e,n,i,s,a){var o,u=new c("No Intersection");o=e.multiply(-2);var l=t.add(o.add(n));o=t.multiply(-2);var h=e.multiply(2),x=o.add(h),f=new r(t.x,t.y),p=s*s,v=a*a,d=new y(v*l.x*l.x+p*l.y*l.y,2*(v*l.x*x.x+p*l.y*x.y),v*(2*l.x*f.x+x.x*x.x)+p*(2*l.y*f.y+x.y*x.y)-2*(v*i.x*l.x+p*i.y*l.y),2*(v*x.x*(f.x-i.x)+p*x.y*(f.y-i.y)),v*(f.x*f.x+i.x*i.x)+p*(f.y*f.y+i.y*i.y)-2*(v*i.x*f.x+p*i.y*f.y)-p*v).getRoots(),w=!0,m=!1,g=void 0;try{for(var b,k=d[Symbol.iterator]();!(w=(b=k.next()).done);w=!0){var M=b.value;0<=M&&M<=1&&u.points.push(l.multiply(M*M).add(x.multiply(M).add(f)))}}catch(t){m=!0,g=t}finally{try{w||null==k.return||k.return()}finally{if(m)throw g}}return u.points.length>0&&(u.status="Intersection"),u},c.intersectBezier2Line=function(t,e,n,i,a){var o,u=i.min(a),l=i.max(a),h=new c("No Intersection");o=e.multiply(-2);var x=t.add(o.add(n));o=t.multiply(-2);var f=e.multiply(2),p=o.add(f),v=new r(t.x,t.y),d=new s(i.y-a.y,a.x-i.x),w=i.x*a.y-a.x*i.y,m=new y(d.dot(x),d.dot(p),d.dot(v)+w).getRoots(),g=!0,b=!1,k=void 0;try{for(var M,P=m[Symbol.iterator]();!(g=(M=P.next()).done);g=!0){var I=M.value;if(0<=I&&I<=1){var N=t.lerp(e,I),R=e.lerp(n,I),L=N.lerp(R,I);i.x==a.x?u.y<=L.y&&L.y<=l.y&&(h.status="Intersection",h.appendPoint(L)):i.y==a.y?u.x<=L.x&&L.x<=l.x&&(h.status="Intersection",h.appendPoint(L)):u.x<=L.x&&L.x<=l.x&&u.y<=L.y&&L.y<=l.y&&(h.status="Intersection",h.appendPoint(L))}}}catch(t){b=!0,k=t}finally{try{g||null==P.return||P.return()}finally{if(b)throw k}}return h},c.intersectBezier2Polygon=function(t,e,n,i){return c.intersectBezier2Polyline(t,e,n,l(i))},c.intersectBezier2Polyline=function(t,e,n,i){for(var r=new c("No Intersection"),s=i.length,a=0;a<s-1;a++){var o=i[a],y=i[a+1],u=c.intersectBezier2Line(t,e,n,o,y);r.appendPoints(u.points)}return r.points.length>0&&(r.status="Intersection"),r},c.intersectBezier2Rectangle=function(t,e,n,i,s){var a=i.min(s),o=i.max(s),y=new r(o.x,a.y),u=new r(a.x,o.y),l=c.intersectBezier2Line(t,e,n,a,y),h=c.intersectBezier2Line(t,e,n,y,o),x=c.intersectBezier2Line(t,e,n,o,u),f=c.intersectBezier2Line(t,e,n,u,a),p=new c("No Intersection");return p.appendPoints(l.points),p.appendPoints(h.points),p.appendPoints(x.points),p.appendPoints(f.points),p.points.length>0&&(p.status="Intersection"),p},c.intersectBezier3Bezier3=function(t,e,n,i,r,a,o,u){var l,h,x,f,p=new c("No Intersection");l=t.multiply(-1),h=e.multiply(3),x=n.multiply(-3),f=l.add(h.add(x.add(i)));var v=new s(f.x,f.y);l=t.multiply(3),h=e.multiply(-6),x=n.multiply(3),f=l.add(h.add(x));var d=new s(f.x,f.y);l=t.multiply(-3),h=e.multiply(3),x=l.add(h);var w=new s(x.x,x.y),m=new s(t.x,t.y);l=r.multiply(-1),h=a.multiply(3),x=o.multiply(-3),f=l.add(h.add(x.add(u)));var g=new s(f.x,f.y);l=r.multiply(3),h=a.multiply(-6),x=o.multiply(3),f=l.add(h.add(x));var b=new s(f.x,f.y);l=r.multiply(-3),h=a.multiply(3),x=l.add(h);var k=new s(x.x,x.y),M=new s(r.x,r.y);l=v.x*d.y-d.x*v.y,h=v.x*w.y-w.x*v.y;var P=v.x*m.y-m.x*v.y+M.x*v.y-v.x*M.y,I=k.x*v.y-v.x*k.y,N=b.x*v.y-v.x*b.y,R=g.x*v.y-v.x*g.y;f=v.x*w.y-w.x*v.y;var L=v.x*m.y+d.x*w.y-w.x*d.y-m.x*v.y+M.x*v.y-v.x*M.y,E=k.x*v.y-v.x*k.y,z=b.x*v.y-v.x*b.y,_=g.x*v.y-v.x*g.y,B=d.x*m.y-m.x*d.y+M.x*d.y-d.x*M.y,C=k.x*d.y-d.x*k.y,X=b.x*d.y-d.x*b.y,S=g.x*d.y-d.x*g.y,A=v.x*m.y-m.x*v.y+M.x*v.y-v.x*M.y,D=k.x*v.y-v.x*k.y,q=b.x*v.y-v.x*b.y,U=g.x*v.y-v.x*g.y,j=d.x*m.y-m.x*d.y+M.x*d.y-d.x*M.y,F=k.x*d.y-d.x*k.y,O=b.x*d.y-d.x*b.y,T=g.x*d.y-d.x*g.y,Y=w.x*m.y-m.x*w.y+M.x*w.y-w.x*M.y,Q=k.x*w.y-w.x*k.y,V=b.x*w.y-w.x*b.y,K=g.x*w.y-w.x*g.y,G=new y(-R*_*U,-R*_*q-R*z*U-N*_*U,-R*_*D-R*z*q-N*_*q-R*E*U-N*z*U-I*_*U,-R*_*A-R*z*D-N*_*D-R*E*q-N*z*q-I*_*q-R*L*U-N*E*U-I*z*U-P*_*U+h*S*U+R*f*T-l*S*T+l*_*K,-R*z*A-N*_*A-R*E*D-N*z*D-I*_*D-R*L*q-N*E*q-I*z*q-P*_*q+h*S*q-N*L*U-I*E*U-P*z*U+h*X*U+R*f*O-l*S*O+N*f*T-l*X*T+l*_*V+l*z*K,-R*E*A-N*z*A-I*_*A-R*L*D-N*E*D-I*z*D-P*_*D+h*S*D-N*L*q-I*E*q-P*z*q+h*X*q-I*L*U-P*E*U+h*C*U+R*f*F-l*S*F+N*f*O-l*X*O+I*f*T-l*C*T+l*_*Q+l*z*V+l*E*K,-R*L*A-N*E*A-I*z*A-P*_*A+h*S*A-N*L*D-I*E*D-P*z*D+h*X*D-I*L*q-P*E*q+h*C*q-P*L*U+h*B*U+R*f*j-l*S*j+N*f*F-l*X*F+I*f*O-l*C*O+P*f*T-l*B*T+l*_*Y+l*z*Q+l*E*V-h*f*K+l*L*K,-N*L*A-I*E*A-P*z*A+h*X*A-I*L*D-P*E*D+h*C*D-P*L*q+h*B*q+N*f*j-l*X*j+I*f*F-l*C*F+P*f*O-l*B*O+l*z*Y+l*E*Q-h*f*V+l*L*V,-I*L*A-P*E*A+h*C*A-P*L*D+h*B*D+I*f*j-l*C*j+P*f*F-l*B*F+l*E*Y-h*f*Q+l*L*Q,-P*L*A+h*B*A+P*f*j-l*B*j-h*f*Y+l*L*Y);G.simplify();var H=G.getRootsInInterval(0,1),J=!0,W=!1,Z=void 0;try{for(var $,tt=H[Symbol.iterator]();!(J=($=tt.next()).done);J=!0){var et=$.value,nt=new y(v.x,d.x,w.x,m.x-M.x-et*k.x-et*et*b.x-et*et*et*g.x);nt.simplify();var it=nt.getRoots(),rt=new y(v.y,d.y,w.y,m.y-M.y-et*k.y-et*et*b.y-et*et*et*g.y);rt.simplify();var st=rt.getRoots();if(it.length>0&&st.length>0){var at=!0,ot=!1,yt=void 0;try{t:for(var ut,lt=it[Symbol.iterator]();!(at=(ut=lt.next()).done);at=!0){var ct=ut.value;if(0<=ct&&ct<=1)for(var ht=0;ht<st.length;ht++)if(Math.abs(ct-st[ht])<1e-4){p.points.push(g.multiply(et*et*et).add(b.multiply(et*et).add(k.multiply(et).add(M))));break t}}}catch(t){ot=!0,yt=t}finally{try{at||null==lt.return||lt.return()}finally{if(ot)throw yt}}}}}catch(t){W=!0,Z=t}finally{try{J||null==tt.return||tt.return()}finally{if(W)throw Z}}return p.points.length>0&&(p.status="Intersection"),p},c.intersectBezier3Circle=function(t,e,n,i,r,s){return c.intersectBezier3Ellipse(t,e,n,i,r,s,s)},c.intersectBezier3Ellipse=function(t,e,n,i,r,a,o){var u,l,h,x,f=new c("No Intersection");u=t.multiply(-1),l=e.multiply(3),h=n.multiply(-3),x=u.add(l.add(h.add(i)));var p=new s(x.x,x.y);u=t.multiply(3),l=e.multiply(-6),h=n.multiply(3),x=u.add(l.add(h));var v=new s(x.x,x.y);u=t.multiply(-3),l=e.multiply(3),h=u.add(l);var d=new s(h.x,h.y),w=new s(t.x,t.y),m=a*a,g=o*o,b=new y(p.x*p.x*g+p.y*p.y*m,2*(p.x*v.x*g+p.y*v.y*m),2*(p.x*d.x*g+p.y*d.y*m)+v.x*v.x*g+v.y*v.y*m,2*p.x*g*(w.x-r.x)+2*p.y*m*(w.y-r.y)+2*(v.x*d.x*g+v.y*d.y*m),2*v.x*g*(w.x-r.x)+2*v.y*m*(w.y-r.y)+d.x*d.x*g+d.y*d.y*m,2*d.x*g*(w.x-r.x)+2*d.y*m*(w.y-r.y),w.x*w.x*g-2*w.y*r.y*m-2*w.x*r.x*g+w.y*w.y*m+r.x*r.x*g+r.y*r.y*m-m*g).getRootsInInterval(0,1),k=!0,M=!1,P=void 0;try{for(var I,N=b[Symbol.iterator]();!(k=(I=N.next()).done);k=!0){var R=I.value;f.points.push(p.multiply(R*R*R).add(v.multiply(R*R).add(d.multiply(R).add(w))))}}catch(t){M=!0,P=t}finally{try{k||null==N.return||N.return()}finally{if(M)throw P}}return f.points.length>0&&(f.status="Intersection"),f},c.intersectBezier3Line=function(t,e,n,i,r,a){var o,u,l,h,x=r.min(a),f=r.max(a),p=new c("No Intersection");o=t.multiply(-1),u=e.multiply(3),l=n.multiply(-3),h=o.add(u.add(l.add(i)));var v=new s(h.x,h.y);o=t.multiply(3),u=e.multiply(-6),l=n.multiply(3),h=o.add(u.add(l));var d=new s(h.x,h.y);o=t.multiply(-3),u=e.multiply(3),l=o.add(u);var w=new s(l.x,l.y),m=new s(t.x,t.y),g=new s(r.y-a.y,a.x-r.x),b=r.x*a.y-a.x*r.y,k=new y(g.dot(v),g.dot(d),g.dot(w),g.dot(m)+b).getRoots(),M=!0,P=!1,I=void 0;try{for(var N,R=k[Symbol.iterator]();!(M=(N=R.next()).done);M=!0){var L=N.value;if(0<=L&&L<=1){var E=t.lerp(e,L),z=e.lerp(n,L),_=n.lerp(i,L),B=E.lerp(z,L),C=z.lerp(_,L),X=B.lerp(C,L);r.x==a.x?x.y<=X.y&&X.y<=f.y&&(p.status="Intersection",p.appendPoint(X)):r.y==a.y?x.x<=X.x&&X.x<=f.x&&(p.status="Intersection",p.appendPoint(X)):x.x<=X.x&&X.x<=f.x&&x.y<=X.y&&X.y<=f.y&&(p.status="Intersection",p.appendPoint(X))}}}catch(t){P=!0,I=t}finally{try{M||null==R.return||R.return()}finally{if(P)throw I}}return p},c.intersectBezier3Polygon=function(t,e,n,i,r){return this.intersectBezier3Polyline(t,e,n,i,l(r))},c.intersectBezier3Polyline=function(t,e,n,i,r){for(var s=new c("No Intersection"),a=r.length,o=0;o<a-1;o++){var y=r[o],u=r[o+1],l=c.intersectBezier3Line(t,e,n,i,y,u);s.appendPoints(l.points)}return s.points.length>0&&(s.status="Intersection"),s},c.intersectBezier3Rectangle=function(t,e,n,i,s,a){var o=s.min(a),y=s.max(a),u=new r(y.x,o.y),l=new r(o.x,y.y),h=c.intersectBezier3Line(t,e,n,i,o,u),x=c.intersectBezier3Line(t,e,n,i,u,y),f=c.intersectBezier3Line(t,e,n,i,y,l),p=c.intersectBezier3Line(t,e,n,i,l,o),v=new c("No Intersection");return v.appendPoints(h.points),v.appendPoints(x.points),v.appendPoints(f.points),v.appendPoints(p.points),v.points.length>0&&(v.status="Intersection"),v},c.intersectCircleCircle=function(t,e,n,i){var s,a=e+i,o=Math.abs(e-i),y=t.distanceFrom(n);if(y>a)s=new c("Outside");else if(y<o)s=new c("Inside");else{s=new c("Intersection");var u=(e*e-i*i+y*y)/(2*y),l=Math.sqrt(e*e-u*u),h=t.lerp(n,u/y),x=l/y;s.points.push(new r(h.x-x*(n.y-t.y),h.y+x*(n.x-t.x))),s.points.push(new r(h.x+x*(n.y-t.y),h.y-x*(n.x-t.x)))}return s},c.intersectCircleEllipse=function(t,e,n,i,r){return c.intersectEllipseEllipse(t,e,e,n,i,r)},c.intersectCircleLine=function(t,e,n,i){var r,s=(i.x-n.x)*(i.x-n.x)+(i.y-n.y)*(i.y-n.y),a=2*((i.x-n.x)*(n.x-t.x)+(i.y-n.y)*(n.y-t.y)),o=a*a-4*s*(t.x*t.x+t.y*t.y+n.x*n.x+n.y*n.y-2*(t.x*n.x+t.y*n.y)-e*e);if(o<0)r=new c("Outside");else if(0==o)r=new c("Tangent");else{var y=Math.sqrt(o),u=(-a+y)/(2*s),l=(-a-y)/(2*s);(u<0||u>1)&&(l<0||l>1)?r=new c(u<0&&l<0||u>1&&l>1?"Outside":"Inside"):(r=new c("Intersection"),0<=u&&u<=1&&r.points.push(n.lerp(i,u)),0<=l&&l<=1&&r.points.push(n.lerp(i,l)))}return r},c.intersectCirclePolygon=function(t,e,n){return this.intersectCirclePolyline(t,e,l(n))},c.intersectCirclePolyline=function(t,e,n){for(var i,r=new c("No Intersection"),s=n.length,a=0;a<s-1;a++){var o=n[a],y=n[a+1];i=c.intersectCircleLine(t,e,o,y),r.appendPoints(i.points)}return r.points.length>0?r.status="Intersection":r.status=i.status,r},c.intersectCircleRectangle=function(t,e,n,i){var s=n.min(i),a=n.max(i),o=new r(a.x,s.y),y=new r(s.x,a.y),u=c.intersectCircleLine(t,e,s,o),l=c.intersectCircleLine(t,e,o,a),h=c.intersectCircleLine(t,e,a,y),x=c.intersectCircleLine(t,e,y,s),f=new c("No Intersection");return f.appendPoints(u.points),f.appendPoints(l.points),f.appendPoints(h.points),f.appendPoints(x.points),f.points.length>0?f.status="Intersection":f.status=u.status,f},c.intersectEllipseEllipse=function(t,e,n,i,s,a){for(var o=[n*n,0,e*e,-2*n*n*t.x,-2*e*e*t.y,n*n*t.x*t.x+e*e*t.y*t.y-e*e*n*n],u=[a*a,0,s*s,-2*a*a*i.x,-2*s*s*i.y,a*a*i.x*i.x+s*s*i.y*i.y-s*s*a*a],l=c.bezout(o,u).getRoots(),h=.001*(o[0]*o[0]+2*o[1]*o[1]+o[2]*o[2]),x=.001*(u[0]*u[0]+2*u[1]*u[1]+u[2]*u[2]),f=new c("No Intersection"),p=0;p<l.length;p++)for(var v=new y(o[0],o[3]+l[p]*o[1],o[5]+l[p]*(o[4]+l[p]*o[2])).getRoots(),d=0;d<v.length;d++){var w=(o[0]*v[d]+o[1]*l[p]+o[3])*v[d]+(o[2]*l[p]+o[4])*l[p]+o[5];Math.abs(w)<h&&(w=(u[0]*v[d]+u[1]*l[p]+u[3])*v[d]+(u[2]*l[p]+u[4])*l[p]+u[5],Math.abs(w)<x&&f.appendPoint(new r(v[d],l[p])))}return f.points.length>0&&(f.status="Intersection"),f},c.intersectEllipseLine=function(t,e,n,i,r){var a,o=new s(i.x,i.y),y=s.fromPoints(i,r),u=new s(t.x,t.y),l=o.subtract(u),h=new s(y.x/(e*e),y.y/(n*n)),x=new s(l.x/(e*e),l.y/(n*n)),f=y.dot(h),p=y.dot(x),v=p*p-f*(t=l.dot(x)-1);if(v<0)a=new c("Outside");else if(v>0){var d=Math.sqrt(v),w=(-p-d)/f,m=(-p+d)/f;(w<0||1<w)&&(m<0||1<m)?a=new c(w<0&&m<0||w>1&&m>1?"Outside":"Inside"):(a=new c("Intersection"),0<=w&&w<=1&&a.appendPoint(i.lerp(r,w)),0<=m&&m<=1&&a.appendPoint(i.lerp(r,m)))}else{var g=-p/f;0<=g&&g<=1?(a=new c("Intersection")).appendPoint(i.lerp(r,g)):a=new c("Outside")}return a},c.intersectEllipsePolygon=function(t,e,n,i){return this.intersectEllipsePolyline(t,e,n,l(i))},c.intersectEllipsePolyline=function(t,e,n,i){for(var r=new c("No Intersection"),s=i.length,a=0;a<s-1;a++){var o=i[a],y=i[a+1],u=c.intersectEllipseLine(t,e,n,o,y);r.appendPoints(u.points)}return r.points.length>0&&(r.status="Intersection"),r},c.intersectEllipseRectangle=function(t,e,n,i,s){var a=i.min(s),o=i.max(s),y=new r(o.x,a.y),u=new r(a.x,o.y),l=c.intersectEllipseLine(t,e,n,a,y),h=c.intersectEllipseLine(t,e,n,y,o),x=c.intersectEllipseLine(t,e,n,o,u),f=c.intersectEllipseLine(t,e,n,u,a),p=new c("No Intersection");return p.appendPoints(l.points),p.appendPoints(h.points),p.appendPoints(x.points),p.appendPoints(f.points),p.points.length>0&&(p.status="Intersection"),p},c.intersectLineLine=function(t,e,n,i){var s,a=(i.x-n.x)*(t.y-n.y)-(i.y-n.y)*(t.x-n.x),o=(e.x-t.x)*(t.y-n.y)-(e.y-t.y)*(t.x-n.x),y=(i.y-n.y)*(e.x-t.x)-(i.x-n.x)*(e.y-t.y);if(0!=y){var u=a/y,l=o/y;0<=u&&u<=1&&0<=l&&l<=1?(s=new c("Intersection")).points.push(new r(t.x+u*(e.x-t.x),t.y+u*(e.y-t.y))):s=new c("No Intersection")}else s=new c(0==a||0==o?"Coincident":"Parallel");return s},c.intersectLinePolygon=function(t,e,n){return this.intersectLinePolyline(t,e,l(n))},c.intersectLinePolyline=function(t,e,n){for(var i=new c("No Intersection"),r=n.length,s=0;s<r-1;s++){var a=n[s],o=n[s+1],y=c.intersectLineLine(t,e,a,o);i.appendPoints(y.points)}return i.points.length>0&&(i.status="Intersection"),i},c.intersectLineRectangle=function(t,e,n,i){var s=n.min(i),a=n.max(i),o=new r(a.x,s.y),y=new r(s.x,a.y),u=c.intersectLineLine(s,o,t,e),l=c.intersectLineLine(o,a,t,e),h=c.intersectLineLine(a,y,t,e),x=c.intersectLineLine(y,s,t,e),f=new c("No Intersection");return f.appendPoints(u.points),f.appendPoints(l.points),f.appendPoints(h.points),f.appendPoints(x.points),f.points.length>0&&(f.status="Intersection"),f},c.intersectPolygonPolygon=function(t,e){return this.intersectPolylinePolyline(l(t),l(e))},c.intersectPolygonPolyline=function(t,e){return this.intersectPolylinePolyline(l(t),e)},c.intersectPolygonRectangle=function(t,e,n){return this.intersectPolylineRectangle(l(t),e,n)},c.intersectPolylinePolyline=function(t,e){for(var n=new c("No Intersection"),i=t.length,r=0;r<i-1;r++){var s=t[r],a=t[r+1],o=c.intersectLinePolyline(s,a,e);n.appendPoints(o.points)}return n.points.length>0&&(n.status="Intersection"),n},c.intersectPolylineRectangle=function(t,e,n){var i=e.min(n),s=e.max(n),a=new r(s.x,i.y),o=new r(i.x,s.y),y=c.intersectLinePolyline(i,a,t),u=c.intersectLinePolyline(a,s,t),l=c.intersectLinePolyline(s,o,t),h=c.intersectLinePolyline(o,i,t),x=new c("No Intersection");return x.appendPoints(y.points),x.appendPoints(u.points),x.appendPoints(l.points),x.appendPoints(h.points),x.points.length>0&&(x.status="Intersection"),x},c.intersectRectangleRectangle=function(t,e,n,i){var s=t.min(e),a=t.max(e),o=new r(a.x,s.y),y=new r(s.x,a.y),u=c.intersectLineRectangle(s,o,n,i),l=c.intersectLineRectangle(o,a,n,i),h=c.intersectLineRectangle(a,y,n,i),x=c.intersectLineRectangle(y,s,n,i),f=new c("No Intersection");return f.appendPoints(u.points),f.appendPoints(l.points),f.appendPoints(h.points),f.appendPoints(x.points),f.points.length>0&&(f.status="Intersection"),f},c.intersectRayRay=function(t,e,n,i){var s,a=(i.x-n.x)*(t.y-n.y)-(i.y-n.y)*(t.x-n.x),o=(e.x-t.x)*(t.y-n.y)-(e.y-t.y)*(t.x-n.x),y=(i.y-n.y)*(e.x-t.x)-(i.x-n.x)*(e.y-t.y);if(0!=y){var u=a/y;(s=new c("Intersection")).points.push(new r(t.x+u*(e.x-t.x),t.y+u*(e.y-t.y)))}else s=new c(0==a||0==o?"Coincident":"Parallel");return s},c.bezout=function(t,e){var n=t[0]*e[1]-e[0]*t[1],i=t[0]*e[2]-e[0]*t[2],r=t[0]*e[3]-e[0]*t[3],s=t[0]*e[4]-e[0]*t[4],a=t[0]*e[5]-e[0]*t[5],o=t[1]*e[2]-e[1]*t[2],u=t[1]*e[4]-e[1]*t[4],l=t[1]*e[5]-e[1]*t[5],c=t[2]*e[3]-e[2]*t[3],h=t[3]*e[4]-e[3]*t[4],x=t[3]*e[5]-e[3]*t[5],f=l+h,p=u-c;return new y(n*o-i*i,n*p+r*o-2*i*s,n*f+r*p-s*s-2*i*a,n*x+r*f-2*s*a,r*x-a*a)};var h=function(){function t(n,i){e(this,t),this.init(n,i)}return i(t,[{key:"init",value:function(t,e){this.name=t,this.args=e}}]),t}(),x={quadraticBezier:function(t,e,n,i,s,a){return new h("Bezier2",[new r(t,e),new r(n,i),new r(s,a)])},cubicBezier:function(t,e,n,i,s,a,o,y){return new h("Bezier3",[new r(t,e),new r(n,i),new r(s,a),new r(o,y)])},circle:function(t,e,n){return new h("Circle",[new r(t,e),n])},ellipse:function(t,e,n,i){return new h("Ellipse",[new r(t,e),n,i])},line:function(t,e,n,i){return new h("Line",[new r(t,e),new r(n,i)])},path:function(t){return new h("Path",t)},polygon:function(t){for(var e=[],n=0;n<t.length;n+=2)e.push(new r(t[n],t[n+1]));return new h("Polygon",[e])},polyline:function(t){for(var e=[],n=0;n<t.length;n+=2)e.push(new r(t[n],t[n+1]));return new h("Polyline",[e])},rectangle:function(t,e,n,i){return new h("Rectangle",[new r(t,e),new r(t+n,e+i)])}},f={quadraticBezier:function(t,e,n){return new h("Bezier2",[t,e,n])},cubicBezier:function(t,e,n,i){return new h("Bezier3",[t,e,n,i])},circle:function(t,e){return new h("Circle",[t,e])},ellipse:function(t,e,n){return new h("Ellipse",[t,e,n])},line:function(t,e){return new h("Line",[t,e])},path:function(t){return new h("Path",[t])},polygon:function(t){return new h("Polygon",[t])},polyline:function(t){return new h("Polyline",[t])},rectangle:function(t,e){return new h("Rectangle",[t,t.add(e)])}},p={pointInCircle:function(t,e,n){return s.fromPoints(e,t).length()<=n},pointInEllipse:function(t,e,n,i){var r=t.subtract(e);return r.x*r.x/(n*n)+r.y*r.y/(i*i)<=1},pointInPolyline:function(t,e){for(var n,i=e.length,r=0,s=e[0],a=1;a<=i;a++){var o=e[a%i],y=Math.min(s.y,o.y),u=Math.max(s.y,o.y),l=Math.max(s.x,o.x);s.y!==o.y&&y<t.y&&t.y<=u&&t.x<=l&&(n=(t.y-s.y)*(o.x-s.x)/(o.y-s.y)+s.x,(s.x===o.x||t.x<=n)&&r++),s=o}return r%2==1}};p.pointInPolygon=p.pointInPolyline,p.pointInRectangle=function(t,e,n){return e.x<=t.x&&t.x<n.x&&e.y<=t.y&&t.y<n.y},t.AffineShapes=f,t.Intersection=c,t.IntersectionArgs=h,t.IntersectionQuery=p,t.Matrix2D=a,t.Point2D=r,t.Shapes=x,t.Vector2D=s,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=index-umd.min.js.map
