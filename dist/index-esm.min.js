function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}function e(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function i(t,e,i){return e&&n(t.prototype,e),i&&n(t,i),t}function r(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],i=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(i=(s=o.next()).done)&&(n.push(s.value),!e||n.length!==e);i=!0);}catch(t){r=!0,a=t}finally{try{i||null==o.return||o.return()}finally{if(r)throw a}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function a(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var s=function(){function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;e(this,t),this.x=n,this.y=i}return i(t,[{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"add",value:function(t){return new this.constructor(this.x+t.x,this.y+t.y)}},{key:"subtract",value:function(t){return new this.constructor(this.x-t.x,this.y-t.y)}},{key:"multiply",value:function(t){return new this.constructor(this.x*t,this.y*t)}},{key:"divide",value:function(t){return new this.constructor(this.x/t,this.y/t)}},{key:"equals",value:function(t){return this.x===t.x&&this.y===t.y}},{key:"precisionEquals",value:function(t,e){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}},{key:"lerp",value:function(t,e){var n=1-e;return new this.constructor(this.x*n+t.x*e,this.y*n+t.y*e)}},{key:"distanceFrom",value:function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)}},{key:"min",value:function(t){return new this.constructor(Math.min(this.x,t.x),Math.min(this.y,t.y))}},{key:"max",value:function(t){return new this.constructor(Math.max(this.x,t.x),Math.max(this.y,t.y))}},{key:"transform",value:function(t){return new this.constructor(t.a*this.x+t.c*this.y+t.e,t.b*this.x+t.d*this.y+t.f)}},{key:"toString",value:function(){return"point(".concat(this.x,",").concat(this.y,")")}}]),t}(),o=function(){function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;e(this,t),this.x=n,this.y=i}return i(t,[{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"magnitude",value:function(){return this.x*this.x+this.y*this.y}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y}},{key:"cross",value:function(t){return this.x*t.y-this.y*t.x}},{key:"determinant",value:function(t){return this.x*t.y-this.y*t.x}},{key:"unit",value:function(){return this.divide(this.length())}},{key:"add",value:function(t){return new this.constructor(this.x+t.x,this.y+t.y)}},{key:"subtract",value:function(t){return new this.constructor(this.x-t.x,this.y-t.y)}},{key:"multiply",value:function(t){return new this.constructor(this.x*t,this.y*t)}},{key:"divide",value:function(t){return new this.constructor(this.x/t,this.y/t)}},{key:"angleBetween",value:function(t){var e=this.dot(t)/(this.length()*t.length());e=Math.max(-1,Math.min(e,1));var n=Math.acos(e);return this.cross(t)<0?-n:n}},{key:"perp",value:function(){return new this.constructor(-this.y,this.x)}},{key:"perpendicular",value:function(t){return this.subtract(this.project(t))}},{key:"project",value:function(t){var e=this.dot(t)/t.dot(t);return t.multiply(e)}},{key:"transform",value:function(t){return new this.constructor(t.a*this.x+t.c*this.y,t.b*this.x+t.d*this.y)}},{key:"equals",value:function(t){return this.x===t.x&&this.y===t.y}},{key:"precisionEquals",value:function(t,e){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}},{key:"toString",value:function(){return"vector(".concat(this.x,",").concat(this.y,")")}}],[{key:"fromPoints",value:function(e,n){return new t(n.x-e.x,n.y-e.y)}}]),t}(),l=function(){function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;e(this,t),this.a=n,this.b=i,this.c=r,this.d=a,this.e=s,this.f=o}return i(t,[{key:"multiply",value:function(t){return this.isIdentity()?t:t.isIdentity()?this:new this.constructor(this.a*t.a+this.c*t.b,this.b*t.a+this.d*t.b,this.a*t.c+this.c*t.d,this.b*t.c+this.d*t.d,this.a*t.e+this.c*t.f+this.e,this.b*t.e+this.d*t.f+this.f)}},{key:"inverse",value:function(){if(this.isIdentity())return this;var t=this.a*this.d-this.b*this.c;if(0===t)throw new Error("Matrix is not invertible");var e=1/t,n=this.f*this.c-this.e*this.d,i=this.e*this.b-this.f*this.a;return new this.constructor(this.d*e,-this.b*e,-this.c*e,this.a*e,n*e,i*e)}},{key:"translate",value:function(t,e){return new this.constructor(this.a,this.b,this.c,this.d,this.a*t+this.c*e+this.e,this.b*t+this.d*e+this.f)}},{key:"scale",value:function(t){return new this.constructor(this.a*t,this.b*t,this.c*t,this.d*t,this.e,this.f)}},{key:"scaleAt",value:function(t,e){var n=e.x-t*e.x,i=e.y-t*e.y;return new this.constructor(this.a*t,this.b*t,this.c*t,this.d*t,this.a*n+this.c*i+this.e,this.b*n+this.d*i+this.f)}},{key:"scaleNonUniform",value:function(t,e){return new this.constructor(this.a*t,this.b*t,this.c*e,this.d*e,this.e,this.f)}},{key:"scaleNonUniformAt",value:function(t,e,n){var i=n.x-t*n.x,r=n.y-e*n.y;return new this.constructor(this.a*t,this.b*t,this.c*e,this.d*e,this.a*i+this.c*r+this.e,this.b*i+this.d*r+this.f)}},{key:"rotate",value:function(t){var e=Math.cos(t),n=Math.sin(t);return new this.constructor(this.a*e+this.c*n,this.b*e+this.d*n,this.a*-n+this.c*e,this.b*-n+this.d*e,this.e,this.f)}},{key:"rotateAt",value:function(t,e){var n=Math.cos(t),i=Math.sin(t),r=e.x,a=e.y,s=this.a*n+this.c*i,o=this.b*n+this.d*i,l=this.c*n-this.a*i,u=this.d*n-this.b*i;return new this.constructor(s,o,l,u,(this.a-s)*r+(this.c-l)*a+this.e,(this.b-o)*r+(this.d-u)*a+this.f)}},{key:"rotateFromVector",value:function(t){var e=t.unit(),n=e.x,i=e.y;return new this.constructor(this.a*n+this.c*i,this.b*n+this.d*i,this.a*-i+this.c*n,this.b*-i+this.d*n,this.e,this.f)}},{key:"flipX",value:function(){return new this.constructor(-this.a,-this.b,this.c,this.d,this.e,this.f)}},{key:"flipY",value:function(){return new this.constructor(this.a,this.b,-this.c,-this.d,this.e,this.f)}},{key:"skewX",value:function(t){var e=Math.tan(t);return new this.constructor(this.a,this.b,this.c+this.a*e,this.d+this.b*e,this.e,this.f)}},{key:"skewY",value:function(t){var e=Math.tan(t);return new this.constructor(this.a+this.c*e,this.b+this.d*e,this.c,this.d,this.e,this.f)}},{key:"isIdentity",value:function(){return 1===this.a&&0===this.b&&0===this.c&&1===this.d&&0===this.e&&0===this.f}},{key:"isInvertible",value:function(){return this.a*this.d-this.b*this.c!=0}},{key:"getScale",value:function(){return{scaleX:Math.sqrt(this.a*this.a+this.c*this.c),scaleY:Math.sqrt(this.b*this.b+this.d*this.d)}}},{key:"getDecomposition",value:function(){var t=.5*(this.a+this.d),e=.5*(this.a-this.d),n=.5*(this.b+this.c),i=.5*(this.b-this.c),r=Math.sqrt(t*t+i*i),a=Math.sqrt(e*e+n*n),s=r+a,o=r-a,l=Math.atan2(n,e),u=Math.atan2(i,t),h=.5*(u-l),y=.5*(u+l);return{translation:this.constructor.translation(this.e,this.f),rotation:this.constructor.rotation(y),scale:this.constructor.nonUniformScaling(s,o),rotation0:this.constructor.rotation(h)}}},{key:"equals",value:function(t){return this.a===t.a&&this.b===t.b&&this.c===t.c&&this.d===t.d&&this.e===t.e&&this.f===t.f}},{key:"precisionEquals",value:function(t,e){return Math.abs(this.a-t.a)<e&&Math.abs(this.b-t.b)<e&&Math.abs(this.c-t.c)<e&&Math.abs(this.d-t.d)<e&&Math.abs(this.e-t.e)<e&&Math.abs(this.f-t.f)<e}},{key:"toString",value:function(){return"matrix(".concat(this.a,",").concat(this.b,",").concat(this.c,",").concat(this.d,",").concat(this.e,",").concat(this.f,")")}}],[{key:"translation",value:function(e,n){return new t(1,0,0,1,e,n)}},{key:"scaling",value:function(e){return new t(e,0,0,e,0,0)}},{key:"scalingAt",value:function(e,n){return new t(e,0,0,e,n.x-n.x*e,n.y-n.y*e)}},{key:"nonUniformScaling",value:function(e,n){return new t(e,0,0,n,0,0)}},{key:"nonUniformScalingAt",value:function(e,n,i){return new t(e,0,0,n,i.x-i.x*e,i.y-i.y*n)}},{key:"rotation",value:function(e){var n=Math.cos(e),i=Math.sin(e);return new t(n,i,-i,n,0,0)}},{key:"rotationAt",value:function(e,n){var i=Math.cos(e),r=Math.sin(e);return new t(i,r,-r,i,n.x-n.x*i+n.y*r,n.y-n.y*i-n.x*r)}},{key:"rotationFromVector",value:function(e){var n=e.unit(),i=n.x,r=n.y;return new t(i,r,-r,i,0,0)}},{key:"xFlip",value:function(){return new t(-1,0,0,1,0,0)}},{key:"yFlip",value:function(){return new t(1,0,0,-1,0,0)}},{key:"xSkew",value:function(e){return new t(1,0,Math.tan(e),1,0,0)}},{key:"ySkew",value:function(e){return new t(1,Math.tan(e),0,1,0,0)}}]),t}();function u(t){return"number"==typeof t?t?t<0?-1:1:t==t?t:NaN:NaN}l.IDENTITY=new l,l.IDENTITY.isIdentity=function(){return!0};var h=function(){function t(){e(this,t),this.coefs=[];for(var n=arguments.length-1;n>=0;n--)this.coefs.push(n<0||arguments.length<=n?void 0:arguments[n]);this._variable="t",this._s=0}return i(t,[{key:"clone",value:function(){var e=new t;return e.coefs=this.coefs.slice(),e}},{key:"eval",value:function(t){if(isNaN(t))throw new TypeError("Parameter must be a number. Found '".concat(t,"'"));for(var e=0,n=this.coefs.length-1;n>=0;n--)e=e*t+this.coefs[n];return e}},{key:"add",value:function(e){for(var n=new t,i=this.getDegree(),r=e.getDegree(),a=Math.max(i,r),s=0;s<=a;s++){var o=s<=i?this.coefs[s]:0,l=s<=r?e.coefs[s]:0;n.coefs[s]=o+l}return n}},{key:"multiply",value:function(e){for(var n=new t,i=0;i<=this.getDegree()+e.getDegree();i++)n.coefs.push(0);for(var r=0;r<=this.getDegree();r++)for(var a=0;a<=e.getDegree();a++)n.coefs[r+a]+=this.coefs[r]*e.coefs[a];return n}},{key:"divideEqualsScalar",value:function(t){for(var e=0;e<this.coefs.length;e++)this.coefs[e]/=t}},{key:"simplifyEquals",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e-12,e=this.getDegree();e>=0&&Math.abs(this.coefs[e])<=t;e--)this.coefs.pop()}},{key:"removeZerosEquals",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e-15,e=this.coefs,n=10*t*Math.abs(e.reduce(function(t,e){return Math.abs(e)>Math.abs(t)?e:t})),i=0;i<e.length-1;i++)Math.abs(e[i])<n&&(e[i]=0);return this}},{key:"monicEquals",value:function(){var t=this.coefs;return 1!==t[t.length-1]&&this.divideEqualsScalar(t[t.length-1]),this}},{key:"toString",value:function(){for(var t=[],e=[],n=this.coefs.length-1;n>=0;n--){var i=Math.round(1e3*this.coefs[n])/1e3;if(0!==i){var r=i<0?" - ":" + ";i=Math.abs(i),n>0&&(1===i?i=this._variable:i+=this._variable),n>1&&(i+="^"+n),e.push(r),t.push(i)}}e[0]=" + "===e[0]?"":"-";for(var a="",s=0;s<t.length;s++)a+=e[s]+t[s];return a}},{key:"bisection",value:function(t,e){var n,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e-6,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:15,a=this.eval(t),s=this.eval(e);if(Math.abs(a)<=i)n=t;else if(Math.abs(s)<=i)n=e;else if(a*s<=0)for(var o=Math.log(e-t),l=Math.LN10*r,u=Math.ceil((o+l)/Math.LN2),h=0;h<u;h++){n=.5*(t+e);var y=this.eval(n);if(Math.abs(y)<=i)break;y*a<0?(e=n,s=y):(t=n,a=y)}return n}},{key:"trapezoid",value:function(t,e,n){if(isNaN(t)||isNaN(e)||isNaN(n))throw new TypeError("Parameters must be numbers");var i=e-t;if(1===n){var r=this.eval(t),a=this.eval(e);this._s=.5*i*(r+a)}else{for(var s=1<<n-2,o=i/s,l=t+.5*o,u=0,h=0;h<s;h++)u+=this.eval(l),l+=o;this._s=.5*(this._s+i*u/s)}if(isNaN(this._s))throw new TypeError("this._s is NaN");return this._s}},{key:"simpson",value:function(t,e){if(isNaN(t)||isNaN(e))throw new TypeError("Parameters must be numbers");for(var n=e-t,i=.5*n*(this.eval(t)+this.eval(e)),r=i,a=4*i/3,s=a,o=i,l=1,u=2;u<=20;u++){for(var h=n/l,y=t+.5*h,c=0,f=1;f<=l;f++)c+=this.eval(y),y+=h;if(a=(4*(i=r=.5*(r+n*c/l))-o)/3,Math.abs(a-s)<1e-7*Math.abs(s))break;s=a,o=i,l<<=1}return a}},{key:"romberg",value:function(e,n){if(isNaN(e)||isNaN(n))throw new TypeError("Parameters must be numbers");var i=new Array(21),r=new Array(21),a={y:0,dy:0};r[0]=1;for(var s=1;s<=20&&(i[s-1]=this.trapezoid(e,n,s),!(s>=3&&(a=t.interpolate(r,i,3,s-3,0),Math.abs(a.dy)<=1e-6*a.y)));s++)i[s]=i[s-1],r[s]=.25*r[s-1];return a.y}},{key:"zeroErrorEstimate",value:function(t){if(void 0===t){var e=this.bounds();t=Math.max(Math.abs(e.minX),Math.abs(e.maxX))}if(t<.001)return 2*Math.abs(this.eval(1e-15));var n=this.coefs.length-1,i=this.coefs[n];return 10*1e-15*this.coefs.reduce(function(e,n,r){var a=n/i*Math.pow(t,r);return a>e?a:e},0)}},{key:"boundsUpperRealFujiwara",value:function(){var t=this.coefs,e=t.length-1,n=t[e];1!==n&&(t=this.coefs.map(function(t){return t/n}));var i,r=t.map(function(t,n){return n<e?Math.pow(Math.abs(0===n?t/2:t),1/(e-n)):t}),a=function(t,e,n){return i(n)&&(t.max<e?(t.nearmax=t.max,t.max=e):t.nearmax<e&&(t.nearmax=e)),t};i=function(n){return n<e&&t[n]<0};var s=r.reduce(a,{max:0,nearmax:0});return i=function(n){return n<e&&(e%2==n%2?t[n]<0:t[n]>0)},{negX:-2*r.reduce(a,{max:0,nearmax:0}).max,posX:2*s.max}}},{key:"boundsLowerRealFujiwara",value:function(){var e=new t;e.coefs=this.coefs.slice().reverse();var n=e.boundsUpperRealFujiwara();return n.negX=1/n.negX,n.posX=1/n.posX,n}},{key:"bounds",value:function(){var t=this.boundsUpperRealFujiwara(),e={minX:t.negX,maxX:t.posX};return 0===t.negX&&0===t.posX?e:(0===t.negX?e.minX=this.boundsLowerRealFujiwara().posX:0===t.posX&&(e.maxX=this.boundsLowerRealFujiwara().negX),e.minX>e.maxX&&(e.minX=e.maxX=0),e)}},{key:"boundUpperAbsRouche",value:function(){var t=this.coefs,e=t.length-1;return 1+t.reduce(function(t,n,i){return i!==e&&t<(n=Math.abs(n))?n:t},0)/Math.abs(t[e])}},{key:"boundLowerAbsRouche",value:function(){var t=this.coefs,e=t.reduce(function(t,e,n){return 0!==n&&t<(e=Math.abs(e))?e:t},0);return Math.abs(t[0])/(Math.abs(t[0])+e)}},{key:"boundsRealLaguerre",value:function(){var t=this.coefs,e=t.length-1,n=-t[e-1]/(e*t[e]),i=t[e-1]*t[e-1]-2*e/(e-1)*t[e]*t[e-2],r=(e-1)/(e*t[e])*Math.sqrt(i);return r<0&&(r=-r),{minX:n-r,maxX:n+r}}},{key:"countRootsDescartes",value:function(){var t=this.coefs,e=t.length-1,n=t.reduce(function(t,e,n){return 0!==t.prev_a&&0!==e&&(t.prev_a<0==e>0&&t.pos++,n%2==0!=t.prev_a<0==(n%2==1!=e>0)&&t.neg++),t.prev_a=e,t},{pos:0,neg:0,prev_a:0});return{maxRealPos:n.pos,maxRealNeg:n.neg,minComplex:e-(n.pos+n.neg)}}},{key:"getDegree",value:function(){return this.coefs.length-1}},{key:"getDerivative",value:function(){for(var e=new t,n=1;n<this.coefs.length;n++)e.coefs.push(n*this.coefs[n]);return e}},{key:"getRoots",value:function(){var t;switch(this.simplifyEquals(),this.getDegree()){case 0:t=[];break;case 1:t=this.getLinearRoot();break;case 2:t=this.getQuadraticRoots();break;case 3:t=this.getCubicRoots();break;case 4:t=this.getQuarticRoots();break;default:t=[]}return t}},{key:"getRootsInInterval",value:function(t,e){var n=[];function i(t){"number"==typeof t&&n.push(t)}if(0===this.getDegree())throw new RangeError("Unexpected empty polynomial");if(1===this.getDegree())i(this.bisection(t,e));else{var r=this.getDerivative().getRootsInInterval(t,e);if(r.length>0){i(this.bisection(t,r[0]));for(var a=0;a<=r.length-2;a++)i(this.bisection(r[a],r[a+1]));i(this.bisection(r[r.length-1],e))}else i(this.bisection(t,e))}return n}},{key:"getLinearRoot",value:function(){var t=[],e=this.coefs[1];return 0!==e&&t.push(-this.coefs[0]/e),t}},{key:"getQuadraticRoots",value:function(){var t=[];if(2===this.getDegree()){var e=this.coefs[2],n=this.coefs[1]/e,i=n*n-4*(this.coefs[0]/e);if(i>0){var r=Math.sqrt(i);t.push(.5*(-n+r)),t.push(.5*(-n-r))}else 0===i&&t.push(.5*-n)}return t}},{key:"getCubicRoots",value:function(){var t=[];if(3===this.getDegree()){var e=this.coefs[3],n=this.coefs[2]/e,i=this.coefs[1]/e,r=(3*i-n*n)/3,a=(2*n*n*n-9*i*n+27*(this.coefs[0]/e))/27,s=n/3,o=a*a/4+r*r*r/27,l=a/2,u=this.zeroErrorEstimate();if(Math.abs(o)<=u&&(o=0),o>0){var h,y=Math.sqrt(o),c=-l+y;h=c>=0?Math.pow(c,1/3):-Math.pow(-c,1/3),(c=-l-y)>=0?h+=Math.pow(c,1/3):h-=Math.pow(-c,1/3),t.push(h-s)}else if(o<0){var f=Math.sqrt(-r/3),p=Math.atan2(Math.sqrt(-o),-l)/3,v=Math.cos(p),x=Math.sin(p),d=Math.sqrt(3);t.push(2*f*v-s),t.push(-f*(v+d*x)-s),t.push(-f*(v-d*x)-s)}else{var m;m=l>=0?-Math.pow(l,1/3):Math.pow(-l,1/3),t.push(2*m-s),t.push(-m-s)}}return t}},{key:"getQuarticRoots",value:function(){var e=[],n=this.getDegree();if(4===n){var i=new t;i.coefs=this.coefs.slice(),i.divideEqualsScalar(i.coefs[n]);Math.abs(i.coefs[0])<10*1e-15*Math.abs(i.coefs[3])&&(i.coefs[0]=0);for(var r=i.getDerivative(),a=r.getRoots().sort(function(t,e){return t-e}),s=[],o=a.length-1,l=this.bounds(),h=Math.max(Math.abs(l.minX),Math.abs(l.maxX)),y=this.zeroErrorEstimate(h),c=0;c<=o;c++)s.push(i.eval(a[c]));for(var f=0;f<=o;f++)Math.abs(s[f])<y&&(s[f]=0);var p=0,v=Math.max(.1*(l.maxX-l.minX)/n,1e-15),x=[],d=[];if(o>-1){for(0!==s[0]?u(s[0])!==u(i.eval(a[0]-v)-s[0])&&(x.push(a[0]-v),d.push([l.minX,a[0]])):(e.push(a[0],a[0]),p++);p<o;p++)0===s[p+1]?(e.push(a[p+1],a[p+1]),p++):u(s[p])!==u(s[p+1])&&(x.push((a[p]+a[p+1])/2),d.push([a[p],a[p+1]]));0!==s[o]&&u(s[o])!==u(i.eval(a[o]+v)-s[o])&&(x.push(a[o]+v),d.push([a[o],l.maxX]))}var m=function(t){return i.eval(t)},w=function(t){return r.eval(t)};if(x.length>0)for(p=0;p<x.length;p++)x[p]=t.newtonSecantBisection(x[p],m,w,32,d[p][0],d[p][1]);e=e.concat(x)}return e}}],[{key:"interpolate",value:function(t,e,n,i,r){if(t.constructor!==Array||e.constructor!==Array)throw new TypeError("xs and ys must be arrays");if(isNaN(n)||isNaN(i)||isNaN(r))throw new TypeError("n, offset, and x must be numbers");var a,s,o=0,l=new Array(n),u=new Array(n),h=0,y=Math.abs(r-t[i]);for(a=0;a<n;a++){var c=Math.abs(r-t[i+a]);c<y&&(h=a,y=c),l[a]=u[a]=e[i+a]}s=e[i+h],h--;for(var f=1;f<n;f++){for(a=0;a<n-f;a++){var p=t[i+a]-r,v=t[i+a+f]-r,x=l[a+1]-u[a],d=p-v;if(0===d)throw new RangeError("Unable to interpolate polynomial. Two numbers in n were identical (to within roundoff)");d=x/d,u[a]=v*d,l[a]=p*d}s+=o=2*(h+1)<n-f?l[h+1]:u[h--]}return{y:s,dy:o}}},{key:"newtonSecantBisection",value:function(t,e,n,i,r,a){var s,o,l,h,y,c,f,p=0,v=0;s=t;var x=Math.pow(10,-14),d="number"==typeof r&&"number"==typeof a;if(d){if(r>a)throw new RangeError("Min must be greater than max");if(c=e(r),f=e(a),u(c)===u(f))throw new RangeError("Y values of bounds must be of opposite sign")}for(var m=function(){return Math.abs(l)<=x*Math.abs(s)||v===s-l-s},w=0;w<i;w++){if(0===(o=n(s))){if(0===p)throw new RangeError("df(x) is zero");o=p}if(p=o,y=e(s),h=s-(l=y/o),m())break;if(d){if(u(y)===u(f))a=s,f=y;else{if(u(y)!==u(c)){s=h;break}r=s,c=y}if(h<r||h>a){if(u(c)===u(f))break;var g=f-c,b=a-r;if(l=0===g?s-(r+.5*b):Math.abs(g/Math.min(c,f))>50?s-(r+b*(.5+(Math.abs(c)<Math.abs(f)?-.25:.25))):s-(r-c/g*b),h=s-l,m())break}}v=s-h,s=h}return s}}]),t}(),y=function(){function t(n,i){e(this,t),this.type=n,this.text=i}return i(t,[{key:"typeis",value:function(t){return this.type===t}}]),t}();y.UNDEFINED=0,y.COMMAND=1,y.NUMBER=2,y.EOD=3;var c=function(){function t(n){e(this,t),null==n&&(n=""),this.setPathData(n)}return i(t,[{key:"setPathData",value:function(t){if("string"!=typeof t)throw new TypeError("The first parameter must be a string");this._pathData=t}},{key:"getNextToken",value:function(){for(var t=null,e=this._pathData;null===t;)if(null===e||""===e)t=new y(y.EOD,"");else if(e.match(/^([ \t\r\n,]+)/))e=e.substr(RegExp.$1.length);else if(e.match(/^([AaCcHhLlMmQqSsTtVvZz])/))t=new y(y.COMMAND,RegExp.$1),e=e.substr(RegExp.$1.length);else{if(!e.match(/^(([-+]?\d+(\.\d*)?|[-+]?\.\d+)([eE][-+]?\d+)?)/))throw new SyntaxError("Unrecognized path data: ".concat(e));t=new y(y.NUMBER,RegExp.$1),e=e.substr(RegExp.$1.length)}return this._pathData=e,t}}]),t}(),f=function(){function t(){e(this,t),this._lexer=new c,this._handler=null}return i(t,[{key:"parseData",value:function(e){if("string"!=typeof e)throw new TypeError("The first parameter must be a string: ".concat(e));null!==this._handler&&"function"==typeof this._handler.beginParse&&this._handler.beginParse();var n=this._lexer;n.setPathData(e);for(var i="BOP",r=null,a=n.getNextToken();!1===a.typeis(y.EOD);){var s=void 0,o=[];switch(a.type){case y.COMMAND:if("BOP"===i&&"M"!==a.text&&"m"!==a.text)throw new SyntaxError("New paths must begin with a moveto command. Found '".concat(a.text,"'"));i=a.text,s=t.PARAMCOUNT[a.text.toUpperCase()],a=n.getNextToken();break;case y.NUMBER:if("BOP"===i)throw new SyntaxError("New paths must begin with a moveto command. Found '".concat(a.text,"'"));s=t.PARAMCOUNT[i.toUpperCase()];break;default:throw new SyntaxError("Unrecognized command type: ".concat(a.type))}for(var l=0;l<s;l++){switch(a.type){case y.COMMAND:throw new SyntaxError("Parameter must be a number. Found '".concat(a.text,"'"));case y.NUMBER:o[l]=parseFloat(a.text);break;case y.EOD:throw new SyntaxError("Unexpected end of string");default:throw new SyntaxError("Unrecognized parameter type. Found type '".concat(a.type,"'"))}a=n.getNextToken()}if(null!==this._handler){var u=this._handler,h=t.METHODNAME[i];"a"!==i&&"A"!==i||(o[3]=0!==o[3],o[4]=0!==o[4]),null!==u&&"function"==typeof u[h]&&u[h].apply(u,o)}switch(i){case"M":i="L";break;case"m":i="l";break;case"Z":case"z":i="BOP"}if(a===r)throw new SyntaxError("Parser stalled on '".concat(a.text,"'"));r=a}null!==this._handler&&"function"==typeof this._handler.endParse&&this._handler.endParse()}},{key:"setHandler",value:function(t){this._handler=t}}]),t}();f.PARAMCOUNT={A:7,C:6,H:1,L:2,M:2,Q:4,S:4,T:2,V:1,Z:0},f.METHODNAME={A:"arcAbs",a:"arcRel",C:"curvetoCubicAbs",c:"curvetoCubicRel",H:"linetoHorizontalAbs",h:"linetoHorizontalRel",L:"linetoAbs",l:"linetoRel",M:"movetoAbs",m:"movetoRel",Q:"curvetoQuadraticAbs",q:"curvetoQuadraticRel",S:"curvetoCubicSmoothAbs",s:"curvetoCubicSmoothRel",T:"curvetoQuadraticSmoothAbs",t:"curvetoQuadraticSmoothRel",V:"linetoVerticalAbs",v:"linetoVerticalRel",Z:"closePath",z:"closePath"};var p=2*Math.PI;function v(t,e,n,i,r,a,s){r=r*Math.PI/180;var l=Math.cos(r),u=Math.sin(r),h=t.subtract(e).multiply(.5),y=h.x*l+h.y*u,c=h.x*-u+h.y*l,f=y*y,v=c*c,x=f/((n=Math.abs(n))*n)+v/((i=Math.abs(i))*i);if(x>1){var d=Math.sqrt(x);n*=d,i*=d}var m=n*n,w=i*i,g=m*v,b=w*f,k=(m*w-g-b)/(g+b);Math.abs(k)<1e-6&&(k=0);var P=Math.sqrt(k);a===s&&(P=-P);var E=t.add(e).multiply(.5),M=P*n*c/i,I=P*-i*y/n,R=(y-M)/n,S=(y+M)/n,C=(c-I)/i,X=(c+I)/i,N=new o(1,0).angleBetween(new o(R,C)),A=new o(R,C).angleBetween(new o(-S,-X));return!1===s&&(A-=p),[M*l-I*u+E.x,M*u+I*l+E.y,n,i,N,N+A]}var x=function(){function t(n){e(this,t),this.shapeCreator=n,this.shapes=[],this.firstX=null,this.firstY=null,this.lastX=null,this.lastY=null,this.lastCommand=null}return i(t,[{key:"beginParse",value:function(){this.shapes=[],this.firstX=null,this.firstY=null,this.lastX=null,this.lastY=null,this.lastCommand=null}},{key:"addShape",value:function(t){this.shapes.push(t)}},{key:"arcAbs",value:function(t,e,n,i,r,o,l){if(0===t||0===e)this.addShape(this.shapeCreator.line(this.lastX,this.lastY,o,l));else{var u,h=v(new s(this.lastX,this.lastY),new s(o,l),t,e,n,i,r);this.addShape((u=this.shapeCreator).arc.apply(u,a(h)))}this.lastCommand="A",this.lastX=o,this.lastY=l}},{key:"arcRel",value:function(t,e,n,i,r,o,l){if(0===t||0===e)this.addShape(this.shapeCreator.line(this.lastX,this.lastY,this.lastX+o,this.lastY+l));else{var u,h=v(new s(this.lastX,this.lastY),new s(this.lastX+o,this.lastY+l),t,e,n,i,r);this.addShape((u=this.shapeCreator).arc.apply(u,a(h)))}this.lastCommand="a",this.lastX+=o,this.lastY+=l}},{key:"curvetoCubicAbs",value:function(t,e,n,i,r,a){this.addShape(this.shapeCreator.cubicBezier(this.lastX,this.lastY,t,e,n,i,r,a)),this.lastX=r,this.lastY=a,this.lastCommand="C"}},{key:"curvetoCubicRel",value:function(t,e,n,i,r,a){this.addShape(this.shapeCreator.cubicBezier(this.lastX,this.lastY,this.lastX+t,this.lastY+e,this.lastX+n,this.lastY+i,this.lastX+r,this.lastY+a)),this.lastX+=r,this.lastY+=a,this.lastCommand="c"}},{key:"linetoHorizontalAbs",value:function(t){this.addShape(this.shapeCreator.line(this.lastX,this.lastY,t,this.lastY)),this.lastX=t,this.lastCommand="H"}},{key:"linetoHorizontalRel",value:function(t){this.addShape(this.shapeCreator.line(this.lastX,this.lastY,this.lastX+t,this.lastY)),this.lastX+=t,this.lastCommand="h"}},{key:"linetoAbs",value:function(t,e){this.addShape(this.shapeCreator.line(this.lastX,this.lastY,t,e)),this.lastX=t,this.lastY=e,this.lastCommand="L"}},{key:"linetoRel",value:function(t,e){this.addShape(this.shapeCreator.line(this.lastX,this.lastY,this.lastX+t,this.lastY+e)),this.lastX+=t,this.lastY+=e,this.lastCommand="l"}},{key:"movetoAbs",value:function(t,e){this.firstX=t,this.firstY=e,this.lastX=t,this.lastY=e,this.lastCommand="M"}},{key:"movetoRel",value:function(t,e){this.firstX+=t,this.firstY+=e,this.lastX+=t,this.lastY+=e,this.lastCommand="m"}},{key:"curvetoQuadraticAbs",value:function(t,e,n,i){this.addShape(this.shapeCreator.quadraticBezier(this.lastX,this.lastY,t,e,n,i)),this.lastX=n,this.lastY=i,this.lastCommand="Q"}},{key:"curvetoQuadraticRel",value:function(t,e,n,i){this.addShape(this.shapeCreator.quadraticBezier(this.lastX,this.lastY,this.lastX+t,this.lastY+e,this.lastX+n,this.lastY+i)),this.lastX+=n,this.lastY+=i,this.lastCommand="q"}},{key:"curvetoCubicSmoothAbs",value:function(t,e,n,i){var r,a;if(this.lastCommand.match(/^[SsCc]$/)){var s=this.shapes[this.shapes.length-1].args[2];r=2*this.lastX-s.x,a=2*this.lastY-s.y}else r=this.lastX,a=this.lastY;this.addShape(this.shapeCreator.cubicBezier(this.lastX,this.lastY,r,a,t,e,n,i)),this.lastX=n,this.lastY=i,this.lastCommand="S"}},{key:"curvetoCubicSmoothRel",value:function(t,e,n,i){var r,a;if(this.lastCommand.match(/^[SsCc]$/)){var s=this.shapes[this.shapes.length-1].args[2];r=2*this.lastX-s.x,a=2*this.lastY-s.y}else r=this.lastX,a=this.lastY;this.addShape(this.shapeCreator.cubicBezier(this.lastX,this.lastY,r,a,this.lastX+t,this.lastY+e,this.lastX+n,this.lastY+i)),this.lastX+=n,this.lastY+=i,this.lastCommand="s"}},{key:"curvetoQuadraticSmoothAbs",value:function(t,e){var n,i;if(this.lastCommand.match(/^[QqTt]$/)){var r=this.shapes[this.shapes.length-1].args[1];n=2*this.lastX-r.x,i=2*this.lastY-r.y}else n=this.lastX,i=this.lastY;this.addShape(this.shapeCreator.quadraticBezier(this.lastX,this.lastY,n,i,t,e)),this.lastX=t,this.lastY=e,this.lastCommand="T"}},{key:"curvetoQuadraticSmoothRel",value:function(t,e){var n,i;if(this.lastCommand.match(/^[QqTt]$/)){var r=this.shapes[this.shapes.length-1].args[1];n=2*this.lastX-r.x,i=2*this.lastY-r.y}else n=this.lastX,i=this.lastY;this.addShape(this.shapeCreator.quadraticBezier(this.lastX,this.lastY,n,i,this.lastX+t,this.lastY+e)),this.lastX+=t,this.lastY+=e,this.lastCommand="t"}},{key:"linetoVerticalAbs",value:function(t){this.addShape(this.shapeCreator.line(this.lastX,this.lastY,this.lastX,t)),this.lastY=t,this.lastCommand="V"}},{key:"linetoVerticalRel",value:function(t){this.addShape(this.shapeCreator.line(this.lastX,this.lastY,this.lastX,this.lastY+t)),this.lastY+=t,this.lastCommand="v"}},{key:"closePath",value:function(){this.addShape(this.shapeCreator.line(this.lastX,this.lastY,this.firstX,this.firstY)),this.lastX=this.firstX,this.lastY=this.firstY,this.lastCommand="z"}}]),t}(),d=.5*Math.PI,m=new f;function w(t,e){var n=[],i=!0,a=!1,s=void 0;try{for(var o,l=t[Symbol.iterator]();!(i=(o=l.next()).done);i=!0){var u=r(o.value,2),h=u[0],y=u[1],c=null;if("Point2D"===y)c=b(h,e);else if("Number"===y)c=g(h,e);else if("Array<Point2D>"===y||"Point2D[]"===y){for(var f=[];e.length>0;)f.push(b(h,e));f.length>0&&(c=f)}else{if("Optional<Number>"!==y&&"Number?"!==y)throw new TypeError("Unrecognized value type: ".concat(y));null===(c=g(h,e))&&(c=void 0)}if(null===c)throw new TypeError("Unable to extract value for ".concat(h));n.push(c)}}catch(t){a=!0,s=t}finally{try{i||null==l.return||l.return()}finally{if(a)throw s}}return n}function g(e,n){var i=null;if(n.length>0){var r=n[0],a=t(r);if("number"===a)return n.shift();if("object"===a){var s=!0,o=!1,l=void 0;try{for(var u,h=e[Symbol.iterator]();!(s=(u=h.next()).done);s=!0){var y=u.value;if(y in r&&"number"==typeof r[y]){i=r[y];break}}}catch(t){o=!0,l=t}finally{try{s||null==h.return||h.return()}finally{if(o)throw l}}}}return i}function b(e,n){var i=null;return n.length>0&&function(){var a=n[0],o=t(a);if("number"===o){if(n.length>1){var l=n.shift(),u=n.shift();i=new s(l,u)}}else if(Array.isArray(a)&&a.length>1){if(2!==a.length)throw new TypeError("Unhandled array of length ".concat(a.length));var h=r(n.shift(),2),y=h[0],c=h[1];i=new s(y,c)}else if("object"===o)if("x"in a&&"y"in a)i=new s(a.x,a.y),n.shift();else{var f=!0,p=!1,v=void 0;try{for(var x,d=e[Symbol.iterator]();!(f=(x=d.next()).done);f=!0){var m=x.value;if(Array.isArray(m)){if(m.every(function(t){return t in a})){i=new s(a[m[0]],a[m[1]]);break}}else if(m in a){i=b([],[a[m]]);break}}}catch(t){p=!0,v=t}finally{try{f||null==d.return||d.return()}finally{if(p)throw v}}}}(),i}var k=function(){function t(n,i){e(this,t),this.name=n,this.args=i}return i(t,null,[{key:"arc",value:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=w([[["center",["centerX","centerY"],["cx","cy"]],"Point2D"],[["radiusX","rx"],"Number"],[["radiusY","ry"],"Number"],[["startRadians"],"Number"],[["endRadians"],"Number"]],n);return new t(t.ARC,r)}},{key:"quadraticBezier",value:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=w([[["p1",["p1x","p1y"]],"Point2D"],[["p2",["p2x","p2y"]],"Point2D"],[["p3",["p3x","p3y"]],"Point2D"]],n);return new t(t.QUADRATIC_BEZIER,r)}},{key:"cubicBezier",value:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=w([[["p1",["p1x","p1y"]],"Point2D"],[["p2",["p2x","p2y"]],"Point2D"],[["p3",["p3x","p3y"]],"Point2D"],[["p4",["p4x","p4y"]],"Point2D"]],n);return new t(t.CUBIC_BEZIER,r)}},{key:"circle",value:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=w([[["center",["centerX","centerY"],["cx","cy"]],"Point2D"],[["radius","r"],"Number"]],n);return new t(t.CIRCLE,r)}},{key:"ellipse",value:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=w([[["center",["centerX","centerY"],["cx","cy"]],"Point2D"],[["radiusX","rx"],"Number"],[["radiusY","ry"],"Number"]],n);return new t(t.ELLIPSE,r)}},{key:"line",value:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=w([[["p1",["p1x","p1y"],["x1","y1"]],"Point2D"],[["p2",["p2x","p2y"],["x2","y2"]],"Point2D"]],n);return new t(t.LINE,r)}},{key:"path",value:function(){return m.parseData(arguments.length<=0?void 0:arguments[0]),new t(t.PATH,P.shapes)}},{key:"polygon",value:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=w([[[],"Array<Point2D>"]],1===n.length&&Array.isArray(n[0])?n[0]:n);return new t(t.POLYGON,r)}},{key:"polyline",value:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=w([[[],"Array<Point2D>"]],1===n.length&&Array.isArray(n[0])?n[0]:n);return new t(t.POLYLINE,r)}},{key:"rectangle",value:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=w([[["topLeft",["x","y"],["left","top"]],"Point2D"],[["size",["width","height"],["w","h"]],"Point2D"],[["radiusX","rx"],"Optional<Number>"],[["radiusY","ry"],"Optional<Number>"]],n),a=r[0],o=r[1];r[1]=new s(a.x+o.x,a.y+o.y);var l=new t(t.RECTANGLE,r),u=l.args.pop(),h=l.args.pop();if(u=void 0===u?0:u,0===(h=void 0===h?0:h)&&0===u)return l;var y=l.args[0],c=y.x,f=y.y,p=l.args[1],v=p.x,x=p.y,m=v-c,g=x-f;0===h&&(h=u),0===u&&(u=h),h>.5*m&&(h=.5*m),u>.5*g&&(u=.5*g);var b=c,k=f,P=c+h,E=f+u,M=v-h,I=x-u,R=v,S=x,C=[t.arc(P,E,h,u,2*d,3*d),t.line(P,k,M,k),t.arc(M,E,h,u,3*d,4*d),t.line(R,E,R,I),t.arc(M,I,h,u,0,d),t.line(M,S,P,S),t.arc(P,I,h,u,d,2*d),t.line(b,I,b,E)];return new t(t.PATH,C)}}]),t}();k.ARC="Arc",k.QUADRATIC_BEZIER="Bezier2",k.CUBIC_BEZIER="Bezier3",k.CIRCLE="Circle",k.ELLIPSE="Ellipse",k.LINE="Line",k.PATH="Path",k.POLYGON="Polygon",k.POLYLINE="Polyline",k.RECTANGLE="Rectangle";var P=new x(k);m.setHandler(P);var E=2*Math.PI,M=new o(1,0);function I(t){return null==t}function R(t){var e=t%E;return e<0?e+E:e}function S(t,e,n,i,r,a){if(0===t.points.length)return t;var s=new X("No Intersection"),l=R(r),u=R(a);u<l&&(u+=E);var h=!0,y=!1,c=void 0;try{for(var f,p=t.points[Symbol.iterator]();!(h=(f=p.next()).done);h=!0){var v=f.value,x=R(M.angleBetween(o.fromPoints(e,v)));l<=x&&x<=u&&s.appendPoint(v)}}catch(t){y=!0,c=t}finally{try{h||null==p.return||p.return()}finally{if(y)throw c}}return s.points.length>0&&(s.status="Intersection"),s}function C(t){var e=t.slice();return e.push(t[0]),e}var X=function(){function t(n){e(this,t),this.init(n)}return i(t,[{key:"init",value:function(t){this.status=t,this.points=[]}},{key:"appendPoint",value:function(t){this.points.push(t)}},{key:"appendPoints",value:function(t){this.points=this.points.concat(t)}}],[{key:"intersect",value:function(e,n){var i;if(I(e)||I(n))i=new t("No Intersection");else if("Path"===e.name)i=t.intersectPathShape(e,n);else if("Path"===n.name)i=t.intersectPathShape(n,e);else if("Arc"===e.name)i=t.intersectArcShape(e,n);else if("Arc"===n.name)i=t.intersectArcShape(n,e);else{var r,a;if(e.name<n.name?(r="intersect"+e.name+n.name,a=e.args.concat(n.args)):(r="intersect"+n.name+e.name,a=n.args.concat(e.args)),!(r in t))throw new TypeError("Intersection not available: "+r);i=t[r].apply(null,a)}return i}},{key:"intersectPathShape",value:function(e,n){var i=new t("No Intersection"),r=!0,a=!1,s=void 0;try{for(var o,l=e.args[Symbol.iterator]();!(r=(o=l.next()).done);r=!0){var u=o.value,h=t.intersect(u,n);i.appendPoints(h.points)}}catch(t){a=!0,s=t}finally{try{r||null==l.return||l.return()}finally{if(a)throw s}}return i.points.length>0&&(i.status="Intersection"),i}},{key:"intersectArcShape",value:function(e,n){var i=r(e.args,5),a=i[0],s=i[1],o=i[2],l=i[3],u=i[4],h=new k(k.ELLIPSE,[a,s,o]);return S(t.intersect(h,n),a,0,0,l,u)}},{key:"intersectBezier2Bezier2",value:function(e,n,i,r,a,o){var l,u,y=new t("No Intersection");l=n.multiply(-2);var c=e.add(l.add(i));l=e.multiply(-2),u=n.multiply(2);var f=l.add(u),p=new s(e.x,e.y);l=a.multiply(-2);var v=r.add(l.add(o));l=r.multiply(-2),u=a.multiply(2);var x=l.add(u),d=new s(r.x,r.y);l=c.x*f.y-f.x*c.y,u=v.x*f.y-f.x*v.y;var m=x.x*f.y-f.x*x.y,w=f.x*(p.y-d.y)+f.y*(-p.x+d.x),g=v.x*c.y-c.x*v.y,b=x.x*c.y-c.x*x.y,k=c.x*(p.y-d.y)+c.y*(-p.x+d.x),P=new h(-g*g,-2*g*b,l*u-b*b-2*g*k,l*m-2*b*k,l*w-k*k).getRoots(),E=!0,M=!1,I=void 0;try{for(var R,S=P[Symbol.iterator]();!(E=(R=S.next()).done);E=!0){var C=R.value;if(0<=C&&C<=1){var X=new h(c.x,f.x,p.x-d.x-C*x.x-C*C*v.x);X.simplifyEquals();var N=X.getRoots(),A=new h(c.y,f.y,p.y-d.y-C*x.y-C*C*v.y);A.simplifyEquals();var L=A.getRoots();if(N.length>0&&L.length>0){var Y=!0,z=!1,B=void 0;try{t:for(var D,T=N[Symbol.iterator]();!(Y=(D=T.next()).done);Y=!0){var q=D.value;if(0<=q&&q<=1)for(var V=0;V<L.length;V++)if(Math.abs(q-L[V])<1e-4){y.points.push(v.multiply(C*C).add(x.multiply(C).add(d)));break t}}}catch(t){z=!0,B=t}finally{try{Y||null==T.return||T.return()}finally{if(z)throw B}}}}}}catch(t){M=!0,I=t}finally{try{E||null==S.return||S.return()}finally{if(M)throw I}}return y.points.length>0&&(y.status="Intersection"),y}},{key:"intersectBezier2Bezier3",value:function(e,n,i,r,a,o,l){var u,y,c,f,p=new t("No Intersection");u=n.multiply(-2);var v=e.add(u.add(i));u=e.multiply(-2),y=n.multiply(2);var x=u.add(y),d=new s(e.x,e.y);u=r.multiply(-1),y=a.multiply(3),c=o.multiply(-3),f=u.add(y.add(c.add(l)));var m=new s(f.x,f.y);u=r.multiply(3),y=a.multiply(-6),c=o.multiply(3),f=u.add(y.add(c));var w=new s(f.x,f.y);u=r.multiply(-3),y=a.multiply(3),c=u.add(y);var g=new s(c.x,c.y),b=new s(r.x,r.y),k=d.x*d.x,P=d.y*d.y,E=x.x*x.x,M=x.y*x.y,I=v.x*v.x,R=v.y*v.y,S=b.x*b.x,C=b.y*b.y,X=g.x*g.x,N=g.y*g.y,A=w.x*w.x,L=w.y*w.y,Y=m.x*m.x,z=m.y*m.y,B=new h(-2*v.x*v.y*m.x*m.y+I*z+R*Y,-2*v.x*v.y*w.x*m.y-2*v.x*v.y*w.y*m.x+2*R*w.x*m.x+2*I*w.y*m.y,-2*v.x*g.x*v.y*m.y-2*v.x*v.y*g.y*m.x-2*v.x*v.y*w.x*w.y+2*g.x*R*m.x+R*A+I*(2*g.y*m.y+L),2*d.x*v.x*v.y*m.y+2*d.y*v.x*v.y*m.x+x.x*x.y*v.x*m.y+x.x*x.y*v.y*m.x-2*b.x*v.x*v.y*m.y-2*v.x*b.y*v.y*m.x-2*v.x*g.x*v.y*w.y-2*v.x*v.y*g.y*w.x-2*d.x*R*m.x-2*d.y*I*m.y+2*b.x*R*m.x+2*g.x*R*w.x-M*v.x*m.x-E*v.y*m.y+I*(2*b.y*m.y+2*g.y*w.y),2*d.x*v.x*v.y*w.y+2*d.y*v.x*v.y*w.x+x.x*x.y*v.x*w.y+x.x*x.y*v.y*w.x-2*b.x*v.x*v.y*w.y-2*v.x*b.y*v.y*w.x-2*v.x*g.x*v.y*g.y-2*d.x*R*w.x-2*d.y*I*w.y+2*b.x*R*w.x-M*v.x*w.x-E*v.y*w.y+X*R+I*(2*b.y*w.y+N),2*d.x*v.x*v.y*g.y+2*d.y*v.x*g.x*v.y+x.x*x.y*v.x*g.y+x.x*x.y*g.x*v.y-2*b.x*v.x*v.y*g.y-2*v.x*b.y*g.x*v.y-2*d.x*g.x*R-2*d.y*I*g.y+2*b.x*g.x*R-M*v.x*g.x-E*v.y*g.y+2*I*b.y*g.y,-2*d.x*d.y*v.x*v.y-d.x*x.x*x.y*v.y-d.y*x.x*x.y*v.x+2*d.x*v.x*b.y*v.y+2*d.y*b.x*v.x*v.y+x.x*b.x*x.y*v.y+x.x*x.y*v.x*b.y-2*b.x*v.x*b.y*v.y-2*d.x*b.x*R+d.x*M*v.x+d.y*E*v.y-2*d.y*I*b.y-b.x*M*v.x-E*b.y*v.y+k*R+P*I+S*R+I*C).getRootsInInterval(0,1),D=!0,T=!1,q=void 0;try{for(var V,O=B[Symbol.iterator]();!(D=(V=O.next()).done);D=!0){var _=V.value,U=new h(v.x,x.x,d.x-b.x-_*g.x-_*_*w.x-_*_*_*m.x).getRoots(),G=new h(v.y,x.y,d.y-b.y-_*g.y-_*_*w.y-_*_*_*m.y).getRoots();if(U.length>0&&G.length>0){var Q=!0,F=!1,j=void 0;try{t:for(var H,Z=U[Symbol.iterator]();!(Q=(H=Z.next()).done);Q=!0){var $=H.value;if(0<=$&&$<=1)for(var J=0;J<G.length;J++)if(Math.abs($-G[J])<1e-4){p.points.push(m.multiply(_*_*_).add(w.multiply(_*_).add(g.multiply(_).add(b))));break t}}}catch(t){F=!0,j=t}finally{try{Q||null==Z.return||Z.return()}finally{if(F)throw j}}}}}catch(t){T=!0,q=t}finally{try{D||null==O.return||O.return()}finally{if(T)throw q}}return p.points.length>0&&(p.status="Intersection"),p}},{key:"intersectBezier2Circle",value:function(e,n,i,r,a){return t.intersectBezier2Ellipse(e,n,i,r,a,a)}},{key:"intersectBezier2Ellipse",value:function(e,n,i,r,a,o){var l,u=new t("No Intersection");l=n.multiply(-2);var y=e.add(l.add(i));l=e.multiply(-2);var c=n.multiply(2),f=l.add(c),p=new s(e.x,e.y),v=a*a,x=o*o,d=new h(x*y.x*y.x+v*y.y*y.y,2*(x*y.x*f.x+v*y.y*f.y),x*(2*y.x*p.x+f.x*f.x)+v*(2*y.y*p.y+f.y*f.y)-2*(x*r.x*y.x+v*r.y*y.y),2*(x*f.x*(p.x-r.x)+v*f.y*(p.y-r.y)),x*(p.x*p.x+r.x*r.x)+v*(p.y*p.y+r.y*r.y)-2*(x*r.x*p.x+v*r.y*p.y)-v*x).getRoots(),m=!0,w=!1,g=void 0;try{for(var b,k=d[Symbol.iterator]();!(m=(b=k.next()).done);m=!0){var P=b.value;0<=P&&P<=1&&u.points.push(y.multiply(P*P).add(f.multiply(P).add(p)))}}catch(t){w=!0,g=t}finally{try{m||null==k.return||k.return()}finally{if(w)throw g}}return u.points.length>0&&(u.status="Intersection"),u}},{key:"intersectBezier2Line",value:function(e,n,i,r,a){var l,u=r.min(a),y=r.max(a),c=new t("No Intersection");l=n.multiply(-2);var f=e.add(l.add(i));l=e.multiply(-2);var p=n.multiply(2),v=l.add(p),x=new s(e.x,e.y),d=new o(r.y-a.y,a.x-r.x),m=r.x*a.y-a.x*r.y,w=new h(d.dot(f),d.dot(v),d.dot(x)+m).getRoots(),g=!0,b=!1,k=void 0;try{for(var P,E=w[Symbol.iterator]();!(g=(P=E.next()).done);g=!0){var M=P.value;if(0<=M&&M<=1){var I=e.lerp(n,M),R=n.lerp(i,M),S=I.lerp(R,M);r.x===a.x?u.y<=S.y&&S.y<=y.y&&(c.status="Intersection",c.appendPoint(S)):r.y===a.y?u.x<=S.x&&S.x<=y.x&&(c.status="Intersection",c.appendPoint(S)):u.x<=S.x&&S.x<=y.x&&u.y<=S.y&&S.y<=y.y&&(c.status="Intersection",c.appendPoint(S))}}}catch(t){b=!0,k=t}finally{try{g||null==E.return||E.return()}finally{if(b)throw k}}return c}},{key:"intersectBezier2Polygon",value:function(e,n,i,r){return t.intersectBezier2Polyline(e,n,i,C(r))}},{key:"intersectBezier2Polyline",value:function(e,n,i,r){for(var a=new t("No Intersection"),s=r.length,o=0;o<s-1;o++){var l=r[o],u=r[o+1],h=t.intersectBezier2Line(e,n,i,l,u);a.appendPoints(h.points)}return a.points.length>0&&(a.status="Intersection"),a}},{key:"intersectBezier2Rectangle",value:function(e,n,i,r,a){var o=r.min(a),l=r.max(a),u=new s(l.x,o.y),h=new s(o.x,l.y),y=t.intersectBezier2Line(e,n,i,o,u),c=t.intersectBezier2Line(e,n,i,u,l),f=t.intersectBezier2Line(e,n,i,l,h),p=t.intersectBezier2Line(e,n,i,h,o),v=new t("No Intersection");return v.appendPoints(y.points),v.appendPoints(c.points),v.appendPoints(f.points),v.appendPoints(p.points),v.points.length>0&&(v.status="Intersection"),v}},{key:"intersectBezier3Bezier3",value:function(e,n,i,r,a,o,l,u){var y,c,f,p,v=new t("No Intersection");y=e.multiply(-1),c=n.multiply(3),f=i.multiply(-3),p=y.add(c.add(f.add(r)));var x=new s(p.x,p.y);y=e.multiply(3),c=n.multiply(-6),f=i.multiply(3),p=y.add(c.add(f));var d=new s(p.x,p.y);y=e.multiply(-3),c=n.multiply(3),f=y.add(c);var m=new s(f.x,f.y),w=new s(e.x,e.y);y=a.multiply(-1),c=o.multiply(3),f=l.multiply(-3),p=y.add(c.add(f.add(u)));var g=new s(p.x,p.y);y=a.multiply(3),c=o.multiply(-6),f=l.multiply(3),p=y.add(c.add(f));var b=new s(p.x,p.y);y=a.multiply(-3),c=o.multiply(3),f=y.add(c);var k=new s(f.x,f.y),P=new s(a.x,a.y);y=x.x*d.y-d.x*x.y,c=x.x*m.y-m.x*x.y;var E=x.x*w.y-w.x*x.y+P.x*x.y-x.x*P.y,M=k.x*x.y-x.x*k.y,I=b.x*x.y-x.x*b.y,R=g.x*x.y-x.x*g.y;p=x.x*m.y-m.x*x.y;var S=x.x*w.y+d.x*m.y-m.x*d.y-w.x*x.y+P.x*x.y-x.x*P.y,C=k.x*x.y-x.x*k.y,X=b.x*x.y-x.x*b.y,N=g.x*x.y-x.x*g.y,A=d.x*w.y-w.x*d.y+P.x*d.y-d.x*P.y,L=k.x*d.y-d.x*k.y,Y=b.x*d.y-d.x*b.y,z=g.x*d.y-d.x*g.y,B=x.x*w.y-w.x*x.y+P.x*x.y-x.x*P.y,D=k.x*x.y-x.x*k.y,T=b.x*x.y-x.x*b.y,q=g.x*x.y-x.x*g.y,V=d.x*w.y-w.x*d.y+P.x*d.y-d.x*P.y,O=k.x*d.y-d.x*k.y,_=b.x*d.y-d.x*b.y,U=g.x*d.y-d.x*g.y,G=m.x*w.y-w.x*m.y+P.x*m.y-m.x*P.y,Q=k.x*m.y-m.x*k.y,F=b.x*m.y-m.x*b.y,j=g.x*m.y-m.x*g.y,H=new h(-R*N*q,-R*N*T-R*X*q-I*N*q,-R*N*D-R*X*T-I*N*T-R*C*q-I*X*q-M*N*q,-R*N*B-R*X*D-I*N*D-R*C*T-I*X*T-M*N*T-R*S*q-I*C*q-M*X*q-E*N*q+c*z*q+R*p*U-y*z*U+y*N*j,-R*X*B-I*N*B-R*C*D-I*X*D-M*N*D-R*S*T-I*C*T-M*X*T-E*N*T+c*z*T-I*S*q-M*C*q-E*X*q+c*Y*q+R*p*_-y*z*_+I*p*U-y*Y*U+y*N*F+y*X*j,-R*C*B-I*X*B-M*N*B-R*S*D-I*C*D-M*X*D-E*N*D+c*z*D-I*S*T-M*C*T-E*X*T+c*Y*T-M*S*q-E*C*q+c*L*q+R*p*O-y*z*O+I*p*_-y*Y*_+M*p*U-y*L*U+y*N*Q+y*X*F+y*C*j,-R*S*B-I*C*B-M*X*B-E*N*B+c*z*B-I*S*D-M*C*D-E*X*D+c*Y*D-M*S*T-E*C*T+c*L*T-E*S*q+c*A*q+R*p*V-y*z*V+I*p*O-y*Y*O+M*p*_-y*L*_+E*p*U-y*A*U+y*N*G+y*X*Q+y*C*F-c*p*j+y*S*j,-I*S*B-M*C*B-E*X*B+c*Y*B-M*S*D-E*C*D+c*L*D-E*S*T+c*A*T+I*p*V-y*Y*V+M*p*O-y*L*O+E*p*_-y*A*_+y*X*G+y*C*Q-c*p*F+y*S*F,-M*S*B-E*C*B+c*L*B-E*S*D+c*A*D+M*p*V-y*L*V+E*p*O-y*A*O+y*C*G-c*p*Q+y*S*Q,-E*S*B+c*A*B+E*p*V-y*A*V-c*p*G+y*S*G);H.simplifyEquals();var Z=H.getRootsInInterval(0,1),$=!0,J=!1,K=void 0;try{for(var W,tt=Z[Symbol.iterator]();!($=(W=tt.next()).done);$=!0){var et=W.value,nt=new h(x.x,d.x,m.x,w.x-P.x-et*k.x-et*et*b.x-et*et*et*g.x);nt.simplifyEquals();var it=nt.getRoots(),rt=new h(x.y,d.y,m.y,w.y-P.y-et*k.y-et*et*b.y-et*et*et*g.y);rt.simplifyEquals();var at=rt.getRoots();if(it.length>0&&at.length>0){var st=!0,ot=!1,lt=void 0;try{t:for(var ut,ht=it[Symbol.iterator]();!(st=(ut=ht.next()).done);st=!0){var yt=ut.value;if(0<=yt&&yt<=1)for(var ct=0;ct<at.length;ct++)if(Math.abs(yt-at[ct])<1e-4){v.points.push(g.multiply(et*et*et).add(b.multiply(et*et).add(k.multiply(et).add(P))));break t}}}catch(t){ot=!0,lt=t}finally{try{st||null==ht.return||ht.return()}finally{if(ot)throw lt}}}}}catch(t){J=!0,K=t}finally{try{$||null==tt.return||tt.return()}finally{if(J)throw K}}return v.points.length>0&&(v.status="Intersection"),v}},{key:"intersectBezier3Circle",value:function(e,n,i,r,a,s){return t.intersectBezier3Ellipse(e,n,i,r,a,s,s)}},{key:"intersectBezier3Ellipse",value:function(e,n,i,r,a,o,l){var u,y,c,f,p=new t("No Intersection");u=e.multiply(-1),y=n.multiply(3),c=i.multiply(-3),f=u.add(y.add(c.add(r)));var v=new s(f.x,f.y);u=e.multiply(3),y=n.multiply(-6),c=i.multiply(3),f=u.add(y.add(c));var x=new s(f.x,f.y);u=e.multiply(-3),y=n.multiply(3),c=u.add(y);var d=new s(c.x,c.y),m=new s(e.x,e.y),w=o*o,g=l*l,b=new h(v.x*v.x*g+v.y*v.y*w,2*(v.x*x.x*g+v.y*x.y*w),2*(v.x*d.x*g+v.y*d.y*w)+x.x*x.x*g+x.y*x.y*w,2*v.x*g*(m.x-a.x)+2*v.y*w*(m.y-a.y)+2*(x.x*d.x*g+x.y*d.y*w),2*x.x*g*(m.x-a.x)+2*x.y*w*(m.y-a.y)+d.x*d.x*g+d.y*d.y*w,2*d.x*g*(m.x-a.x)+2*d.y*w*(m.y-a.y),m.x*m.x*g-2*m.y*a.y*w-2*m.x*a.x*g+m.y*m.y*w+a.x*a.x*g+a.y*a.y*w-w*g).getRootsInInterval(0,1),k=!0,P=!1,E=void 0;try{for(var M,I=b[Symbol.iterator]();!(k=(M=I.next()).done);k=!0){var R=M.value;p.points.push(v.multiply(R*R*R).add(x.multiply(R*R).add(d.multiply(R).add(m))))}}catch(t){P=!0,E=t}finally{try{k||null==I.return||I.return()}finally{if(P)throw E}}return p.points.length>0&&(p.status="Intersection"),p}},{key:"intersectBezier3Line",value:function(e,n,i,r,a,s){var l,u,y,c,f=a.min(s),p=a.max(s),v=new t("No Intersection");l=e.multiply(-1),u=n.multiply(3),y=i.multiply(-3),c=l.add(u.add(y.add(r)));var x=new o(c.x,c.y);l=e.multiply(3),u=n.multiply(-6),y=i.multiply(3),c=l.add(u.add(y));var d=new o(c.x,c.y);l=e.multiply(-3),u=n.multiply(3),y=l.add(u);var m=new o(y.x,y.y),w=new o(e.x,e.y),g=new o(a.y-s.y,s.x-a.x),b=a.x*s.y-s.x*a.y,k=new h(g.dot(x),g.dot(d),g.dot(m),g.dot(w)+b).getRoots(),P=!0,E=!1,M=void 0;try{for(var I,R=k[Symbol.iterator]();!(P=(I=R.next()).done);P=!0){var S=I.value;if(0<=S&&S<=1){var C=e.lerp(n,S),X=n.lerp(i,S),N=i.lerp(r,S),A=C.lerp(X,S),L=X.lerp(N,S),Y=A.lerp(L,S);a.x===s.x?f.y<=Y.y&&Y.y<=p.y&&(v.status="Intersection",v.appendPoint(Y)):a.y===s.y?f.x<=Y.x&&Y.x<=p.x&&(v.status="Intersection",v.appendPoint(Y)):f.x<=Y.x&&Y.x<=p.x&&f.y<=Y.y&&Y.y<=p.y&&(v.status="Intersection",v.appendPoint(Y))}}}catch(t){E=!0,M=t}finally{try{P||null==R.return||R.return()}finally{if(E)throw M}}return v}},{key:"intersectBezier3Polygon",value:function(e,n,i,r,a){return t.intersectBezier3Polyline(e,n,i,r,C(a))}},{key:"intersectBezier3Polyline",value:function(e,n,i,r,a){for(var s=new t("No Intersection"),o=a.length,l=0;l<o-1;l++){var u=a[l],h=a[l+1],y=t.intersectBezier3Line(e,n,i,r,u,h);s.appendPoints(y.points)}return s.points.length>0&&(s.status="Intersection"),s}},{key:"intersectBezier3Rectangle",value:function(e,n,i,r,a,o){var l=a.min(o),u=a.max(o),h=new s(u.x,l.y),y=new s(l.x,u.y),c=t.intersectBezier3Line(e,n,i,r,l,h),f=t.intersectBezier3Line(e,n,i,r,h,u),p=t.intersectBezier3Line(e,n,i,r,u,y),v=t.intersectBezier3Line(e,n,i,r,y,l),x=new t("No Intersection");return x.appendPoints(c.points),x.appendPoints(f.points),x.appendPoints(p.points),x.appendPoints(v.points),x.points.length>0&&(x.status="Intersection"),x}},{key:"intersectCircleCircle",value:function(e,n,i,r){var a,o=n+r,l=Math.abs(n-r),u=e.distanceFrom(i);if(u>o)a=new t("Outside");else if(u<l)a=new t("Inside");else{a=new t("Intersection");var h=(n*n-r*r+u*u)/(2*u),y=Math.sqrt(n*n-h*h),c=e.lerp(i,h/u),f=y/u;a.points.push(new s(c.x-f*(i.y-e.y),c.y+f*(i.x-e.x))),a.points.push(new s(c.x+f*(i.y-e.y),c.y-f*(i.x-e.x)))}return a}},{key:"intersectCircleEllipse",value:function(e,n,i,r,a){return t.intersectEllipseEllipse(e,n,n,i,r,a)}},{key:"intersectCircleLine",value:function(e,n,i,r){var a,s=(r.x-i.x)*(r.x-i.x)+(r.y-i.y)*(r.y-i.y),o=2*((r.x-i.x)*(i.x-e.x)+(r.y-i.y)*(i.y-e.y)),l=o*o-4*s*(e.x*e.x+e.y*e.y+i.x*i.x+i.y*i.y-2*(e.x*i.x+e.y*i.y)-n*n);if(l<0)a=new t("Outside");else if(0===l)a=new t("Tangent");else{var u=Math.sqrt(l),h=(-o+u)/(2*s),y=(-o-u)/(2*s);(h<0||h>1)&&(y<0||y>1)?a=new t(h<0&&y<0||h>1&&y>1?"Outside":"Inside"):(a=new t("Intersection"),0<=h&&h<=1&&a.points.push(i.lerp(r,h)),0<=y&&y<=1&&a.points.push(i.lerp(r,y)))}return a}},{key:"intersectCirclePolygon",value:function(e,n,i){return t.intersectCirclePolyline(e,n,C(i))}},{key:"intersectCirclePolyline",value:function(e,n,i){for(var r,a=new t("No Intersection"),s=i.length,o=0;o<s-1;o++){var l=i[o],u=i[o+1];r=t.intersectCircleLine(e,n,l,u),a.appendPoints(r.points)}return a.points.length>0?a.status="Intersection":a.status=r.status,a}},{key:"intersectCircleRectangle",value:function(e,n,i,r){var a=i.min(r),o=i.max(r),l=new s(o.x,a.y),u=new s(a.x,o.y),h=t.intersectCircleLine(e,n,a,l),y=t.intersectCircleLine(e,n,l,o),c=t.intersectCircleLine(e,n,o,u),f=t.intersectCircleLine(e,n,u,a),p=new t("No Intersection");return p.appendPoints(h.points),p.appendPoints(y.points),p.appendPoints(c.points),p.appendPoints(f.points),p.points.length>0?p.status="Intersection":p.status=h.status,p}},{key:"intersectEllipseEllipse",value:function(e,n,i,r,a,o){for(var l,u,y,c,f,p,v,x,d,m,w,g,b,k,P,E=[i*i,0,n*n,-2*i*i*e.x,-2*n*n*e.y,i*i*e.x*e.x+n*n*e.y*e.y-n*n*i*i],M=[o*o,0,a*a,-2*o*o*r.x,-2*a*a*r.y,o*o*r.x*r.x+a*a*r.y*r.y-a*a*o*o],I=(u=M,y=(l=E)[0]*u[1]-u[0]*l[1],c=l[0]*u[2]-u[0]*l[2],f=l[0]*u[3]-u[0]*l[3],p=l[0]*u[4]-u[0]*l[4],v=l[0]*u[5]-u[0]*l[5],x=l[1]*u[2]-u[1]*l[2],d=l[1]*u[4]-u[1]*l[4],m=l[1]*u[5]-u[1]*l[5],w=l[2]*u[3]-u[2]*l[3],g=l[3]*u[4]-u[3]*l[4],b=l[3]*u[5]-u[3]*l[5],new h(y*x-c*c,y*(P=d-w)+f*x-2*c*p,y*(k=m+g)+f*P-p*p-2*c*v,y*b+f*k-2*p*v,f*b-v*v)).getRoots(),R=.001*(E[0]*E[0]+2*E[1]*E[1]+E[2]*E[2]),S=.001*(M[0]*M[0]+2*M[1]*M[1]+M[2]*M[2]),C=new t("No Intersection"),X=0;X<I.length;X++)for(var N=new h(E[0],E[3]+I[X]*E[1],E[5]+I[X]*(E[4]+I[X]*E[2])).getRoots(),A=0;A<N.length;A++){var L=(E[0]*N[A]+E[1]*I[X]+E[3])*N[A]+(E[2]*I[X]+E[4])*I[X]+E[5];Math.abs(L)<R&&(L=(M[0]*N[A]+M[1]*I[X]+M[3])*N[A]+(M[2]*I[X]+M[4])*I[X]+M[5],Math.abs(L)<S&&C.appendPoint(new s(N[A],I[X])))}return C.points.length>0&&(C.status="Intersection"),C}},{key:"intersectEllipseLine",value:function(e,n,i,r,a){var s,l=new o(r.x,r.y),u=o.fromPoints(r,a),h=new o(e.x,e.y),y=l.subtract(h),c=new o(u.x/(n*n),u.y/(i*i)),f=new o(y.x/(n*n),y.y/(i*i)),p=u.dot(c),v=u.dot(f),x=v*v-p*(e=y.dot(f)-1);if(x<0)s=new t("Outside");else if(x>0){var d=Math.sqrt(x),m=(-v-d)/p,w=(-v+d)/p;(m<0||1<m)&&(w<0||1<w)?s=new t(m<0&&w<0||m>1&&w>1?"Outside":"Inside"):(s=new t("Intersection"),0<=m&&m<=1&&s.appendPoint(r.lerp(a,m)),0<=w&&w<=1&&s.appendPoint(r.lerp(a,w)))}else{var g=-v/p;0<=g&&g<=1?(s=new t("Intersection")).appendPoint(r.lerp(a,g)):s=new t("Outside")}return s}},{key:"intersectEllipsePolygon",value:function(e,n,i,r){return t.intersectEllipsePolyline(e,n,i,C(r))}},{key:"intersectEllipsePolyline",value:function(e,n,i,r){for(var a=new t("No Intersection"),s=r.length,o=0;o<s-1;o++){var l=r[o],u=r[o+1],h=t.intersectEllipseLine(e,n,i,l,u);a.appendPoints(h.points)}return a.points.length>0&&(a.status="Intersection"),a}},{key:"intersectEllipseRectangle",value:function(e,n,i,r,a){var o=r.min(a),l=r.max(a),u=new s(l.x,o.y),h=new s(o.x,l.y),y=t.intersectEllipseLine(e,n,i,o,u),c=t.intersectEllipseLine(e,n,i,u,l),f=t.intersectEllipseLine(e,n,i,l,h),p=t.intersectEllipseLine(e,n,i,h,o),v=new t("No Intersection");return v.appendPoints(y.points),v.appendPoints(c.points),v.appendPoints(f.points),v.appendPoints(p.points),v.points.length>0&&(v.status="Intersection"),v}},{key:"intersectLineLine",value:function(e,n,i,r){var a,o=(r.x-i.x)*(e.y-i.y)-(r.y-i.y)*(e.x-i.x),l=(n.x-e.x)*(e.y-i.y)-(n.y-e.y)*(e.x-i.x),u=(r.y-i.y)*(n.x-e.x)-(r.x-i.x)*(n.y-e.y);if(0!==u){var h=o/u,y=l/u;0<=h&&h<=1&&0<=y&&y<=1?(a=new t("Intersection")).points.push(new s(e.x+h*(n.x-e.x),e.y+h*(n.y-e.y))):a=new t("No Intersection")}else a=new t(0===o||0===l?"Coincident":"Parallel");return a}},{key:"intersectLinePolygon",value:function(e,n,i){return t.intersectLinePolyline(e,n,C(i))}},{key:"intersectLinePolyline",value:function(e,n,i){for(var r=new t("No Intersection"),a=i.length,s=0;s<a-1;s++){var o=i[s],l=i[s+1],u=t.intersectLineLine(e,n,o,l);r.appendPoints(u.points)}return r.points.length>0&&(r.status="Intersection"),r}},{key:"intersectLineRectangle",value:function(e,n,i,r){var a=i.min(r),o=i.max(r),l=new s(o.x,a.y),u=new s(a.x,o.y),h=t.intersectLineLine(a,l,e,n),y=t.intersectLineLine(l,o,e,n),c=t.intersectLineLine(o,u,e,n),f=t.intersectLineLine(u,a,e,n),p=new t("No Intersection");return p.appendPoints(h.points),p.appendPoints(y.points),p.appendPoints(c.points),p.appendPoints(f.points),p.points.length>0&&(p.status="Intersection"),p}},{key:"intersectPolygonPolygon",value:function(e,n){return t.intersectPolylinePolyline(C(e),C(n))}},{key:"intersectPolygonPolyline",value:function(e,n){return t.intersectPolylinePolyline(C(e),n)}},{key:"intersectPolygonRectangle",value:function(e,n,i){return t.intersectPolylineRectangle(C(e),n,i)}},{key:"intersectPolylinePolyline",value:function(e,n){for(var i=new t("No Intersection"),r=e.length,a=0;a<r-1;a++){var s=e[a],o=e[a+1],l=t.intersectLinePolyline(s,o,n);i.appendPoints(l.points)}return i.points.length>0&&(i.status="Intersection"),i}},{key:"intersectPolylineRectangle",value:function(e,n,i){var r=n.min(i),a=n.max(i),o=new s(a.x,r.y),l=new s(r.x,a.y),u=t.intersectLinePolyline(r,o,e),h=t.intersectLinePolyline(o,a,e),y=t.intersectLinePolyline(a,l,e),c=t.intersectLinePolyline(l,r,e),f=new t("No Intersection");return f.appendPoints(u.points),f.appendPoints(h.points),f.appendPoints(y.points),f.appendPoints(c.points),f.points.length>0&&(f.status="Intersection"),f}},{key:"intersectRectangleRectangle",value:function(e,n,i,r){var a=e.min(n),o=e.max(n),l=new s(o.x,a.y),u=new s(a.x,o.y),h=t.intersectLineRectangle(a,l,i,r),y=t.intersectLineRectangle(l,o,i,r),c=t.intersectLineRectangle(o,u,i,r),f=t.intersectLineRectangle(u,a,i,r),p=new t("No Intersection");return p.appendPoints(h.points),p.appendPoints(y.points),p.appendPoints(c.points),p.appendPoints(f.points),p.points.length>0&&(p.status="Intersection"),p}},{key:"intersectRayRay",value:function(e,n,i,r){var a,o=(r.x-i.x)*(e.y-i.y)-(r.y-i.y)*(e.x-i.x),l=(n.x-e.x)*(e.y-i.y)-(n.y-e.y)*(e.x-i.x),u=(r.y-i.y)*(n.x-e.x)-(r.x-i.x)*(n.y-e.y);if(0!==u){var h=o/u;(a=new t("Intersection")).points.push(new s(e.x+h*(n.x-e.x),e.y+h*(n.y-e.y)))}else a=new t(0===o||0===l?"Coincident":"Parallel");return a}}]),t}(),N=function(){function t(){e(this,t)}return i(t,null,[{key:"arc",value:function(t,e,n,i,r,a){return k.arc.apply(k,arguments)}},{key:"quadraticBezier",value:function(t,e,n,i,r,a){return k.quadraticBezier.apply(k,arguments)}},{key:"cubicBezier",value:function(t,e,n,i,r,a,s,o){return k.cubicBezier.apply(k,arguments)}},{key:"circle",value:function(t,e,n){return k.circle.apply(k,arguments)}},{key:"ellipse",value:function(t,e,n,i){return k.ellipse.apply(k,arguments)}},{key:"line",value:function(t,e,n,i){return k.line.apply(k,arguments)}},{key:"path",value:function(t){return k.path.apply(k,arguments)}},{key:"polygon",value:function(t){return k.polygon.apply(k,arguments)}},{key:"polyline",value:function(t){return k.polyline.apply(k,arguments)}},{key:"rectangle",value:function(t,e,n,i){return k.rectangle.apply(k,arguments)}}]),t}(),A=function(){function t(){e(this,t)}return i(t,null,[{key:"arc",value:function(t,e,n,i,r){return k.arc.apply(k,arguments)}},{key:"quadraticBezier",value:function(t,e,n){return k.quadraticBezier.apply(k,arguments)}},{key:"cubicBezier",value:function(t,e,n,i){return k.cubicBezier.apply(k,arguments)}},{key:"circle",value:function(t,e){return k.circle.apply(k,arguments)}},{key:"ellipse",value:function(t,e,n){return k.ellipse.apply(k,arguments)}},{key:"line",value:function(t,e){return k.line.apply(k,arguments)}},{key:"path",value:function(t){return k.path.apply(k,arguments)}},{key:"polygon",value:function(t){return k.polygon.apply(k,arguments)}},{key:"polyline",value:function(t){return k.polyline.apply(k,arguments)}},{key:"rectangle",value:function(t,e){return k.rectangle.apply(k,arguments)}}]),t}(),L=function(){function t(){e(this,t)}return i(t,null,[{key:"circle",value:function(t){if(t instanceof SVGCircleElement==!1)throw new TypeError("Expected SVGCircleElement, but found ".concat(t));var e=new s(t.cx.baseVal.value,t.cy.baseVal.value),n=t.r.baseVal.value;return k.circle(e,n)}},{key:"ellipse",value:function(t){if(t instanceof SVGEllipseElement==!1)throw new TypeError("Expected SVGEllipseElement, but found ".concat(t));var e=new s(t.cx.baseVal.value,t.cy.baseVal.value),n=t.rx.baseVal.value,i=t.ry.baseVal.value;return k.ellipse(e,n,i)}},{key:"line",value:function(t){if(t instanceof SVGLineElement==!1)throw new TypeError("Expected SVGLineElement, but found ".concat(t));var e=new s(t.x1.baseVal.value,t.y1.baseVal.value),n=new s(t.x2.baseVal.value,t.y2.baseVal.value);return k.line(e,n)}},{key:"path",value:function(t){if(t instanceof SVGPathElement==!1)throw new TypeError("Expected SVGPathElement, but found ".concat(t));var e=t.getAttributeNS(null,"d");return k.path(e)}},{key:"polygon",value:function(t){if(t instanceof SVGPolygonElement==!1)throw new TypeError("Expected SVGPolygonElement, but found ".concat(t));for(var e=[],n=0;n<t.points.numberOfItems;n++){var i=t.points.getItem(n);e.push(new s(i.x,i.y))}return k.polygon(e)}},{key:"polyline",value:function(t){if(t instanceof SVGPolylineElement==!1)throw new TypeError("Expected SVGPolylineElement, but found ".concat(t));for(var e=[],n=0;n<t.points.numberOfItems;n++){var i=t.points.getItem(n);e.push(new s(i.x,i.y))}return k.polyline(e)}},{key:"rect",value:function(t){if(t instanceof SVGRectElement==!1)throw new TypeError("Expected SVGRectElement, but found ".concat(t));return k.rectangle(t.x.baseVal.value,t.y.baseVal.value,t.width.baseVal.value,t.height.baseVal.value,t.rx.baseVal.value,t.ry.baseVal.value)}},{key:"element",value:function(e){if(e instanceof SVGElement==!1)throw new TypeError("Expected SVGElement, but found ".concat(e));var n=e.tagName;switch(n){case"circle":return t.circle(e);case"ellipse":return t.ellipse(e);case"line":return t.line(e);case"path":return t.path(e);case"polygon":return t.polygon(e);case"polyline":return t.polyline(e);case"rect":return t.rect(e);default:throw new TypeError("Unrecognized element type: '".concat(n,"'"))}}}]),t}(),Y={pointInCircle:function(t,e,n){return o.fromPoints(e,t).length()<=n},pointInEllipse:function(t,e,n,i){var r=t.subtract(e);return r.x*r.x/(n*n)+r.y*r.y/(i*i)<=1},pointInPolyline:function(t,e){for(var n,i=e.length,r=0,a=e[0],s=1;s<=i;s++){var o=e[s%i],l=Math.min(a.y,o.y),u=Math.max(a.y,o.y),h=Math.max(a.x,o.x);a.y!==o.y&&l<t.y&&t.y<=u&&t.x<=h&&(n=(t.y-a.y)*(o.x-a.x)/(o.y-a.y)+a.x,(a.x===o.x||t.x<=n)&&r++),a=o}return r%2==1}};Y.pointInPolygon=Y.pointInPolyline,Y.pointInRectangle=function(t,e,n){return e.x<=t.x&&t.x<n.x&&e.y<=t.y&&t.y<n.y};export{A as AffineShapes,X as Intersection,k as IntersectionArgs,Y as IntersectionQuery,l as Matrix2D,s as Point2D,k as ShapeInfo,N as Shapes,L as SvgShapes,o as Vector2D};
//# sourceMappingURL=index-esm.min.js.map
